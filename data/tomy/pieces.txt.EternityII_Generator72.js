puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator72.js,Eternity II Generator 72".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator72.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,22,8,0,".split( splitreg ); p++;
pieces[ p ] = "0,8,21,22,".split( splitreg ); p++;
pieces[ p ] = "0,16,2,8,".split( splitreg ); p++;
pieces[ p ] = "0,22,11,16,".split( splitreg ); p++;
pieces[ p ] = "0,22,19,22,".split( splitreg ); p++;
pieces[ p ] = "0,12,18,22,".split( splitreg ); p++;
pieces[ p ] = "0,22,20,12,".split( splitreg ); p++;
pieces[ p ] = "0,22,14,22,".split( splitreg ); p++;
pieces[ p ] = "0,12,2,22,".split( splitreg ); p++;
pieces[ p ] = "0,4,3,12,".split( splitreg ); p++;
pieces[ p ] = "0,8,14,4,".split( splitreg ); p++;
pieces[ p ] = "0,4,13,8,".split( splitreg ); p++;
pieces[ p ] = "0,12,14,4,".split( splitreg ); p++;
pieces[ p ] = "0,22,11,12,".split( splitreg ); p++;
pieces[ p ] = "0,12,15,22,".split( splitreg ); p++;
pieces[ p ] = "0,0,8,12,".split( splitreg ); p++;
pieces[ p ] = "8,5,12,0,".split( splitreg ); p++;
pieces[ p ] = "21,2,9,5,".split( splitreg ); p++;
pieces[ p ] = "2,3,17,2,".split( splitreg ); p++;
pieces[ p ] = "11,1,15,3,".split( splitreg ); p++;
pieces[ p ] = "19,19,17,1,".split( splitreg ); p++;
pieces[ p ] = "18,6,1,19,".split( splitreg ); p++;
pieces[ p ] = "20,11,2,6,".split( splitreg ); p++;
pieces[ p ] = "14,9,10,11,".split( splitreg ); p++;
pieces[ p ] = "2,21,9,9,".split( splitreg ); p++;
pieces[ p ] = "3,1,5,21,".split( splitreg ); p++;
pieces[ p ] = "14,7,21,1,".split( splitreg ); p++;
pieces[ p ] = "13,13,5,7,".split( splitreg ); p++;
pieces[ p ] = "14,11,17,13,".split( splitreg ); p++;
pieces[ p ] = "11,21,17,11,".split( splitreg ); p++;
pieces[ p ] = "15,17,19,21,".split( splitreg ); p++;
pieces[ p ] = "8,0,16,17,".split( splitreg ); p++;
pieces[ p ] = "12,14,12,0,".split( splitreg ); p++;
pieces[ p ] = "9,20,14,14,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "15,17,6,6,".split( splitreg ); p++;
pieces[ p ] = "17,6,18,17,".split( splitreg ); p++;
pieces[ p ] = "1,2,5,6,".split( splitreg ); p++;
pieces[ p ] = "2,3,18,2,".split( splitreg ); p++;
pieces[ p ] = "10,20,15,3,".split( splitreg ); p++;
pieces[ p ] = "9,19,15,20,".split( splitreg ); p++;
pieces[ p ] = "5,9,18,19,".split( splitreg ); p++;
pieces[ p ] = "21,7,3,9,".split( splitreg ); p++;
pieces[ p ] = "5,21,7,7,".split( splitreg ); p++;
pieces[ p ] = "17,9,17,21,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "19,10,10,19,".split( splitreg ); p++;
pieces[ p ] = "16,0,16,10,".split( splitreg ); p++;
pieces[ p ] = "12,13,12,0,".split( splitreg ); p++;
pieces[ p ] = "14,20,10,13,".split( splitreg ); p++;
pieces[ p ] = "14,19,18,20,".split( splitreg ); p++;
pieces[ p ] = "6,5,10,19,".split( splitreg ); p++;
pieces[ p ] = "18,14,14,5,".split( splitreg ); p++;
pieces[ p ] = "5,5,3,14,".split( splitreg ); p++;
pieces[ p ] = "18,11,14,5,".split( splitreg ); p++;
pieces[ p ] = "15,21,9,11,".split( splitreg ); p++;
pieces[ p ] = "15,2,13,21,".split( splitreg ); p++;
pieces[ p ] = "18,2,7,2,".split( splitreg ); p++;
pieces[ p ] = "3,6,13,2,".split( splitreg ); p++;
pieces[ p ] = "7,17,11,6,".split( splitreg ); p++;
pieces[ p ] = "17,10,19,17,".split( splitreg ); p++;
pieces[ p ] = "17,15,7,10,".split( splitreg ); p++;
pieces[ p ] = "10,9,3,15,".split( splitreg ); p++;
pieces[ p ] = "16,0,16,9,".split( splitreg ); p++;
pieces[ p ] = "12,1,8,0,".split( splitreg ); p++;
pieces[ p ] = "10,3,21,1,".split( splitreg ); p++;
pieces[ p ] = "18,3,20,3,".split( splitreg ); p++;
pieces[ p ] = "10,9,11,3,".split( splitreg ); p++;
pieces[ p ] = "14,6,7,9,".split( splitreg ); p++;
pieces[ p ] = "3,2,20,6,".split( splitreg ); p++;
pieces[ p ] = "14,20,3,2,".split( splitreg ); p++;
pieces[ p ] = "9,14,3,20,".split( splitreg ); p++;
pieces[ p ] = "13,15,18,14,".split( splitreg ); p++;
pieces[ p ] = "7,15,10,15,".split( splitreg ); p++;
pieces[ p ] = "13,7,15,15,".split( splitreg ); p++;
pieces[ p ] = "11,1,19,7,".split( splitreg ); p++;
pieces[ p ] = "19,10,20,1,".split( splitreg ); p++;
pieces[ p ] = "7,9,15,10,".split( splitreg ); p++;
pieces[ p ] = "3,13,3,9,".split( splitreg ); p++;
pieces[ p ] = "16,0,16,13,".split( splitreg ); p++;
pieces[ p ] = "8,10,4,0,".split( splitreg ); p++;
pieces[ p ] = "21,1,14,10,".split( splitreg ); p++;
pieces[ p ] = "20,11,9,1,".split( splitreg ); p++;
pieces[ p ] = "11,5,5,11,".split( splitreg ); p++;
pieces[ p ] = "7,14,9,5,".split( splitreg ); p++;
pieces[ p ] = "20,17,15,14,".split( splitreg ); p++;
pieces[ p ] = "3,19,18,17,".split( splitreg ); p++;
pieces[ p ] = "3,5,21,19,".split( splitreg ); p++;
pieces[ p ] = "18,6,6,5,".split( splitreg ); p++;
pieces[ p ] = "10,21,13,6,".split( splitreg ); p++;
pieces[ p ] = "15,13,2,21,".split( splitreg ); p++;
pieces[ p ] = "19,10,13,13,".split( splitreg ); p++;
pieces[ p ] = "20,20,1,10,".split( splitreg ); p++;
pieces[ p ] = "15,6,7,20,".split( splitreg ); p++;
pieces[ p ] = "3,15,20,6,".split( splitreg ); p++;
pieces[ p ] = "16,0,8,15,".split( splitreg ); p++;
pieces[ p ] = "4,11,22,0,".split( splitreg ); p++;
pieces[ p ] = "14,21,7,11,".split( splitreg ); p++;
pieces[ p ] = "9,11,21,21,".split( splitreg ); p++;
pieces[ p ] = "5,1,10,11,".split( splitreg ); p++;
pieces[ p ] = "9,20,11,1,".split( splitreg ); p++;
pieces[ p ] = "15,11,21,20,".split( splitreg ); p++;
pieces[ p ] = "18,9,6,11,".split( splitreg ); p++;
pieces[ p ] = "21,9,14,9,".split( splitreg ); p++;
pieces[ p ] = "6,9,9,9,".split( splitreg ); p++;
pieces[ p ] = "13,11,9,9,".split( splitreg ); p++;
pieces[ p ] = "2,11,5,11,".split( splitreg ); p++;
pieces[ p ] = "13,18,7,11,".split( splitreg ); p++;
pieces[ p ] = "1,14,6,18,".split( splitreg ); p++;
pieces[ p ] = "7,14,2,14,".split( splitreg ); p++;
pieces[ p ] = "20,20,6,14,".split( splitreg ); p++;
pieces[ p ] = "8,0,8,20,".split( splitreg ); p++;
pieces[ p ] = "22,13,4,0,".split( splitreg ); p++;
pieces[ p ] = "7,2,15,13,".split( splitreg ); p++;
pieces[ p ] = "21,6,3,2,".split( splitreg ); p++;
pieces[ p ] = "10,17,10,6,".split( splitreg ); p++;
pieces[ p ] = "11,13,1,17,".split( splitreg ); p++;
pieces[ p ] = "21,2,18,13,".split( splitreg ); p++;
pieces[ p ] = "6,5,10,2,".split( splitreg ); p++;
pieces[ p ] = "14,17,21,5,".split( splitreg ); p++;
pieces[ p ] = "9,13,19,17,".split( splitreg ); p++;
pieces[ p ] = "9,10,13,13,".split( splitreg ); p++;
pieces[ p ] = "5,14,2,10,".split( splitreg ); p++;
pieces[ p ] = "7,17,15,14,".split( splitreg ); p++;
pieces[ p ] = "6,9,20,17,".split( splitreg ); p++;
pieces[ p ] = "2,18,6,9,".split( splitreg ); p++;
pieces[ p ] = "6,5,15,18,".split( splitreg ); p++;
pieces[ p ] = "8,0,22,5,".split( splitreg ); p++;
pieces[ p ] = "4,5,4,0,".split( splitreg ); p++;
pieces[ p ] = "15,10,1,5,".split( splitreg ); p++;
pieces[ p ] = "3,1,1,10,".split( splitreg ); p++;
pieces[ p ] = "10,15,15,1,".split( splitreg ); p++;
pieces[ p ] = "1,14,6,15,".split( splitreg ); p++;
pieces[ p ] = "18,7,17,14,".split( splitreg ); p++;
pieces[ p ] = "10,14,5,7,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "19,5,6,3,".split( splitreg ); p++;
pieces[ p ] = "13,7,13,5,".split( splitreg ); p++;
pieces[ p ] = "2,15,5,7,".split( splitreg ); p++;
pieces[ p ] = "15,11,20,15,".split( splitreg ); p++;
pieces[ p ] = "20,20,17,11,".split( splitreg ); p++;
pieces[ p ] = "6,5,5,20,".split( splitreg ); p++;
pieces[ p ] = "15,9,2,5,".split( splitreg ); p++;
pieces[ p ] = "22,0,22,9,".split( splitreg ); p++;
pieces[ p ] = "4,1,16,0,".split( splitreg ); p++;
pieces[ p ] = "1,18,19,1,".split( splitreg ); p++;
pieces[ p ] = "1,11,2,18,".split( splitreg ); p++;
pieces[ p ] = "15,11,18,11,".split( splitreg ); p++;
pieces[ p ] = "6,5,13,11,".split( splitreg ); p++;
pieces[ p ] = "17,1,20,5,".split( splitreg ); p++;
pieces[ p ] = "5,1,19,1,".split( splitreg ); p++;
pieces[ p ] = "3,1,13,1,".split( splitreg ); p++;
pieces[ p ] = "6,20,19,1,".split( splitreg ); p++;
pieces[ p ] = "13,20,15,20,".split( splitreg ); p++;
pieces[ p ] = "5,10,21,20,".split( splitreg ); p++;
pieces[ p ] = "20,13,20,10,".split( splitreg ); p++;
pieces[ p ] = "17,17,1,13,".split( splitreg ); p++;
pieces[ p ] = "5,21,10,17,".split( splitreg ); p++;
pieces[ p ] = "2,13,18,21,".split( splitreg ); p++;
pieces[ p ] = "22,0,12,13,".split( splitreg ); p++;
pieces[ p ] = "16,1,8,0,".split( splitreg ); p++;
pieces[ p ] = "19,18,2,1,".split( splitreg ); p++;
pieces[ p ] = "2,10,17,18,".split( splitreg ); p++;
pieces[ p ] = "18,21,19,10,".split( splitreg ); p++;
pieces[ p ] = "13,11,19,21,".split( splitreg ); p++;
pieces[ p ] = "20,21,15,11,".split( splitreg ); p++;
pieces[ p ] = "19,15,7,21,".split( splitreg ); p++;
pieces[ p ] = "13,19,9,15,".split( splitreg ); p++;
pieces[ p ] = "19,11,20,19,".split( splitreg ); p++;
pieces[ p ] = "15,10,17,11,".split( splitreg ); p++;
pieces[ p ] = "21,18,20,10,".split( splitreg ); p++;
pieces[ p ] = "20,3,7,18,".split( splitreg ); p++;
pieces[ p ] = "1,6,7,3,".split( splitreg ); p++;
pieces[ p ] = "10,18,11,6,".split( splitreg ); p++;
pieces[ p ] = "18,10,14,18,".split( splitreg ); p++;
pieces[ p ] = "12,0,8,10,".split( splitreg ); p++;
pieces[ p ] = "8,9,12,0,".split( splitreg ); p++;
pieces[ p ] = "2,6,5,9,".split( splitreg ); p++;
pieces[ p ] = "17,20,18,6,".split( splitreg ); p++;
pieces[ p ] = "19,17,3,20,".split( splitreg ); p++;
pieces[ p ] = "19,6,2,17,".split( splitreg ); p++;
pieces[ p ] = "15,21,6,6,".split( splitreg ); p++;
pieces[ p ] = "7,19,3,21,".split( splitreg ); p++;
pieces[ p ] = "9,2,15,19,".split( splitreg ); p++;
pieces[ p ] = "20,21,1,2,".split( splitreg ); p++;
pieces[ p ] = "17,19,14,21,".split( splitreg ); p++;
pieces[ p ] = "20,17,9,19,".split( splitreg ); p++;
pieces[ p ] = "7,3,19,17,".split( splitreg ); p++;
pieces[ p ] = "7,21,20,3,".split( splitreg ); p++;
pieces[ p ] = "11,2,5,21,".split( splitreg ); p++;
pieces[ p ] = "14,21,17,2,".split( splitreg ); p++;
pieces[ p ] = "8,0,4,21,".split( splitreg ); p++;
pieces[ p ] = "12,7,12,0,".split( splitreg ); p++;
pieces[ p ] = "5,1,2,7,".split( splitreg ); p++;
pieces[ p ] = "18,6,9,1,".split( splitreg ); p++;
pieces[ p ] = "3,5,18,6,".split( splitreg ); p++;
pieces[ p ] = "2,6,15,5,".split( splitreg ); p++;
pieces[ p ] = "6,21,14,6,".split( splitreg ); p++;
pieces[ p ] = "3,17,6,21,".split( splitreg ); p++;
pieces[ p ] = "15,1,9,17,".split( splitreg ); p++;
pieces[ p ] = "1,14,19,1,".split( splitreg ); p++;
pieces[ p ] = "14,1,10,14,".split( splitreg ); p++;
pieces[ p ] = "9,7,11,1,".split( splitreg ); p++;
pieces[ p ] = "19,10,10,7,".split( splitreg ); p++;
pieces[ p ] = "20,13,5,10,".split( splitreg ); p++;
pieces[ p ] = "5,18,5,13,".split( splitreg ); p++;
pieces[ p ] = "17,15,7,18,".split( splitreg ); p++;
pieces[ p ] = "4,0,16,15,".split( splitreg ); p++;
pieces[ p ] = "12,9,22,0,".split( splitreg ); p++;
pieces[ p ] = "2,14,11,9,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "18,13,9,3,".split( splitreg ); p++;
pieces[ p ] = "15,3,19,13,".split( splitreg ); p++;
pieces[ p ] = "14,19,2,3,".split( splitreg ); p++;
pieces[ p ] = "6,1,7,19,".split( splitreg ); p++;
pieces[ p ] = "9,13,2,1,".split( splitreg ); p++;
pieces[ p ] = "19,15,11,13,".split( splitreg ); p++;
pieces[ p ] = "10,1,7,15,".split( splitreg ); p++;
pieces[ p ] = "11,13,6,1,".split( splitreg ); p++;
pieces[ p ] = "10,19,3,13,".split( splitreg ); p++;
pieces[ p ] = "5,13,7,19,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "7,14,6,18,".split( splitreg ); p++;
pieces[ p ] = "16,0,12,14,".split( splitreg ); p++;
pieces[ p ] = "22,2,4,0,".split( splitreg ); p++;
pieces[ p ] = "11,20,20,2,".split( splitreg ); p++;
pieces[ p ] = "18,21,5,20,".split( splitreg ); p++;
pieces[ p ] = "9,10,7,21,".split( splitreg ); p++;
pieces[ p ] = "19,14,1,10,".split( splitreg ); p++;
pieces[ p ] = "2,17,18,14,".split( splitreg ); p++;
pieces[ p ] = "7,2,7,17,".split( splitreg ); p++;
pieces[ p ] = "2,11,18,2,".split( splitreg ); p++;
pieces[ p ] = "11,19,17,11,".split( splitreg ); p++;
pieces[ p ] = "7,18,13,19,".split( splitreg ); p++;
pieces[ p ] = "6,7,18,18,".split( splitreg ); p++;
pieces[ p ] = "3,2,21,7,".split( splitreg ); p++;
pieces[ p ] = "7,17,3,2,".split( splitreg ); p++;
pieces[ p ] = "10,19,3,17,".split( splitreg ); p++;
pieces[ p ] = "6,13,3,19,".split( splitreg ); p++;
pieces[ p ] = "12,0,4,13,".split( splitreg ); p++;
pieces[ p ] = "4,16,0,0,".split( splitreg ); p++;
pieces[ p ] = "20,8,0,16,".split( splitreg ); p++;
pieces[ p ] = "5,22,0,8,".split( splitreg ); p++;
pieces[ p ] = "7,4,0,22,".split( splitreg ); p++;
pieces[ p ] = "1,4,0,4,".split( splitreg ); p++;
pieces[ p ] = "18,16,0,4,".split( splitreg ); p++;
pieces[ p ] = "7,4,0,16,".split( splitreg ); p++;
pieces[ p ] = "18,8,0,4,".split( splitreg ); p++;
pieces[ p ] = "17,16,0,8,".split( splitreg ); p++;
pieces[ p ] = "13,8,0,16,".split( splitreg ); p++;
pieces[ p ] = "18,4,0,8,".split( splitreg ); p++;
pieces[ p ] = "21,22,0,4,".split( splitreg ); p++;
pieces[ p ] = "3,16,0,22,".split( splitreg ); p++;
pieces[ p ] = "3,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "3,16,0,12,".split( splitreg ); p++;
pieces[ p ] = "4,0,0,16,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
