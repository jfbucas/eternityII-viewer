puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator94.js,Eternity II Generator 94".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator94.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,16,22,0,".split( splitreg ); p++;
pieces[ p ] = "0,8,1,16,".split( splitreg ); p++;
pieces[ p ] = "0,8,5,8,".split( splitreg ); p++;
pieces[ p ] = "0,4,3,8,".split( splitreg ); p++;
pieces[ p ] = "0,22,7,4,".split( splitreg ); p++;
pieces[ p ] = "0,12,13,22,".split( splitreg ); p++;
pieces[ p ] = "0,12,10,12,".split( splitreg ); p++;
pieces[ p ] = "0,12,11,12,".split( splitreg ); p++;
pieces[ p ] = "0,4,5,12,".split( splitreg ); p++;
pieces[ p ] = "0,8,10,4,".split( splitreg ); p++;
pieces[ p ] = "0,22,15,8,".split( splitreg ); p++;
pieces[ p ] = "0,16,1,22,".split( splitreg ); p++;
pieces[ p ] = "0,16,19,16,".split( splitreg ); p++;
pieces[ p ] = "0,12,20,16,".split( splitreg ); p++;
pieces[ p ] = "0,12,19,12,".split( splitreg ); p++;
pieces[ p ] = "0,0,16,12,".split( splitreg ); p++;
pieces[ p ] = "22,21,8,0,".split( splitreg ); p++;
pieces[ p ] = "1,2,15,21,".split( splitreg ); p++;
pieces[ p ] = "5,5,17,2,".split( splitreg ); p++;
pieces[ p ] = "3,14,6,5,".split( splitreg ); p++;
pieces[ p ] = "7,1,2,14,".split( splitreg ); p++;
pieces[ p ] = "13,13,15,1,".split( splitreg ); p++;
pieces[ p ] = "10,17,18,13,".split( splitreg ); p++;
pieces[ p ] = "11,13,14,17,".split( splitreg ); p++;
pieces[ p ] = "5,10,14,13,".split( splitreg ); p++;
pieces[ p ] = "10,17,7,10,".split( splitreg ); p++;
pieces[ p ] = "15,21,7,17,".split( splitreg ); p++;
pieces[ p ] = "1,2,1,21,".split( splitreg ); p++;
pieces[ p ] = "19,20,2,2,".split( splitreg ); p++;
pieces[ p ] = "20,6,17,20,".split( splitreg ); p++;
pieces[ p ] = "19,19,13,6,".split( splitreg ); p++;
pieces[ p ] = "16,0,12,19,".split( splitreg ); p++;
pieces[ p ] = "8,9,4,0,".split( splitreg ); p++;
pieces[ p ] = "15,20,17,9,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "6,15,1,6,".split( splitreg ); p++;
pieces[ p ] = "2,17,13,15,".split( splitreg ); p++;
pieces[ p ] = "15,7,21,17,".split( splitreg ); p++;
pieces[ p ] = "18,9,2,7,".split( splitreg ); p++;
pieces[ p ] = "14,3,17,9,".split( splitreg ); p++;
pieces[ p ] = "14,5,15,3,".split( splitreg ); p++;
pieces[ p ] = "7,7,1,5,".split( splitreg ); p++;
pieces[ p ] = "7,1,17,7,".split( splitreg ); p++;
pieces[ p ] = "1,3,3,1,".split( splitreg ); p++;
pieces[ p ] = "2,9,1,3,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "13,2,9,19,".split( splitreg ); p++;
pieces[ p ] = "12,0,12,2,".split( splitreg ); p++;
pieces[ p ] = "4,15,8,0,".split( splitreg ); p++;
pieces[ p ] = "17,9,19,15,".split( splitreg ); p++;
pieces[ p ] = "14,15,3,9,".split( splitreg ); p++;
pieces[ p ] = "1,14,13,15,".split( splitreg ); p++;
pieces[ p ] = "13,11,7,14,".split( splitreg ); p++;
pieces[ p ] = "21,9,18,11,".split( splitreg ); p++;
pieces[ p ] = "2,3,13,9,".split( splitreg ); p++;
pieces[ p ] = "17,5,17,3,".split( splitreg ); p++;
pieces[ p ] = "15,17,17,5,".split( splitreg ); p++;
pieces[ p ] = "1,14,2,17,".split( splitreg ); p++;
pieces[ p ] = "17,10,11,14,".split( splitreg ); p++;
pieces[ p ] = "3,7,13,10,".split( splitreg ); p++;
pieces[ p ] = "1,20,17,7,".split( splitreg ); p++;
pieces[ p ] = "17,21,10,20,".split( splitreg ); p++;
pieces[ p ] = "9,21,3,21,".split( splitreg ); p++;
pieces[ p ] = "12,0,16,21,".split( splitreg ); p++;
pieces[ p ] = "8,2,16,0,".split( splitreg ); p++;
pieces[ p ] = "19,6,20,2,".split( splitreg ); p++;
pieces[ p ] = "3,6,14,6,".split( splitreg ); p++;
pieces[ p ] = "13,14,21,6,".split( splitreg ); p++;
pieces[ p ] = "7,3,13,14,".split( splitreg ); p++;
pieces[ p ] = "18,14,11,3,".split( splitreg ); p++;
pieces[ p ] = "13,1,6,14,".split( splitreg ); p++;
pieces[ p ] = "17,2,7,1,".split( splitreg ); p++;
pieces[ p ] = "17,18,3,2,".split( splitreg ); p++;
pieces[ p ] = "2,9,7,18,".split( splitreg ); p++;
pieces[ p ] = "11,18,20,9,".split( splitreg ); p++;
pieces[ p ] = "13,11,19,18,".split( splitreg ); p++;
pieces[ p ] = "17,18,17,11,".split( splitreg ); p++;
pieces[ p ] = "10,21,19,18,".split( splitreg ); p++;
pieces[ p ] = "3,7,21,21,".split( splitreg ); p++;
pieces[ p ] = "16,0,12,7,".split( splitreg ); p++;
pieces[ p ] = "16,5,8,0,".split( splitreg ); p++;
pieces[ p ] = "20,9,20,5,".split( splitreg ); p++;
pieces[ p ] = "14,20,19,9,".split( splitreg ); p++;
pieces[ p ] = "21,13,13,20,".split( splitreg ); p++;
pieces[ p ] = "13,2,7,13,".split( splitreg ); p++;
pieces[ p ] = "11,6,6,2,".split( splitreg ); p++;
pieces[ p ] = "6,17,13,6,".split( splitreg ); p++;
pieces[ p ] = "7,6,15,17,".split( splitreg ); p++;
pieces[ p ] = "3,11,18,6,".split( splitreg ); p++;
pieces[ p ] = "7,20,9,11,".split( splitreg ); p++;
pieces[ p ] = "20,20,17,20,".split( splitreg ); p++;
pieces[ p ] = "19,20,3,20,".split( splitreg ); p++;
pieces[ p ] = "17,5,11,20,".split( splitreg ); p++;
pieces[ p ] = "19,18,15,5,".split( splitreg ); p++;
pieces[ p ] = "21,6,14,18,".split( splitreg ); p++;
pieces[ p ] = "12,0,22,6,".split( splitreg ); p++;
pieces[ p ] = "8,14,4,0,".split( splitreg ); p++;
pieces[ p ] = "20,11,6,14,".split( splitreg ); p++;
pieces[ p ] = "19,20,5,11,".split( splitreg ); p++;
pieces[ p ] = "13,10,19,20,".split( splitreg ); p++;
pieces[ p ] = "7,13,5,10,".split( splitreg ); p++;
pieces[ p ] = "6,20,19,13,".split( splitreg ); p++;
pieces[ p ] = "13,2,5,20,".split( splitreg ); p++;
pieces[ p ] = "15,11,9,2,".split( splitreg ); p++;
pieces[ p ] = "18,9,5,11,".split( splitreg ); p++;
pieces[ p ] = "9,3,17,9,".split( splitreg ); p++;
pieces[ p ] = "17,19,13,3,".split( splitreg ); p++;
pieces[ p ] = "3,11,19,19,".split( splitreg ); p++;
pieces[ p ] = "11,20,18,11,".split( splitreg ); p++;
pieces[ p ] = "15,14,1,20,".split( splitreg ); p++;
pieces[ p ] = "14,2,3,14,".split( splitreg ); p++;
pieces[ p ] = "22,0,8,2,".split( splitreg ); p++;
pieces[ p ] = "4,10,4,0,".split( splitreg ); p++;
pieces[ p ] = "6,3,2,10,".split( splitreg ); p++;
pieces[ p ] = "5,3,2,3,".split( splitreg ); p++;
pieces[ p ] = "19,19,2,3,".split( splitreg ); p++;
pieces[ p ] = "5,17,9,19,".split( splitreg ); p++;
pieces[ p ] = "19,17,1,17,".split( splitreg ); p++;
pieces[ p ] = "5,20,19,17,".split( splitreg ); p++;
pieces[ p ] = "9,9,21,20,".split( splitreg ); p++;
pieces[ p ] = "5,14,7,9,".split( splitreg ); p++;
pieces[ p ] = "17,20,7,14,".split( splitreg ); p++;
pieces[ p ] = "13,21,14,20,".split( splitreg ); p++;
pieces[ p ] = "19,5,15,21,".split( splitreg ); p++;
pieces[ p ] = "18,1,21,5,".split( splitreg ); p++;
pieces[ p ] = "1,7,11,1,".split( splitreg ); p++;
pieces[ p ] = "3,20,5,7,".split( splitreg ); p++;
pieces[ p ] = "8,0,12,20,".split( splitreg ); p++;
pieces[ p ] = "4,7,12,0,".split( splitreg ); p++;
pieces[ p ] = "2,18,9,7,".split( splitreg ); p++;
pieces[ p ] = "2,3,10,18,".split( splitreg ); p++;
pieces[ p ] = "2,21,3,3,".split( splitreg ); p++;
pieces[ p ] = "9,19,5,21,".split( splitreg ); p++;
pieces[ p ] = "1,21,1,19,".split( splitreg ); p++;
pieces[ p ] = "19,14,10,21,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "7,6,13,3,".split( splitreg ); p++;
pieces[ p ] = "7,11,15,6,".split( splitreg ); p++;
pieces[ p ] = "14,10,18,11,".split( splitreg ); p++;
pieces[ p ] = "15,11,9,10,".split( splitreg ); p++;
pieces[ p ] = "21,13,13,11,".split( splitreg ); p++;
pieces[ p ] = "11,19,17,13,".split( splitreg ); p++;
pieces[ p ] = "5,11,2,19,".split( splitreg ); p++;
pieces[ p ] = "12,0,16,11,".split( splitreg ); p++;
pieces[ p ] = "12,3,8,0,".split( splitreg ); p++;
pieces[ p ] = "9,1,18,3,".split( splitreg ); p++;
pieces[ p ] = "10,6,15,1,".split( splitreg ); p++;
pieces[ p ] = "3,9,13,6,".split( splitreg ); p++;
pieces[ p ] = "5,7,7,9,".split( splitreg ); p++;
pieces[ p ] = "1,21,21,7,".split( splitreg ); p++;
pieces[ p ] = "10,9,20,21,".split( splitreg ); p++;
pieces[ p ] = "3,10,2,9,".split( splitreg ); p++;
pieces[ p ] = "13,20,2,10,".split( splitreg ); p++;
pieces[ p ] = "15,7,3,20,".split( splitreg ); p++;
pieces[ p ] = "18,15,6,7,".split( splitreg ); p++;
pieces[ p ] = "9,9,6,15,".split( splitreg ); p++;
pieces[ p ] = "13,3,11,9,".split( splitreg ); p++;
pieces[ p ] = "17,7,9,3,".split( splitreg ); p++;
pieces[ p ] = "2,5,15,7,".split( splitreg ); p++;
pieces[ p ] = "16,0,4,5,".split( splitreg ); p++;
pieces[ p ] = "8,18,4,0,".split( splitreg ); p++;
pieces[ p ] = "18,18,2,18,".split( splitreg ); p++;
pieces[ p ] = "15,20,11,18,".split( splitreg ); p++;
pieces[ p ] = "13,15,1,20,".split( splitreg ); p++;
pieces[ p ] = "7,10,17,15,".split( splitreg ); p++;
pieces[ p ] = "21,18,14,10,".split( splitreg ); p++;
pieces[ p ] = "20,13,9,18,".split( splitreg ); p++;
pieces[ p ] = "2,14,6,13,".split( splitreg ); p++;
pieces[ p ] = "2,14,6,14,".split( splitreg ); p++;
pieces[ p ] = "3,18,10,14,".split( splitreg ); p++;
pieces[ p ] = "6,13,19,18,".split( splitreg ); p++;
pieces[ p ] = "6,1,5,13,".split( splitreg ); p++;
pieces[ p ] = "11,6,18,1,".split( splitreg ); p++;
pieces[ p ] = "9,6,19,6,".split( splitreg ); p++;
pieces[ p ] = "15,11,7,6,".split( splitreg ); p++;
pieces[ p ] = "4,0,22,11,".split( splitreg ); p++;
pieces[ p ] = "4,2,22,0,".split( splitreg ); p++;
pieces[ p ] = "2,2,10,2,".split( splitreg ); p++;
pieces[ p ] = "11,18,15,2,".split( splitreg ); p++;
pieces[ p ] = "1,17,18,18,".split( splitreg ); p++;
pieces[ p ] = "17,14,19,17,".split( splitreg ); p++;
pieces[ p ] = "14,11,5,14,".split( splitreg ); p++;
pieces[ p ] = "9,15,1,11,".split( splitreg ); p++;
pieces[ p ] = "6,19,10,15,".split( splitreg ); p++;
pieces[ p ] = "6,10,13,19,".split( splitreg ); p++;
pieces[ p ] = "10,11,6,10,".split( splitreg ); p++;
pieces[ p ] = "19,5,18,11,".split( splitreg ); p++;
pieces[ p ] = "5,10,19,5,".split( splitreg ); p++;
pieces[ p ] = "18,14,20,10,".split( splitreg ); p++;
pieces[ p ] = "19,17,6,14,".split( splitreg ); p++;
pieces[ p ] = "7,21,10,17,".split( splitreg ); p++;
pieces[ p ] = "22,0,22,21,".split( splitreg ); p++;
pieces[ p ] = "22,18,22,0,".split( splitreg ); p++;
pieces[ p ] = "10,1,10,18,".split( splitreg ); p++;
pieces[ p ] = "15,11,9,1,".split( splitreg ); p++;
pieces[ p ] = "18,13,5,11,".split( splitreg ); p++;
pieces[ p ] = "19,5,15,13,".split( splitreg ); p++;
pieces[ p ] = "5,15,9,5,".split( splitreg ); p++;
pieces[ p ] = "1,1,15,15,".split( splitreg ); p++;
pieces[ p ] = "10,2,21,1,".split( splitreg ); p++;
pieces[ p ] = "13,9,21,2,".split( splitreg ); p++;
pieces[ p ] = "6,2,5,9,".split( splitreg ); p++;
pieces[ p ] = "18,7,6,2,".split( splitreg ); p++;
pieces[ p ] = "19,10,11,7,".split( splitreg ); p++;
pieces[ p ] = "20,5,14,10,".split( splitreg ); p++;
pieces[ p ] = "6,14,5,5,".split( splitreg ); p++;
pieces[ p ] = "10,10,17,14,".split( splitreg ); p++;
pieces[ p ] = "22,0,22,10,".split( splitreg ); p++;
pieces[ p ] = "22,1,4,0,".split( splitreg ); p++;
pieces[ p ] = "10,14,10,1,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "5,9,3,3,".split( splitreg ); p++;
pieces[ p ] = "15,17,19,9,".split( splitreg ); p++;
pieces[ p ] = "9,2,11,17,".split( splitreg ); p++;
pieces[ p ] = "15,15,13,2,".split( splitreg ); p++;
pieces[ p ] = "21,18,11,15,".split( splitreg ); p++;
pieces[ p ] = "21,19,10,18,".split( splitreg ); p++;
pieces[ p ] = "5,1,6,19,".split( splitreg ); p++;
pieces[ p ] = "6,21,13,1,".split( splitreg ); p++;
pieces[ p ] = "11,5,3,21,".split( splitreg ); p++;
pieces[ p ] = "14,13,7,5,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "17,15,10,18,".split( splitreg ); p++;
pieces[ p ] = "22,0,8,15,".split( splitreg ); p++;
pieces[ p ] = "4,19,12,0,".split( splitreg ); p++;
pieces[ p ] = "10,21,20,19,".split( splitreg ); p++;
pieces[ p ] = "18,20,1,21,".split( splitreg ); p++;
pieces[ p ] = "3,19,6,20,".split( splitreg ); p++;
pieces[ p ] = "19,14,21,19,".split( splitreg ); p++;
pieces[ p ] = "11,2,1,14,".split( splitreg ); p++;
pieces[ p ] = "13,14,20,2,".split( splitreg ); p++;
pieces[ p ] = "11,18,7,14,".split( splitreg ); p++;
pieces[ p ] = "10,21,11,18,".split( splitreg ); p++;
pieces[ p ] = "6,21,21,21,".split( splitreg ); p++;
pieces[ p ] = "13,5,15,21,".split( splitreg ); p++;
pieces[ p ] = "3,1,18,5,".split( splitreg ); p++;
pieces[ p ] = "7,7,6,1,".split( splitreg ); p++;
pieces[ p ] = "10,15,1,7,".split( splitreg ); p++;
pieces[ p ] = "10,9,20,15,".split( splitreg ); p++;
pieces[ p ] = "8,0,22,9,".split( splitreg ); p++;
pieces[ p ] = "12,8,0,0,".split( splitreg ); p++;
pieces[ p ] = "20,16,0,8,".split( splitreg ); p++;
pieces[ p ] = "1,16,0,16,".split( splitreg ); p++;
pieces[ p ] = "6,16,0,16,".split( splitreg ); p++;
pieces[ p ] = "21,4,0,16,".split( splitreg ); p++;
pieces[ p ] = "1,16,0,4,".split( splitreg ); p++;
pieces[ p ] = "20,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "7,8,0,12,".split( splitreg ); p++;
pieces[ p ] = "11,16,0,8,".split( splitreg ); p++;
pieces[ p ] = "21,22,0,16,".split( splitreg ); p++;
pieces[ p ] = "15,22,0,22,".split( splitreg ); p++;
pieces[ p ] = "18,4,0,22,".split( splitreg ); p++;
pieces[ p ] = "6,4,0,4,".split( splitreg ); p++;
pieces[ p ] = "1,8,0,4,".split( splitreg ); p++;
pieces[ p ] = "20,4,0,8,".split( splitreg ); p++;
pieces[ p ] = "22,0,0,4,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
