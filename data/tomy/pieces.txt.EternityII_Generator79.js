puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator79.js,Eternity II Generator 79".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator79.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,16,22,0,".split( splitreg ); p++;
pieces[ p ] = "0,22,6,16,".split( splitreg ); p++;
pieces[ p ] = "0,4,10,22,".split( splitreg ); p++;
pieces[ p ] = "0,22,10,4,".split( splitreg ); p++;
pieces[ p ] = "0,16,5,22,".split( splitreg ); p++;
pieces[ p ] = "0,4,11,16,".split( splitreg ); p++;
pieces[ p ] = "0,8,14,4,".split( splitreg ); p++;
pieces[ p ] = "0,8,6,8,".split( splitreg ); p++;
pieces[ p ] = "0,12,9,8,".split( splitreg ); p++;
pieces[ p ] = "0,8,10,12,".split( splitreg ); p++;
pieces[ p ] = "0,12,13,8,".split( splitreg ); p++;
pieces[ p ] = "0,4,1,12,".split( splitreg ); p++;
pieces[ p ] = "0,16,20,4,".split( splitreg ); p++;
pieces[ p ] = "0,16,3,16,".split( splitreg ); p++;
pieces[ p ] = "0,8,6,16,".split( splitreg ); p++;
pieces[ p ] = "0,0,16,8,".split( splitreg ); p++;
pieces[ p ] = "22,2,4,0,".split( splitreg ); p++;
pieces[ p ] = "6,6,7,2,".split( splitreg ); p++;
pieces[ p ] = "10,3,17,6,".split( splitreg ); p++;
pieces[ p ] = "10,15,19,3,".split( splitreg ); p++;
pieces[ p ] = "5,11,20,15,".split( splitreg ); p++;
pieces[ p ] = "11,6,3,11,".split( splitreg ); p++;
pieces[ p ] = "14,3,10,6,".split( splitreg ); p++;
pieces[ p ] = "6,15,2,3,".split( splitreg ); p++;
pieces[ p ] = "9,14,7,15,".split( splitreg ); p++;
pieces[ p ] = "10,7,15,14,".split( splitreg ); p++;
pieces[ p ] = "13,5,2,7,".split( splitreg ); p++;
pieces[ p ] = "1,7,17,5,".split( splitreg ); p++;
pieces[ p ] = "20,18,1,7,".split( splitreg ); p++;
pieces[ p ] = "3,10,17,18,".split( splitreg ); p++;
pieces[ p ] = "6,3,13,10,".split( splitreg ); p++;
pieces[ p ] = "16,0,4,3,".split( splitreg ); p++;
pieces[ p ] = "4,9,16,0,".split( splitreg ); p++;
pieces[ p ] = "7,20,18,9,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "19,17,15,6,".split( splitreg ); p++;
pieces[ p ] = "20,1,17,17,".split( splitreg ); p++;
pieces[ p ] = "3,20,7,1,".split( splitreg ); p++;
pieces[ p ] = "10,18,18,20,".split( splitreg ); p++;
pieces[ p ] = "2,7,11,18,".split( splitreg ); p++;
pieces[ p ] = "7,19,10,7,".split( splitreg ); p++;
pieces[ p ] = "15,5,14,19,".split( splitreg ); p++;
pieces[ p ] = "2,6,21,5,".split( splitreg ); p++;
pieces[ p ] = "17,14,15,6,".split( splitreg ); p++;
pieces[ p ] = "1,9,1,14,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "13,10,21,19,".split( splitreg ); p++;
pieces[ p ] = "4,0,16,10,".split( splitreg ); p++;
pieces[ p ] = "16,21,22,0,".split( splitreg ); p++;
pieces[ p ] = "18,17,2,21,".split( splitreg ); p++;
pieces[ p ] = "14,7,6,17,".split( splitreg ); p++;
pieces[ p ] = "15,5,1,7,".split( splitreg ); p++;
pieces[ p ] = "17,5,20,5,".split( splitreg ); p++;
pieces[ p ] = "7,7,11,5,".split( splitreg ); p++;
pieces[ p ] = "18,1,13,7,".split( splitreg ); p++;
pieces[ p ] = "11,17,10,1,".split( splitreg ); p++;
pieces[ p ] = "10,19,3,17,".split( splitreg ); p++;
pieces[ p ] = "14,21,2,19,".split( splitreg ); p++;
pieces[ p ] = "21,21,18,21,".split( splitreg ); p++;
pieces[ p ] = "15,19,9,21,".split( splitreg ); p++;
pieces[ p ] = "1,1,18,19,".split( splitreg ); p++;
pieces[ p ] = "17,14,1,1,".split( splitreg ); p++;
pieces[ p ] = "21,14,2,14,".split( splitreg ); p++;
pieces[ p ] = "16,0,8,14,".split( splitreg ); p++;
pieces[ p ] = "22,5,22,0,".split( splitreg ); p++;
pieces[ p ] = "2,1,17,5,".split( splitreg ); p++;
pieces[ p ] = "6,14,19,1,".split( splitreg ); p++;
pieces[ p ] = "1,11,21,14,".split( splitreg ); p++;
pieces[ p ] = "20,2,5,11,".split( splitreg ); p++;
pieces[ p ] = "11,20,13,2,".split( splitreg ); p++;
pieces[ p ] = "13,11,13,20,".split( splitreg ); p++;
pieces[ p ] = "10,10,13,11,".split( splitreg ); p++;
pieces[ p ] = "3,10,20,10,".split( splitreg ); p++;
pieces[ p ] = "2,2,7,10,".split( splitreg ); p++;
pieces[ p ] = "18,5,20,2,".split( splitreg ); p++;
pieces[ p ] = "9,21,21,5,".split( splitreg ); p++;
pieces[ p ] = "18,21,7,21,".split( splitreg ); p++;
pieces[ p ] = "1,11,14,21,".split( splitreg ); p++;
pieces[ p ] = "2,9,21,11,".split( splitreg ); p++;
pieces[ p ] = "8,0,8,9,".split( splitreg ); p++;
pieces[ p ] = "22,20,4,0,".split( splitreg ); p++;
pieces[ p ] = "17,10,3,20,".split( splitreg ); p++;
pieces[ p ] = "19,18,11,10,".split( splitreg ); p++;
pieces[ p ] = "21,15,5,18,".split( splitreg ); p++;
pieces[ p ] = "5,5,14,15,".split( splitreg ); p++;
pieces[ p ] = "13,17,3,5,".split( splitreg ); p++;
pieces[ p ] = "13,20,2,17,".split( splitreg ); p++;
pieces[ p ] = "13,21,9,20,".split( splitreg ); p++;
pieces[ p ] = "20,5,13,21,".split( splitreg ); p++;
pieces[ p ] = "7,10,20,5,".split( splitreg ); p++;
pieces[ p ] = "20,7,19,10,".split( splitreg ); p++;
pieces[ p ] = "21,13,5,7,".split( splitreg ); p++;
pieces[ p ] = "7,2,19,13,".split( splitreg ); p++;
pieces[ p ] = "14,19,11,2,".split( splitreg ); p++;
pieces[ p ] = "21,19,3,19,".split( splitreg ); p++;
pieces[ p ] = "8,0,12,19,".split( splitreg ); p++;
pieces[ p ] = "4,5,4,0,".split( splitreg ); p++;
pieces[ p ] = "3,14,17,5,".split( splitreg ); p++;
pieces[ p ] = "11,15,11,14,".split( splitreg ); p++;
pieces[ p ] = "5,9,13,15,".split( splitreg ); p++;
pieces[ p ] = "14,2,14,9,".split( splitreg ); p++;
pieces[ p ] = "3,14,21,2,".split( splitreg ); p++;
pieces[ p ] = "2,17,1,14,".split( splitreg ); p++;
pieces[ p ] = "9,17,11,17,".split( splitreg ); p++;
pieces[ p ] = "13,18,13,17,".split( splitreg ); p++;
pieces[ p ] = "20,11,6,18,".split( splitreg ); p++;
pieces[ p ] = "19,17,18,11,".split( splitreg ); p++;
pieces[ p ] = "5,2,17,17,".split( splitreg ); p++;
pieces[ p ] = "19,2,6,2,".split( splitreg ); p++;
pieces[ p ] = "11,15,1,2,".split( splitreg ); p++;
pieces[ p ] = "3,9,18,15,".split( splitreg ); p++;
pieces[ p ] = "12,0,22,9,".split( splitreg ); p++;
pieces[ p ] = "4,5,22,0,".split( splitreg ); p++;
pieces[ p ] = "17,15,9,5,".split( splitreg ); p++;
pieces[ p ] = "11,1,17,15,".split( splitreg ); p++;
pieces[ p ] = "13,14,9,1,".split( splitreg ); p++;
pieces[ p ] = "14,1,17,14,".split( splitreg ); p++;
pieces[ p ] = "21,10,6,1,".split( splitreg ); p++;
pieces[ p ] = "1,2,15,10,".split( splitreg ); p++;
pieces[ p ] = "11,1,21,2,".split( splitreg ); p++;
pieces[ p ] = "13,15,11,1,".split( splitreg ); p++;
pieces[ p ] = "6,10,20,15,".split( splitreg ); p++;
pieces[ p ] = "18,19,2,10,".split( splitreg ); p++;
pieces[ p ] = "17,14,6,19,".split( splitreg ); p++;
pieces[ p ] = "6,2,21,14,".split( splitreg ); p++;
pieces[ p ] = "1,11,5,2,".split( splitreg ); p++;
pieces[ p ] = "18,10,13,11,".split( splitreg ); p++;
pieces[ p ] = "22,0,12,10,".split( splitreg ); p++;
pieces[ p ] = "22,19,8,0,".split( splitreg ); p++;
pieces[ p ] = "9,11,13,19,".split( splitreg ); p++;
pieces[ p ] = "17,15,19,11,".split( splitreg ); p++;
pieces[ p ] = "9,6,7,15,".split( splitreg ); p++;
pieces[ p ] = "17,19,6,6,".split( splitreg ); p++;
pieces[ p ] = "6,3,6,19,".split( splitreg ); p++;
pieces[ p ] = "15,14,19,3,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "11,11,11,3,".split( splitreg ); p++;
pieces[ p ] = "20,5,9,11,".split( splitreg ); p++;
pieces[ p ] = "2,21,20,5,".split( splitreg ); p++;
pieces[ p ] = "6,17,18,21,".split( splitreg ); p++;
pieces[ p ] = "21,13,1,17,".split( splitreg ); p++;
pieces[ p ] = "5,15,19,13,".split( splitreg ); p++;
pieces[ p ] = "13,18,21,15,".split( splitreg ); p++;
pieces[ p ] = "12,0,16,18,".split( splitreg ); p++;
pieces[ p ] = "8,11,16,0,".split( splitreg ); p++;
pieces[ p ] = "13,9,1,11,".split( splitreg ); p++;
pieces[ p ] = "19,9,13,9,".split( splitreg ); p++;
pieces[ p ] = "7,10,13,9,".split( splitreg ); p++;
pieces[ p ] = "6,3,5,10,".split( splitreg ); p++;
pieces[ p ] = "6,7,5,3,".split( splitreg ); p++;
pieces[ p ] = "19,1,18,7,".split( splitreg ); p++;
pieces[ p ] = "3,18,20,1,".split( splitreg ); p++;
pieces[ p ] = "11,19,7,18,".split( splitreg ); p++;
pieces[ p ] = "9,18,2,19,".split( splitreg ); p++;
pieces[ p ] = "20,17,13,18,".split( splitreg ); p++;
pieces[ p ] = "18,6,6,17,".split( splitreg ); p++;
pieces[ p ] = "1,6,2,6,".split( splitreg ); p++;
pieces[ p ] = "19,9,20,6,".split( splitreg ); p++;
pieces[ p ] = "21,2,7,9,".split( splitreg ); p++;
pieces[ p ] = "16,0,8,2,".split( splitreg ); p++;
pieces[ p ] = "16,5,8,0,".split( splitreg ); p++;
pieces[ p ] = "1,13,2,5,".split( splitreg ); p++;
pieces[ p ] = "13,20,17,13,".split( splitreg ); p++;
pieces[ p ] = "13,15,1,20,".split( splitreg ); p++;
pieces[ p ] = "5,3,11,15,".split( splitreg ); p++;
pieces[ p ] = "5,14,15,3,".split( splitreg ); p++;
pieces[ p ] = "18,5,2,14,".split( splitreg ); p++;
pieces[ p ] = "20,15,14,5,".split( splitreg ); p++;
pieces[ p ] = "7,1,11,15,".split( splitreg ); p++;
pieces[ p ] = "2,7,21,1,".split( splitreg ); p++;
pieces[ p ] = "13,3,18,7,".split( splitreg ); p++;
pieces[ p ] = "6,19,21,3,".split( splitreg ); p++;
pieces[ p ] = "2,20,13,19,".split( splitreg ); p++;
pieces[ p ] = "20,18,3,20,".split( splitreg ); p++;
pieces[ p ] = "7,15,14,18,".split( splitreg ); p++;
pieces[ p ] = "8,0,12,15,".split( splitreg ); p++;
pieces[ p ] = "8,17,4,0,".split( splitreg ); p++;
pieces[ p ] = "2,20,13,17,".split( splitreg ); p++;
pieces[ p ] = "17,19,18,20,".split( splitreg ); p++;
pieces[ p ] = "1,9,9,19,".split( splitreg ); p++;
pieces[ p ] = "11,18,1,9,".split( splitreg ); p++;
pieces[ p ] = "15,5,6,18,".split( splitreg ); p++;
pieces[ p ] = "2,15,11,5,".split( splitreg ); p++;
pieces[ p ] = "14,6,17,15,".split( splitreg ); p++;
pieces[ p ] = "11,7,15,6,".split( splitreg ); p++;
pieces[ p ] = "21,19,9,7,".split( splitreg ); p++;
pieces[ p ] = "18,19,10,19,".split( splitreg ); p++;
pieces[ p ] = "21,6,21,19,".split( splitreg ); p++;
pieces[ p ] = "13,6,18,6,".split( splitreg ); p++;
pieces[ p ] = "3,7,20,6,".split( splitreg ); p++;
pieces[ p ] = "14,18,20,7,".split( splitreg ); p++;
pieces[ p ] = "12,0,22,18,".split( splitreg ); p++;
pieces[ p ] = "4,20,22,0,".split( splitreg ); p++;
pieces[ p ] = "13,21,10,20,".split( splitreg ); p++;
pieces[ p ] = "18,1,9,21,".split( splitreg ); p++;
pieces[ p ] = "9,18,7,1,".split( splitreg ); p++;
pieces[ p ] = "1,5,3,18,".split( splitreg ); p++;
pieces[ p ] = "6,20,1,5,".split( splitreg ); p++;
pieces[ p ] = "11,13,3,20,".split( splitreg ); p++;
pieces[ p ] = "17,15,9,13,".split( splitreg ); p++;
pieces[ p ] = "15,19,10,15,".split( splitreg ); p++;
pieces[ p ] = "9,17,2,19,".split( splitreg ); p++;
pieces[ p ] = "10,11,7,17,".split( splitreg ); p++;
pieces[ p ] = "21,1,3,11,".split( splitreg ); p++;
pieces[ p ] = "18,5,7,1,".split( splitreg ); p++;
pieces[ p ] = "20,19,5,5,".split( splitreg ); p++;
pieces[ p ] = "20,9,3,19,".split( splitreg ); p++;
pieces[ p ] = "22,0,4,9,".split( splitreg ); p++;
pieces[ p ] = "22,17,12,0,".split( splitreg ); p++;
pieces[ p ] = "10,14,7,17,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "7,10,13,3,".split( splitreg ); p++;
pieces[ p ] = "3,9,13,10,".split( splitreg ); p++;
pieces[ p ] = "1,2,9,9,".split( splitreg ); p++;
pieces[ p ] = "3,10,7,2,".split( splitreg ); p++;
pieces[ p ] = "9,9,21,10,".split( splitreg ); p++;
pieces[ p ] = "10,6,21,9,".split( splitreg ); p++;
pieces[ p ] = "2,1,6,6,".split( splitreg ); p++;
pieces[ p ] = "7,11,5,1,".split( splitreg ); p++;
pieces[ p ] = "3,14,3,11,".split( splitreg ); p++;
pieces[ p ] = "7,13,9,14,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "3,17,3,18,".split( splitreg ); p++;
pieces[ p ] = "4,0,4,17,".split( splitreg ); p++;
pieces[ p ] = "12,21,12,0,".split( splitreg ); p++;
pieces[ p ] = "7,1,15,21,".split( splitreg ); p++;
pieces[ p ] = "18,19,21,1,".split( splitreg ); p++;
pieces[ p ] = "13,14,2,19,".split( splitreg ); p++;
pieces[ p ] = "13,14,6,14,".split( splitreg ); p++;
pieces[ p ] = "9,10,2,14,".split( splitreg ); p++;
pieces[ p ] = "7,10,11,10,".split( splitreg ); p++;
pieces[ p ] = "21,13,3,10,".split( splitreg ); p++;
pieces[ p ] = "21,13,7,13,".split( splitreg ); p++;
pieces[ p ] = "6,20,14,13,".split( splitreg ); p++;
pieces[ p ] = "5,15,20,20,".split( splitreg ); p++;
pieces[ p ] = "3,20,14,15,".split( splitreg ); p++;
pieces[ p ] = "9,15,10,20,".split( splitreg ); p++;
pieces[ p ] = "10,19,18,15,".split( splitreg ); p++;
pieces[ p ] = "3,15,9,19,".split( splitreg ); p++;
pieces[ p ] = "4,0,4,15,".split( splitreg ); p++;
pieces[ p ] = "12,8,0,0,".split( splitreg ); p++;
pieces[ p ] = "15,22,0,8,".split( splitreg ); p++;
pieces[ p ] = "21,16,0,22,".split( splitreg ); p++;
pieces[ p ] = "2,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "6,8,0,12,".split( splitreg ); p++;
pieces[ p ] = "2,12,0,8,".split( splitreg ); p++;
pieces[ p ] = "11,12,0,12,".split( splitreg ); p++;
pieces[ p ] = "3,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "7,16,0,22,".split( splitreg ); p++;
pieces[ p ] = "14,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "20,4,0,12,".split( splitreg ); p++;
pieces[ p ] = "14,16,0,4,".split( splitreg ); p++;
pieces[ p ] = "10,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "18,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "9,8,0,22,".split( splitreg ); p++;
pieces[ p ] = "4,0,0,8,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
