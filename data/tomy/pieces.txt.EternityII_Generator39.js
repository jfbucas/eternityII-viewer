puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator39.js,Eternity II Generator 39".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator39.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,8,16,0,".split( splitreg ); p++;
pieces[ p ] = "0,16,11,8,".split( splitreg ); p++;
pieces[ p ] = "0,8,5,16,".split( splitreg ); p++;
pieces[ p ] = "0,8,13,8,".split( splitreg ); p++;
pieces[ p ] = "0,12,21,8,".split( splitreg ); p++;
pieces[ p ] = "0,22,11,12,".split( splitreg ); p++;
pieces[ p ] = "0,12,2,22,".split( splitreg ); p++;
pieces[ p ] = "0,22,14,12,".split( splitreg ); p++;
pieces[ p ] = "0,12,13,22,".split( splitreg ); p++;
pieces[ p ] = "0,22,17,12,".split( splitreg ); p++;
pieces[ p ] = "0,4,7,22,".split( splitreg ); p++;
pieces[ p ] = "0,16,15,4,".split( splitreg ); p++;
pieces[ p ] = "0,22,18,16,".split( splitreg ); p++;
pieces[ p ] = "0,4,13,22,".split( splitreg ); p++;
pieces[ p ] = "0,22,18,4,".split( splitreg ); p++;
pieces[ p ] = "0,0,16,22,".split( splitreg ); p++;
pieces[ p ] = "16,15,8,0,".split( splitreg ); p++;
pieces[ p ] = "11,10,19,15,".split( splitreg ); p++;
pieces[ p ] = "5,9,17,10,".split( splitreg ); p++;
pieces[ p ] = "13,5,1,9,".split( splitreg ); p++;
pieces[ p ] = "21,21,15,5,".split( splitreg ); p++;
pieces[ p ] = "11,9,14,21,".split( splitreg ); p++;
pieces[ p ] = "2,17,20,9,".split( splitreg ); p++;
pieces[ p ] = "14,13,2,17,".split( splitreg ); p++;
pieces[ p ] = "13,20,2,13,".split( splitreg ); p++;
pieces[ p ] = "17,13,10,20,".split( splitreg ); p++;
pieces[ p ] = "7,14,6,13,".split( splitreg ); p++;
pieces[ p ] = "15,20,15,14,".split( splitreg ); p++;
pieces[ p ] = "18,1,7,20,".split( splitreg ); p++;
pieces[ p ] = "13,18,17,1,".split( splitreg ); p++;
pieces[ p ] = "18,5,20,18,".split( splitreg ); p++;
pieces[ p ] = "16,0,22,5,".split( splitreg ); p++;
pieces[ p ] = "8,11,4,0,".split( splitreg ); p++;
pieces[ p ] = "19,20,5,11,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "1,10,13,6,".split( splitreg ); p++;
pieces[ p ] = "15,10,9,10,".split( splitreg ); p++;
pieces[ p ] = "14,2,11,10,".split( splitreg ); p++;
pieces[ p ] = "20,20,21,2,".split( splitreg ); p++;
pieces[ p ] = "2,5,3,20,".split( splitreg ); p++;
pieces[ p ] = "2,6,3,5,".split( splitreg ); p++;
pieces[ p ] = "10,13,11,6,".split( splitreg ); p++;
pieces[ p ] = "6,21,10,13,".split( splitreg ); p++;
pieces[ p ] = "15,15,5,21,".split( splitreg ); p++;
pieces[ p ] = "7,9,14,15,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "20,17,11,19,".split( splitreg ); p++;
pieces[ p ] = "22,0,8,17,".split( splitreg ); p++;
pieces[ p ] = "4,1,12,0,".split( splitreg ); p++;
pieces[ p ] = "5,3,5,1,".split( splitreg ); p++;
pieces[ p ] = "14,10,18,3,".split( splitreg ); p++;
pieces[ p ] = "13,17,21,10,".split( splitreg ); p++;
pieces[ p ] = "9,15,18,17,".split( splitreg ); p++;
pieces[ p ] = "11,1,19,15,".split( splitreg ); p++;
pieces[ p ] = "21,7,11,1,".split( splitreg ); p++;
pieces[ p ] = "3,10,10,7,".split( splitreg ); p++;
pieces[ p ] = "3,3,10,10,".split( splitreg ); p++;
pieces[ p ] = "11,7,21,3,".split( splitreg ); p++;
pieces[ p ] = "10,15,15,7,".split( splitreg ); p++;
pieces[ p ] = "5,15,6,15,".split( splitreg ); p++;
pieces[ p ] = "14,3,3,15,".split( splitreg ); p++;
pieces[ p ] = "17,15,17,3,".split( splitreg ); p++;
pieces[ p ] = "11,9,6,15,".split( splitreg ); p++;
pieces[ p ] = "8,0,4,9,".split( splitreg ); p++;
pieces[ p ] = "12,14,22,0,".split( splitreg ); p++;
pieces[ p ] = "5,3,5,14,".split( splitreg ); p++;
pieces[ p ] = "18,7,7,3,".split( splitreg ); p++;
pieces[ p ] = "21,2,19,7,".split( splitreg ); p++;
pieces[ p ] = "18,17,20,2,".split( splitreg ); p++;
pieces[ p ] = "19,10,7,17,".split( splitreg ); p++;
pieces[ p ] = "11,9,9,10,".split( splitreg ); p++;
pieces[ p ] = "10,18,13,9,".split( splitreg ); p++;
pieces[ p ] = "10,9,19,18,".split( splitreg ); p++;
pieces[ p ] = "21,3,11,9,".split( splitreg ); p++;
pieces[ p ] = "15,10,3,3,".split( splitreg ); p++;
pieces[ p ] = "6,3,6,10,".split( splitreg ); p++;
pieces[ p ] = "3,20,6,3,".split( splitreg ); p++;
pieces[ p ] = "17,21,21,20,".split( splitreg ); p++;
pieces[ p ] = "6,19,2,21,".split( splitreg ); p++;
pieces[ p ] = "4,0,16,19,".split( splitreg ); p++;
pieces[ p ] = "22,6,8,0,".split( splitreg ); p++;
pieces[ p ] = "5,2,21,6,".split( splitreg ); p++;
pieces[ p ] = "7,3,1,2,".split( splitreg ); p++;
pieces[ p ] = "19,21,21,3,".split( splitreg ); p++;
pieces[ p ] = "20,13,20,21,".split( splitreg ); p++;
pieces[ p ] = "7,5,3,13,".split( splitreg ); p++;
pieces[ p ] = "9,11,18,5,".split( splitreg ); p++;
pieces[ p ] = "13,14,3,11,".split( splitreg ); p++;
pieces[ p ] = "19,15,7,14,".split( splitreg ); p++;
pieces[ p ] = "11,17,19,15,".split( splitreg ); p++;
pieces[ p ] = "3,10,20,17,".split( splitreg ); p++;
pieces[ p ] = "6,7,18,10,".split( splitreg ); p++;
pieces[ p ] = "6,3,6,7,".split( splitreg ); p++;
pieces[ p ] = "21,20,2,3,".split( splitreg ); p++;
pieces[ p ] = "2,20,6,20,".split( splitreg ); p++;
pieces[ p ] = "16,0,16,20,".split( splitreg ); p++;
pieces[ p ] = "8,5,4,0,".split( splitreg ); p++;
pieces[ p ] = "21,9,1,5,".split( splitreg ); p++;
pieces[ p ] = "1,9,13,9,".split( splitreg ); p++;
pieces[ p ] = "21,3,21,9,".split( splitreg ); p++;
pieces[ p ] = "20,15,9,3,".split( splitreg ); p++;
pieces[ p ] = "3,6,15,15,".split( splitreg ); p++;
pieces[ p ] = "18,10,1,6,".split( splitreg ); p++;
pieces[ p ] = "3,7,2,10,".split( splitreg ); p++;
pieces[ p ] = "7,5,5,7,".split( splitreg ); p++;
pieces[ p ] = "19,20,19,5,".split( splitreg ); p++;
pieces[ p ] = "20,20,14,20,".split( splitreg ); p++;
pieces[ p ] = "18,17,18,20,".split( splitreg ); p++;
pieces[ p ] = "6,18,17,17,".split( splitreg ); p++;
pieces[ p ] = "2,2,1,18,".split( splitreg ); p++;
pieces[ p ] = "6,6,2,2,".split( splitreg ); p++;
pieces[ p ] = "16,0,12,6,".split( splitreg ); p++;
pieces[ p ] = "4,19,4,0,".split( splitreg ); p++;
pieces[ p ] = "1,20,6,19,".split( splitreg ); p++;
pieces[ p ] = "13,14,9,20,".split( splitreg ); p++;
pieces[ p ] = "21,17,20,14,".split( splitreg ); p++;
pieces[ p ] = "9,14,17,17,".split( splitreg ); p++;
pieces[ p ] = "15,5,19,14,".split( splitreg ); p++;
pieces[ p ] = "1,7,3,5,".split( splitreg ); p++;
pieces[ p ] = "2,18,21,7,".split( splitreg ); p++;
pieces[ p ] = "5,5,15,18,".split( splitreg ); p++;
pieces[ p ] = "19,10,20,5,".split( splitreg ); p++;
pieces[ p ] = "14,18,14,10,".split( splitreg ); p++;
pieces[ p ] = "18,20,14,18,".split( splitreg ); p++;
pieces[ p ] = "17,21,10,20,".split( splitreg ); p++;
pieces[ p ] = "1,20,7,21,".split( splitreg ); p++;
pieces[ p ] = "2,15,18,20,".split( splitreg ); p++;
pieces[ p ] = "12,0,4,15,".split( splitreg ); p++;
pieces[ p ] = "4,9,16,0,".split( splitreg ); p++;
pieces[ p ] = "6,2,7,9,".split( splitreg ); p++;
pieces[ p ] = "9,1,21,2,".split( splitreg ); p++;
pieces[ p ] = "20,2,13,1,".split( splitreg ); p++;
pieces[ p ] = "17,14,11,2,".split( splitreg ); p++;
pieces[ p ] = "19,19,17,14,".split( splitreg ); p++;
pieces[ p ] = "3,14,18,19,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "15,1,19,3,".split( splitreg ); p++;
pieces[ p ] = "20,10,14,1,".split( splitreg ); p++;
pieces[ p ] = "14,10,11,10,".split( splitreg ); p++;
pieces[ p ] = "14,15,14,10,".split( splitreg ); p++;
pieces[ p ] = "10,7,17,15,".split( splitreg ); p++;
pieces[ p ] = "7,19,10,7,".split( splitreg ); p++;
pieces[ p ] = "18,13,15,19,".split( splitreg ); p++;
pieces[ p ] = "4,0,16,13,".split( splitreg ); p++;
pieces[ p ] = "16,2,4,0,".split( splitreg ); p++;
pieces[ p ] = "7,5,1,2,".split( splitreg ); p++;
pieces[ p ] = "21,14,1,5,".split( splitreg ); p++;
pieces[ p ] = "13,11,13,14,".split( splitreg ); p++;
pieces[ p ] = "11,11,7,11,".split( splitreg ); p++;
pieces[ p ] = "17,21,13,11,".split( splitreg ); p++;
pieces[ p ] = "18,13,21,21,".split( splitreg ); p++;
pieces[ p ] = "3,3,5,13,".split( splitreg ); p++;
pieces[ p ] = "19,20,17,3,".split( splitreg ); p++;
pieces[ p ] = "14,11,2,20,".split( splitreg ); p++;
pieces[ p ] = "11,10,15,11,".split( splitreg ); p++;
pieces[ p ] = "14,14,11,10,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,14,".split( splitreg ); p++;
pieces[ p ] = "10,2,20,19,".split( splitreg ); p++;
pieces[ p ] = "15,11,5,2,".split( splitreg ); p++;
pieces[ p ] = "16,0,22,11,".split( splitreg ); p++;
pieces[ p ] = "4,3,8,0,".split( splitreg ); p++;
pieces[ p ] = "1,19,7,3,".split( splitreg ); p++;
pieces[ p ] = "1,14,15,19,".split( splitreg ); p++;
pieces[ p ] = "13,6,1,14,".split( splitreg ); p++;
pieces[ p ] = "7,9,1,6,".split( splitreg ); p++;
pieces[ p ] = "13,21,20,9,".split( splitreg ); p++;
pieces[ p ] = "21,9,18,21,".split( splitreg ); p++;
pieces[ p ] = "5,14,2,9,".split( splitreg ); p++;
pieces[ p ] = "17,18,2,14,".split( splitreg ); p++;
pieces[ p ] = "2,1,6,18,".split( splitreg ); p++;
pieces[ p ] = "15,18,18,1,".split( splitreg ); p++;
pieces[ p ] = "11,5,13,18,".split( splitreg ); p++;
pieces[ p ] = "17,15,14,5,".split( splitreg ); p++;
pieces[ p ] = "20,3,1,15,".split( splitreg ); p++;
pieces[ p ] = "5,19,15,3,".split( splitreg ); p++;
pieces[ p ] = "22,0,16,19,".split( splitreg ); p++;
pieces[ p ] = "8,13,12,0,".split( splitreg ); p++;
pieces[ p ] = "7,5,17,13,".split( splitreg ); p++;
pieces[ p ] = "15,18,17,5,".split( splitreg ); p++;
pieces[ p ] = "1,3,19,18,".split( splitreg ); p++;
pieces[ p ] = "1,2,1,3,".split( splitreg ); p++;
pieces[ p ] = "20,7,9,2,".split( splitreg ); p++;
pieces[ p ] = "18,9,15,7,".split( splitreg ); p++;
pieces[ p ] = "2,5,7,9,".split( splitreg ); p++;
pieces[ p ] = "2,21,10,5,".split( splitreg ); p++;
pieces[ p ] = "6,21,20,21,".split( splitreg ); p++;
pieces[ p ] = "18,5,19,21,".split( splitreg ); p++;
pieces[ p ] = "13,6,10,5,".split( splitreg ); p++;
pieces[ p ] = "14,19,19,6,".split( splitreg ); p++;
pieces[ p ] = "1,5,1,19,".split( splitreg ); p++;
pieces[ p ] = "15,2,11,5,".split( splitreg ); p++;
pieces[ p ] = "16,0,8,2,".split( splitreg ); p++;
pieces[ p ] = "12,13,16,0,".split( splitreg ); p++;
pieces[ p ] = "17,5,14,13,".split( splitreg ); p++;
pieces[ p ] = "17,7,9,5,".split( splitreg ); p++;
pieces[ p ] = "19,17,1,7,".split( splitreg ); p++;
pieces[ p ] = "1,15,19,17,".split( splitreg ); p++;
pieces[ p ] = "9,19,18,15,".split( splitreg ); p++;
pieces[ p ] = "15,11,13,19,".split( splitreg ); p++;
pieces[ p ] = "7,19,7,11,".split( splitreg ); p++;
pieces[ p ] = "10,6,14,19,".split( splitreg ); p++;
pieces[ p ] = "20,7,1,6,".split( splitreg ); p++;
pieces[ p ] = "19,11,13,7,".split( splitreg ); p++;
pieces[ p ] = "10,2,9,11,".split( splitreg ); p++;
pieces[ p ] = "19,6,9,2,".split( splitreg ); p++;
pieces[ p ] = "1,7,5,6,".split( splitreg ); p++;
pieces[ p ] = "11,10,6,7,".split( splitreg ); p++;
pieces[ p ] = "8,0,4,10,".split( splitreg ); p++;
pieces[ p ] = "16,17,8,0,".split( splitreg ); p++;
pieces[ p ] = "14,14,18,17,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "1,19,15,3,".split( splitreg ); p++;
pieces[ p ] = "19,1,9,19,".split( splitreg ); p++;
pieces[ p ] = "18,2,20,1,".split( splitreg ); p++;
pieces[ p ] = "13,6,20,2,".split( splitreg ); p++;
pieces[ p ] = "7,1,10,6,".split( splitreg ); p++;
pieces[ p ] = "14,9,14,1,".split( splitreg ); p++;
pieces[ p ] = "1,6,2,9,".split( splitreg ); p++;
pieces[ p ] = "13,2,9,6,".split( splitreg ); p++;
pieces[ p ] = "9,6,5,2,".split( splitreg ); p++;
pieces[ p ] = "9,13,3,6,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "6,9,11,18,".split( splitreg ); p++;
pieces[ p ] = "4,0,12,9,".split( splitreg ); p++;
pieces[ p ] = "8,19,12,0,".split( splitreg ); p++;
pieces[ p ] = "18,6,17,19,".split( splitreg ); p++;
pieces[ p ] = "18,13,6,6,".split( splitreg ); p++;
pieces[ p ] = "15,11,21,13,".split( splitreg ); p++;
pieces[ p ] = "9,11,17,11,".split( splitreg ); p++;
pieces[ p ] = "20,7,6,11,".split( splitreg ); p++;
pieces[ p ] = "20,18,9,7,".split( splitreg ); p++;
pieces[ p ] = "10,21,10,18,".split( splitreg ); p++;
pieces[ p ] = "14,13,2,21,".split( splitreg ); p++;
pieces[ p ] = "2,18,21,13,".split( splitreg ); p++;
pieces[ p ] = "9,1,7,18,".split( splitreg ); p++;
pieces[ p ] = "5,13,11,1,".split( splitreg ); p++;
pieces[ p ] = "3,11,17,13,".split( splitreg ); p++;
pieces[ p ] = "10,13,21,11,".split( splitreg ); p++;
pieces[ p ] = "11,1,1,13,".split( splitreg ); p++;
pieces[ p ] = "12,0,22,1,".split( splitreg ); p++;
pieces[ p ] = "12,12,0,0,".split( splitreg ); p++;
pieces[ p ] = "17,8,0,12,".split( splitreg ); p++;
pieces[ p ] = "6,8,0,8,".split( splitreg ); p++;
pieces[ p ] = "21,22,0,8,".split( splitreg ); p++;
pieces[ p ] = "17,4,0,22,".split( splitreg ); p++;
pieces[ p ] = "6,16,0,4,".split( splitreg ); p++;
pieces[ p ] = "9,4,0,16,".split( splitreg ); p++;
pieces[ p ] = "10,12,0,4,".split( splitreg ); p++;
pieces[ p ] = "2,16,0,12,".split( splitreg ); p++;
pieces[ p ] = "21,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "7,12,0,12,".split( splitreg ); p++;
pieces[ p ] = "11,8,0,12,".split( splitreg ); p++;
pieces[ p ] = "17,4,0,8,".split( splitreg ); p++;
pieces[ p ] = "21,22,0,4,".split( splitreg ); p++;
pieces[ p ] = "1,22,0,22,".split( splitreg ); p++;
pieces[ p ] = "22,0,0,22,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
