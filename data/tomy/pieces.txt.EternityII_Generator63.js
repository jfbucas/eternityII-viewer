puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator63.js,Eternity II Generator 63".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator63.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,22,16,0,".split( splitreg ); p++;
pieces[ p ] = "0,8,7,22,".split( splitreg ); p++;
pieces[ p ] = "0,16,1,8,".split( splitreg ); p++;
pieces[ p ] = "0,4,20,16,".split( splitreg ); p++;
pieces[ p ] = "0,16,7,4,".split( splitreg ); p++;
pieces[ p ] = "0,4,6,16,".split( splitreg ); p++;
pieces[ p ] = "0,12,6,4,".split( splitreg ); p++;
pieces[ p ] = "0,8,11,12,".split( splitreg ); p++;
pieces[ p ] = "0,4,13,8,".split( splitreg ); p++;
pieces[ p ] = "0,22,7,4,".split( splitreg ); p++;
pieces[ p ] = "0,22,13,22,".split( splitreg ); p++;
pieces[ p ] = "0,16,1,22,".split( splitreg ); p++;
pieces[ p ] = "0,12,13,16,".split( splitreg ); p++;
pieces[ p ] = "0,4,21,12,".split( splitreg ); p++;
pieces[ p ] = "0,22,1,4,".split( splitreg ); p++;
pieces[ p ] = "0,0,16,22,".split( splitreg ); p++;
pieces[ p ] = "16,13,16,0,".split( splitreg ); p++;
pieces[ p ] = "7,2,7,13,".split( splitreg ); p++;
pieces[ p ] = "1,5,17,2,".split( splitreg ); p++;
pieces[ p ] = "20,7,7,5,".split( splitreg ); p++;
pieces[ p ] = "7,10,18,7,".split( splitreg ); p++;
pieces[ p ] = "6,17,6,10,".split( splitreg ); p++;
pieces[ p ] = "6,10,10,17,".split( splitreg ); p++;
pieces[ p ] = "11,15,7,10,".split( splitreg ); p++;
pieces[ p ] = "13,20,7,15,".split( splitreg ); p++;
pieces[ p ] = "7,18,3,20,".split( splitreg ); p++;
pieces[ p ] = "13,6,6,18,".split( splitreg ); p++;
pieces[ p ] = "1,5,2,6,".split( splitreg ); p++;
pieces[ p ] = "13,17,1,5,".split( splitreg ); p++;
pieces[ p ] = "21,15,17,17,".split( splitreg ); p++;
pieces[ p ] = "1,19,14,15,".split( splitreg ); p++;
pieces[ p ] = "16,0,12,19,".split( splitreg ); p++;
pieces[ p ] = "16,6,12,0,".split( splitreg ); p++;
pieces[ p ] = "7,20,9,6,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "7,15,11,6,".split( splitreg ); p++;
pieces[ p ] = "18,2,20,15,".split( splitreg ); p++;
pieces[ p ] = "6,15,17,2,".split( splitreg ); p++;
pieces[ p ] = "10,6,3,15,".split( splitreg ); p++;
pieces[ p ] = "7,7,21,6,".split( splitreg ); p++;
pieces[ p ] = "7,1,7,7,".split( splitreg ); p++;
pieces[ p ] = "3,7,7,1,".split( splitreg ); p++;
pieces[ p ] = "6,18,20,7,".split( splitreg ); p++;
pieces[ p ] = "2,1,15,18,".split( splitreg ); p++;
pieces[ p ] = "1,9,3,1,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "14,2,18,19,".split( splitreg ); p++;
pieces[ p ] = "12,0,12,2,".split( splitreg ); p++;
pieces[ p ] = "12,14,22,0,".split( splitreg ); p++;
pieces[ p ] = "9,14,13,14,".split( splitreg ); p++;
pieces[ p ] = "14,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "11,17,11,3,".split( splitreg ); p++;
pieces[ p ] = "20,10,11,17,".split( splitreg ); p++;
pieces[ p ] = "17,13,13,10,".split( splitreg ); p++;
pieces[ p ] = "3,11,20,13,".split( splitreg ); p++;
pieces[ p ] = "21,3,1,11,".split( splitreg ); p++;
pieces[ p ] = "7,9,9,3,".split( splitreg ); p++;
pieces[ p ] = "7,21,17,9,".split( splitreg ); p++;
pieces[ p ] = "20,21,3,21,".split( splitreg ); p++;
pieces[ p ] = "15,20,20,21,".split( splitreg ); p++;
pieces[ p ] = "3,6,10,20,".split( splitreg ); p++;
pieces[ p ] = "17,18,13,6,".split( splitreg ); p++;
pieces[ p ] = "18,14,11,18,".split( splitreg ); p++;
pieces[ p ] = "12,0,8,14,".split( splitreg ); p++;
pieces[ p ] = "22,15,8,0,".split( splitreg ); p++;
pieces[ p ] = "13,5,15,15,".split( splitreg ); p++;
pieces[ p ] = "3,1,17,5,".split( splitreg ); p++;
pieces[ p ] = "11,20,21,1,".split( splitreg ); p++;
pieces[ p ] = "11,9,1,20,".split( splitreg ); p++;
pieces[ p ] = "13,9,20,9,".split( splitreg ); p++;
pieces[ p ] = "20,13,10,9,".split( splitreg ); p++;
pieces[ p ] = "1,9,17,13,".split( splitreg ); p++;
pieces[ p ] = "9,17,6,9,".split( splitreg ); p++;
pieces[ p ] = "17,20,2,17,".split( splitreg ); p++;
pieces[ p ] = "3,7,17,20,".split( splitreg ); p++;
pieces[ p ] = "20,10,7,7,".split( splitreg ); p++;
pieces[ p ] = "10,18,15,10,".split( splitreg ); p++;
pieces[ p ] = "13,3,9,18,".split( splitreg ); p++;
pieces[ p ] = "11,18,5,3,".split( splitreg ); p++;
pieces[ p ] = "8,0,4,18,".split( splitreg ); p++;
pieces[ p ] = "8,10,12,0,".split( splitreg ); p++;
pieces[ p ] = "15,14,10,10,".split( splitreg ); p++;
pieces[ p ] = "17,15,19,14,".split( splitreg ); p++;
pieces[ p ] = "21,21,5,15,".split( splitreg ); p++;
pieces[ p ] = "1,17,21,21,".split( splitreg ); p++;
pieces[ p ] = "20,21,19,17,".split( splitreg ); p++;
pieces[ p ] = "10,20,3,21,".split( splitreg ); p++;
pieces[ p ] = "17,2,13,20,".split( splitreg ); p++;
pieces[ p ] = "6,10,10,2,".split( splitreg ); p++;
pieces[ p ] = "2,14,5,10,".split( splitreg ); p++;
pieces[ p ] = "17,1,21,14,".split( splitreg ); p++;
pieces[ p ] = "7,18,21,1,".split( splitreg ); p++;
pieces[ p ] = "15,6,1,18,".split( splitreg ); p++;
pieces[ p ] = "9,7,5,6,".split( splitreg ); p++;
pieces[ p ] = "5,14,1,7,".split( splitreg ); p++;
pieces[ p ] = "4,0,12,14,".split( splitreg ); p++;
pieces[ p ] = "12,21,4,0,".split( splitreg ); p++;
pieces[ p ] = "10,20,2,21,".split( splitreg ); p++;
pieces[ p ] = "19,11,14,20,".split( splitreg ); p++;
pieces[ p ] = "5,5,5,11,".split( splitreg ); p++;
pieces[ p ] = "21,6,20,5,".split( splitreg ); p++;
pieces[ p ] = "19,19,2,6,".split( splitreg ); p++;
pieces[ p ] = "3,1,3,19,".split( splitreg ); p++;
pieces[ p ] = "13,17,7,1,".split( splitreg ); p++;
pieces[ p ] = "10,21,2,17,".split( splitreg ); p++;
pieces[ p ] = "5,15,14,21,".split( splitreg ); p++;
pieces[ p ] = "21,3,10,15,".split( splitreg ); p++;
pieces[ p ] = "21,19,19,3,".split( splitreg ); p++;
pieces[ p ] = "1,21,15,19,".split( splitreg ); p++;
pieces[ p ] = "5,2,18,21,".split( splitreg ); p++;
pieces[ p ] = "1,15,7,2,".split( splitreg ); p++;
pieces[ p ] = "12,0,4,15,".split( splitreg ); p++;
pieces[ p ] = "4,11,12,0,".split( splitreg ); p++;
pieces[ p ] = "2,1,15,11,".split( splitreg ); p++;
pieces[ p ] = "14,20,15,1,".split( splitreg ); p++;
pieces[ p ] = "5,20,20,20,".split( splitreg ); p++;
pieces[ p ] = "20,18,15,20,".split( splitreg ); p++;
pieces[ p ] = "2,14,15,18,".split( splitreg ); p++;
pieces[ p ] = "3,2,20,14,".split( splitreg ); p++;
pieces[ p ] = "7,5,21,2,".split( splitreg ); p++;
pieces[ p ] = "2,5,14,5,".split( splitreg ); p++;
pieces[ p ] = "14,5,19,5,".split( splitreg ); p++;
pieces[ p ] = "10,14,2,5,".split( splitreg ); p++;
pieces[ p ] = "19,19,21,14,".split( splitreg ); p++;
pieces[ p ] = "15,14,9,19,".split( splitreg ); p++;
pieces[ p ] = "18,15,13,14,".split( splitreg ); p++;
pieces[ p ] = "7,9,10,15,".split( splitreg ); p++;
pieces[ p ] = "4,0,4,9,".split( splitreg ); p++;
pieces[ p ] = "12,13,22,0,".split( splitreg ); p++;
pieces[ p ] = "15,18,7,13,".split( splitreg ); p++;
pieces[ p ] = "15,19,7,18,".split( splitreg ); p++;
pieces[ p ] = "20,1,10,19,".split( splitreg ); p++;
pieces[ p ] = "15,6,3,1,".split( splitreg ); p++;
pieces[ p ] = "15,7,2,6,".split( splitreg ); p++;
pieces[ p ] = "20,14,9,7,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "14,10,11,3,".split( splitreg ); p++;
pieces[ p ] = "19,10,7,10,".split( splitreg ); p++;
pieces[ p ] = "2,21,7,10,".split( splitreg ); p++;
pieces[ p ] = "21,2,19,21,".split( splitreg ); p++;
pieces[ p ] = "9,6,20,2,".split( splitreg ); p++;
pieces[ p ] = "13,17,14,6,".split( splitreg ); p++;
pieces[ p ] = "10,19,17,17,".split( splitreg ); p++;
pieces[ p ] = "4,0,8,19,".split( splitreg ); p++;
pieces[ p ] = "22,5,4,0,".split( splitreg ); p++;
pieces[ p ] = "7,13,17,5,".split( splitreg ); p++;
pieces[ p ] = "7,15,2,13,".split( splitreg ); p++;
pieces[ p ] = "10,19,1,15,".split( splitreg ); p++;
pieces[ p ] = "3,19,11,19,".split( splitreg ); p++;
pieces[ p ] = "2,10,18,19,".split( splitreg ); p++;
pieces[ p ] = "9,21,1,10,".split( splitreg ); p++;
pieces[ p ] = "3,9,15,21,".split( splitreg ); p++;
pieces[ p ] = "11,14,9,9,".split( splitreg ); p++;
pieces[ p ] = "7,11,13,14,".split( splitreg ); p++;
pieces[ p ] = "7,19,13,11,".split( splitreg ); p++;
pieces[ p ] = "19,18,19,19,".split( splitreg ); p++;
pieces[ p ] = "20,3,3,18,".split( splitreg ); p++;
pieces[ p ] = "14,21,6,3,".split( splitreg ); p++;
pieces[ p ] = "17,1,3,21,".split( splitreg ); p++;
pieces[ p ] = "8,0,8,1,".split( splitreg ); p++;
pieces[ p ] = "4,19,12,0,".split( splitreg ); p++;
pieces[ p ] = "17,11,11,19,".split( splitreg ); p++;
pieces[ p ] = "2,18,21,11,".split( splitreg ); p++;
pieces[ p ] = "1,6,9,18,".split( splitreg ); p++;
pieces[ p ] = "11,11,19,6,".split( splitreg ); p++;
pieces[ p ] = "18,10,5,11,".split( splitreg ); p++;
pieces[ p ] = "1,9,20,10,".split( splitreg ); p++;
pieces[ p ] = "15,14,9,9,".split( splitreg ); p++;
pieces[ p ] = "9,5,19,14,".split( splitreg ); p++;
pieces[ p ] = "13,3,1,5,".split( splitreg ); p++;
pieces[ p ] = "13,7,5,3,".split( splitreg ); p++;
pieces[ p ] = "19,2,9,7,".split( splitreg ); p++;
pieces[ p ] = "3,20,1,2,".split( splitreg ); p++;
pieces[ p ] = "6,11,11,20,".split( splitreg ); p++;
pieces[ p ] = "3,11,21,11,".split( splitreg ); p++;
pieces[ p ] = "8,0,16,11,".split( splitreg ); p++;
pieces[ p ] = "12,1,22,0,".split( splitreg ); p++;
pieces[ p ] = "11,9,21,1,".split( splitreg ); p++;
pieces[ p ] = "21,11,21,9,".split( splitreg ); p++;
pieces[ p ] = "9,5,17,11,".split( splitreg ); p++;
pieces[ p ] = "19,6,20,5,".split( splitreg ); p++;
pieces[ p ] = "5,18,9,6,".split( splitreg ); p++;
pieces[ p ] = "20,17,10,18,".split( splitreg ); p++;
pieces[ p ] = "9,10,5,17,".split( splitreg ); p++;
pieces[ p ] = "19,14,5,10,".split( splitreg ); p++;
pieces[ p ] = "1,6,2,14,".split( splitreg ); p++;
pieces[ p ] = "5,18,17,6,".split( splitreg ); p++;
pieces[ p ] = "9,5,5,18,".split( splitreg ); p++;
pieces[ p ] = "1,18,13,5,".split( splitreg ); p++;
pieces[ p ] = "11,13,18,18,".split( splitreg ); p++;
pieces[ p ] = "21,2,11,13,".split( splitreg ); p++;
pieces[ p ] = "16,0,16,2,".split( splitreg ); p++;
pieces[ p ] = "22,3,4,0,".split( splitreg ); p++;
pieces[ p ] = "21,6,14,3,".split( splitreg ); p++;
pieces[ p ] = "21,19,9,6,".split( splitreg ); p++;
pieces[ p ] = "17,1,6,19,".split( splitreg ); p++;
pieces[ p ] = "20,15,13,1,".split( splitreg ); p++;
pieces[ p ] = "9,13,5,15,".split( splitreg ); p++;
pieces[ p ] = "10,14,20,13,".split( splitreg ); p++;
pieces[ p ] = "5,17,6,14,".split( splitreg ); p++;
pieces[ p ] = "5,6,19,17,".split( splitreg ); p++;
pieces[ p ] = "2,11,9,6,".split( splitreg ); p++;
pieces[ p ] = "17,11,18,11,".split( splitreg ); p++;
pieces[ p ] = "5,6,1,11,".split( splitreg ); p++;
pieces[ p ] = "13,10,5,6,".split( splitreg ); p++;
pieces[ p ] = "18,11,5,10,".split( splitreg ); p++;
pieces[ p ] = "11,10,20,11,".split( splitreg ); p++;
pieces[ p ] = "16,0,22,10,".split( splitreg ); p++;
pieces[ p ] = "4,2,8,0,".split( splitreg ); p++;
pieces[ p ] = "14,14,7,2,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "6,2,6,3,".split( splitreg ); p++;
pieces[ p ] = "13,20,9,2,".split( splitreg ); p++;
pieces[ p ] = "5,17,2,20,".split( splitreg ); p++;
pieces[ p ] = "20,3,19,17,".split( splitreg ); p++;
pieces[ p ] = "6,3,14,3,".split( splitreg ); p++;
pieces[ p ] = "19,13,15,3,".split( splitreg ); p++;
pieces[ p ] = "9,13,18,13,".split( splitreg ); p++;
pieces[ p ] = "18,19,9,13,".split( splitreg ); p++;
pieces[ p ] = "1,21,9,19,".split( splitreg ); p++;
pieces[ p ] = "5,13,10,21,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "20,1,2,18,".split( splitreg ); p++;
pieces[ p ] = "22,0,22,1,".split( splitreg ); p++;
pieces[ p ] = "8,18,4,0,".split( splitreg ); p++;
pieces[ p ] = "7,19,13,18,".split( splitreg ); p++;
pieces[ p ] = "18,3,3,19,".split( splitreg ); p++;
pieces[ p ] = "6,21,17,3,".split( splitreg ); p++;
pieces[ p ] = "9,11,6,21,".split( splitreg ); p++;
pieces[ p ] = "2,5,18,11,".split( splitreg ); p++;
pieces[ p ] = "19,11,15,5,".split( splitreg ); p++;
pieces[ p ] = "14,18,14,11,".split( splitreg ); p++;
pieces[ p ] = "15,13,9,18,".split( splitreg ); p++;
pieces[ p ] = "18,14,15,13,".split( splitreg ); p++;
pieces[ p ] = "9,17,19,14,".split( splitreg ); p++;
pieces[ p ] = "9,2,1,17,".split( splitreg ); p++;
pieces[ p ] = "10,13,17,2,".split( splitreg ); p++;
pieces[ p ] = "10,2,10,13,".split( splitreg ); p++;
pieces[ p ] = "2,2,15,2,".split( splitreg ); p++;
pieces[ p ] = "22,0,8,2,".split( splitreg ); p++;
pieces[ p ] = "4,16,0,0,".split( splitreg ); p++;
pieces[ p ] = "13,8,0,16,".split( splitreg ); p++;
pieces[ p ] = "3,16,0,8,".split( splitreg ); p++;
pieces[ p ] = "17,8,0,16,".split( splitreg ); p++;
pieces[ p ] = "6,12,0,8,".split( splitreg ); p++;
pieces[ p ] = "18,4,0,12,".split( splitreg ); p++;
pieces[ p ] = "15,16,0,4,".split( splitreg ); p++;
pieces[ p ] = "14,22,0,16,".split( splitreg ); p++;
pieces[ p ] = "9,22,0,22,".split( splitreg ); p++;
pieces[ p ] = "15,22,0,22,".split( splitreg ); p++;
pieces[ p ] = "19,12,0,22,".split( splitreg ); p++;
pieces[ p ] = "1,16,0,12,".split( splitreg ); p++;
pieces[ p ] = "17,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "10,8,0,12,".split( splitreg ); p++;
pieces[ p ] = "15,8,0,8,".split( splitreg ); p++;
pieces[ p ] = "8,0,0,8,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
