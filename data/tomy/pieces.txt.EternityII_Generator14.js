puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator14.js,Eternity II Generator 14".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator14.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,22,4,0,".split( splitreg ); p++;
pieces[ p ] = "0,8,17,22,".split( splitreg ); p++;
pieces[ p ] = "0,4,11,8,".split( splitreg ); p++;
pieces[ p ] = "0,16,14,4,".split( splitreg ); p++;
pieces[ p ] = "0,22,13,16,".split( splitreg ); p++;
pieces[ p ] = "0,22,14,22,".split( splitreg ); p++;
pieces[ p ] = "0,8,3,22,".split( splitreg ); p++;
pieces[ p ] = "0,12,15,8,".split( splitreg ); p++;
pieces[ p ] = "0,22,1,12,".split( splitreg ); p++;
pieces[ p ] = "0,4,9,22,".split( splitreg ); p++;
pieces[ p ] = "0,8,2,4,".split( splitreg ); p++;
pieces[ p ] = "0,16,1,8,".split( splitreg ); p++;
pieces[ p ] = "0,4,1,16,".split( splitreg ); p++;
pieces[ p ] = "0,8,7,4,".split( splitreg ); p++;
pieces[ p ] = "0,8,14,8,".split( splitreg ); p++;
pieces[ p ] = "0,0,8,8,".split( splitreg ); p++;
pieces[ p ] = "4,7,22,0,".split( splitreg ); p++;
pieces[ p ] = "17,7,19,7,".split( splitreg ); p++;
pieces[ p ] = "11,7,17,7,".split( splitreg ); p++;
pieces[ p ] = "14,6,20,7,".split( splitreg ); p++;
pieces[ p ] = "13,19,10,6,".split( splitreg ); p++;
pieces[ p ] = "14,19,5,19,".split( splitreg ); p++;
pieces[ p ] = "3,17,11,19,".split( splitreg ); p++;
pieces[ p ] = "15,15,14,17,".split( splitreg ); p++;
pieces[ p ] = "1,11,2,15,".split( splitreg ); p++;
pieces[ p ] = "9,7,3,11,".split( splitreg ); p++;
pieces[ p ] = "2,14,2,7,".split( splitreg ); p++;
pieces[ p ] = "1,20,11,14,".split( splitreg ); p++;
pieces[ p ] = "1,7,7,20,".split( splitreg ); p++;
pieces[ p ] = "7,10,17,7,".split( splitreg ); p++;
pieces[ p ] = "14,14,18,10,".split( splitreg ); p++;
pieces[ p ] = "8,0,12,14,".split( splitreg ); p++;
pieces[ p ] = "22,11,16,0,".split( splitreg ); p++;
pieces[ p ] = "19,20,11,11,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "20,7,20,6,".split( splitreg ); p++;
pieces[ p ] = "10,10,21,7,".split( splitreg ); p++;
pieces[ p ] = "5,1,19,10,".split( splitreg ); p++;
pieces[ p ] = "11,7,11,1,".split( splitreg ); p++;
pieces[ p ] = "14,3,6,7,".split( splitreg ); p++;
pieces[ p ] = "2,3,10,3,".split( splitreg ); p++;
pieces[ p ] = "3,2,10,3,".split( splitreg ); p++;
pieces[ p ] = "2,19,13,2,".split( splitreg ); p++;
pieces[ p ] = "11,21,1,19,".split( splitreg ); p++;
pieces[ p ] = "7,9,5,21,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "18,19,1,19,".split( splitreg ); p++;
pieces[ p ] = "12,0,8,19,".split( splitreg ); p++;
pieces[ p ] = "16,7,8,0,".split( splitreg ); p++;
pieces[ p ] = "11,14,19,7,".split( splitreg ); p++;
pieces[ p ] = "14,1,13,14,".split( splitreg ); p++;
pieces[ p ] = "20,11,9,1,".split( splitreg ); p++;
pieces[ p ] = "21,5,5,11,".split( splitreg ); p++;
pieces[ p ] = "19,1,3,5,".split( splitreg ); p++;
pieces[ p ] = "11,20,10,1,".split( splitreg ); p++;
pieces[ p ] = "6,5,20,20,".split( splitreg ); p++;
pieces[ p ] = "10,3,14,5,".split( splitreg ); p++;
pieces[ p ] = "10,10,15,3,".split( splitreg ); p++;
pieces[ p ] = "13,6,15,10,".split( splitreg ); p++;
pieces[ p ] = "1,20,19,6,".split( splitreg ); p++;
pieces[ p ] = "5,15,7,20,".split( splitreg ); p++;
pieces[ p ] = "17,2,17,15,".split( splitreg ); p++;
pieces[ p ] = "1,21,10,2,".split( splitreg ); p++;
pieces[ p ] = "8,0,16,21,".split( splitreg ); p++;
pieces[ p ] = "8,2,22,0,".split( splitreg ); p++;
pieces[ p ] = "19,7,21,2,".split( splitreg ); p++;
pieces[ p ] = "13,21,20,7,".split( splitreg ); p++;
pieces[ p ] = "9,14,18,21,".split( splitreg ); p++;
pieces[ p ] = "5,15,2,14,".split( splitreg ); p++;
pieces[ p ] = "3,3,2,15,".split( splitreg ); p++;
pieces[ p ] = "10,11,7,3,".split( splitreg ); p++;
pieces[ p ] = "20,17,17,11,".split( splitreg ); p++;
pieces[ p ] = "14,6,15,17,".split( splitreg ); p++;
pieces[ p ] = "15,14,10,6,".split( splitreg ); p++;
pieces[ p ] = "15,15,10,14,".split( splitreg ); p++;
pieces[ p ] = "19,6,15,15,".split( splitreg ); p++;
pieces[ p ] = "7,10,6,6,".split( splitreg ); p++;
pieces[ p ] = "17,14,13,10,".split( splitreg ); p++;
pieces[ p ] = "10,2,13,14,".split( splitreg ); p++;
pieces[ p ] = "16,0,4,2,".split( splitreg ); p++;
pieces[ p ] = "22,9,16,0,".split( splitreg ); p++;
pieces[ p ] = "21,19,21,9,".split( splitreg ); p++;
pieces[ p ] = "20,3,13,19,".split( splitreg ); p++;
pieces[ p ] = "18,18,17,3,".split( splitreg ); p++;
pieces[ p ] = "2,21,19,18,".split( splitreg ); p++;
pieces[ p ] = "2,3,10,21,".split( splitreg ); p++;
pieces[ p ] = "7,6,18,3,".split( splitreg ); p++;
pieces[ p ] = "17,9,18,6,".split( splitreg ); p++;
pieces[ p ] = "15,17,5,9,".split( splitreg ); p++;
pieces[ p ] = "10,10,11,17,".split( splitreg ); p++;
pieces[ p ] = "10,11,19,10,".split( splitreg ); p++;
pieces[ p ] = "15,11,1,11,".split( splitreg ); p++;
pieces[ p ] = "6,17,2,11,".split( splitreg ); p++;
pieces[ p ] = "13,10,5,17,".split( splitreg ); p++;
pieces[ p ] = "13,9,14,10,".split( splitreg ); p++;
pieces[ p ] = "4,0,16,9,".split( splitreg ); p++;
pieces[ p ] = "16,18,8,0,".split( splitreg ); p++;
pieces[ p ] = "21,3,13,18,".split( splitreg ); p++;
pieces[ p ] = "13,20,9,3,".split( splitreg ); p++;
pieces[ p ] = "17,13,19,20,".split( splitreg ); p++;
pieces[ p ] = "19,10,2,13,".split( splitreg ); p++;
pieces[ p ] = "10,17,5,10,".split( splitreg ); p++;
pieces[ p ] = "18,10,7,17,".split( splitreg ); p++;
pieces[ p ] = "18,1,18,10,".split( splitreg ); p++;
pieces[ p ] = "5,6,1,1,".split( splitreg ); p++;
pieces[ p ] = "11,21,18,6,".split( splitreg ); p++;
pieces[ p ] = "19,21,14,21,".split( splitreg ); p++;
pieces[ p ] = "1,18,9,21,".split( splitreg ); p++;
pieces[ p ] = "2,13,3,18,".split( splitreg ); p++;
pieces[ p ] = "5,17,14,13,".split( splitreg ); p++;
pieces[ p ] = "14,3,19,17,".split( splitreg ); p++;
pieces[ p ] = "16,0,22,3,".split( splitreg ); p++;
pieces[ p ] = "8,15,4,0,".split( splitreg ); p++;
pieces[ p ] = "13,7,11,15,".split( splitreg ); p++;
pieces[ p ] = "9,2,1,7,".split( splitreg ); p++;
pieces[ p ] = "19,6,7,2,".split( splitreg ); p++;
pieces[ p ] = "2,9,13,6,".split( splitreg ); p++;
pieces[ p ] = "5,20,18,9,".split( splitreg ); p++;
pieces[ p ] = "7,5,11,20,".split( splitreg ); p++;
pieces[ p ] = "18,5,21,5,".split( splitreg ); p++;
pieces[ p ] = "1,13,17,5,".split( splitreg ); p++;
pieces[ p ] = "18,15,17,13,".split( splitreg ); p++;
pieces[ p ] = "14,21,17,15,".split( splitreg ); p++;
pieces[ p ] = "9,15,11,21,".split( splitreg ); p++;
pieces[ p ] = "3,17,15,15,".split( splitreg ); p++;
pieces[ p ] = "14,9,11,17,".split( splitreg ); p++;
pieces[ p ] = "19,5,9,9,".split( splitreg ); p++;
pieces[ p ] = "22,0,8,5,".split( splitreg ); p++;
pieces[ p ] = "4,1,4,0,".split( splitreg ); p++;
pieces[ p ] = "11,17,9,1,".split( splitreg ); p++;
pieces[ p ] = "1,20,13,17,".split( splitreg ); p++;
pieces[ p ] = "7,21,5,20,".split( splitreg ); p++;
pieces[ p ] = "13,14,1,21,".split( splitreg ); p++;
pieces[ p ] = "18,18,19,14,".split( splitreg ); p++;
pieces[ p ] = "11,14,13,18,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "17,10,6,3,".split( splitreg ); p++;
pieces[ p ] = "17,20,1,10,".split( splitreg ); p++;
pieces[ p ] = "17,9,14,20,".split( splitreg ); p++;
pieces[ p ] = "11,21,21,9,".split( splitreg ); p++;
pieces[ p ] = "15,6,17,21,".split( splitreg ); p++;
pieces[ p ] = "11,7,2,6,".split( splitreg ); p++;
pieces[ p ] = "9,20,18,7,".split( splitreg ); p++;
pieces[ p ] = "8,0,22,20,".split( splitreg ); p++;
pieces[ p ] = "4,19,4,0,".split( splitreg ); p++;
pieces[ p ] = "9,6,6,19,".split( splitreg ); p++;
pieces[ p ] = "13,9,21,6,".split( splitreg ); p++;
pieces[ p ] = "5,21,13,9,".split( splitreg ); p++;
pieces[ p ] = "1,18,13,21,".split( splitreg ); p++;
pieces[ p ] = "19,20,6,18,".split( splitreg ); p++;
pieces[ p ] = "13,18,13,20,".split( splitreg ); p++;
pieces[ p ] = "3,15,1,18,".split( splitreg ); p++;
pieces[ p ] = "6,11,21,15,".split( splitreg ); p++;
pieces[ p ] = "1,15,18,11,".split( splitreg ); p++;
pieces[ p ] = "14,7,6,15,".split( splitreg ); p++;
pieces[ p ] = "21,21,7,7,".split( splitreg ); p++;
pieces[ p ] = "17,11,20,21,".split( splitreg ); p++;
pieces[ p ] = "2,9,10,11,".split( splitreg ); p++;
pieces[ p ] = "18,20,2,9,".split( splitreg ); p++;
pieces[ p ] = "22,0,4,20,".split( splitreg ); p++;
pieces[ p ] = "4,20,16,0,".split( splitreg ); p++;
pieces[ p ] = "6,2,19,20,".split( splitreg ); p++;
pieces[ p ] = "21,3,21,2,".split( splitreg ); p++;
pieces[ p ] = "13,1,2,3,".split( splitreg ); p++;
pieces[ p ] = "13,6,10,1,".split( splitreg ); p++;
pieces[ p ] = "6,15,18,6,".split( splitreg ); p++;
pieces[ p ] = "13,7,2,15,".split( splitreg ); p++;
pieces[ p ] = "1,5,20,7,".split( splitreg ); p++;
pieces[ p ] = "21,18,15,5,".split( splitreg ); p++;
pieces[ p ] = "18,19,15,18,".split( splitreg ); p++;
pieces[ p ] = "6,3,20,19,".split( splitreg ); p++;
pieces[ p ] = "7,20,13,3,".split( splitreg ); p++;
pieces[ p ] = "20,5,17,20,".split( splitreg ); p++;
pieces[ p ] = "10,3,20,5,".split( splitreg ); p++;
pieces[ p ] = "2,9,1,3,".split( splitreg ); p++;
pieces[ p ] = "4,0,12,9,".split( splitreg ); p++;
pieces[ p ] = "16,17,22,0,".split( splitreg ); p++;
pieces[ p ] = "19,21,9,17,".split( splitreg ); p++;
pieces[ p ] = "21,3,6,21,".split( splitreg ); p++;
pieces[ p ] = "2,1,11,3,".split( splitreg ); p++;
pieces[ p ] = "10,20,2,1,".split( splitreg ); p++;
pieces[ p ] = "18,2,6,20,".split( splitreg ); p++;
pieces[ p ] = "2,10,19,2,".split( splitreg ); p++;
pieces[ p ] = "20,2,14,10,".split( splitreg ); p++;
pieces[ p ] = "15,9,5,2,".split( splitreg ); p++;
pieces[ p ] = "15,2,21,9,".split( splitreg ); p++;
pieces[ p ] = "20,20,20,2,".split( splitreg ); p++;
pieces[ p ] = "13,19,20,20,".split( splitreg ); p++;
pieces[ p ] = "17,18,13,19,".split( splitreg ); p++;
pieces[ p ] = "20,5,15,18,".split( splitreg ); p++;
pieces[ p ] = "1,18,3,5,".split( splitreg ); p++;
pieces[ p ] = "12,0,4,18,".split( splitreg ); p++;
pieces[ p ] = "22,15,22,0,".split( splitreg ); p++;
pieces[ p ] = "9,6,19,15,".split( splitreg ); p++;
pieces[ p ] = "6,9,9,6,".split( splitreg ); p++;
pieces[ p ] = "11,5,21,9,".split( splitreg ); p++;
pieces[ p ] = "2,10,3,5,".split( splitreg ); p++;
pieces[ p ] = "6,5,9,10,".split( splitreg ); p++;
pieces[ p ] = "19,2,14,5,".split( splitreg ); p++;
pieces[ p ] = "14,19,18,2,".split( splitreg ); p++;
pieces[ p ] = "5,1,1,19,".split( splitreg ); p++;
pieces[ p ] = "21,3,7,1,".split( splitreg ); p++;
pieces[ p ] = "20,7,7,3,".split( splitreg ); p++;
pieces[ p ] = "20,19,1,7,".split( splitreg ); p++;
pieces[ p ] = "13,14,6,19,".split( splitreg ); p++;
pieces[ p ] = "15,18,5,14,".split( splitreg ); p++;
pieces[ p ] = "3,2,11,18,".split( splitreg ); p++;
pieces[ p ] = "4,0,12,2,".split( splitreg ); p++;
pieces[ p ] = "22,13,22,0,".split( splitreg ); p++;
pieces[ p ] = "19,14,2,13,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "21,21,13,3,".split( splitreg ); p++;
pieces[ p ] = "3,19,11,21,".split( splitreg ); p++;
pieces[ p ] = "9,17,18,19,".split( splitreg ); p++;
pieces[ p ] = "14,9,18,17,".split( splitreg ); p++;
pieces[ p ] = "18,1,15,9,".split( splitreg ); p++;
pieces[ p ] = "1,5,10,1,".split( splitreg ); p++;
pieces[ p ] = "7,15,13,5,".split( splitreg ); p++;
pieces[ p ] = "7,5,6,15,".split( splitreg ); p++;
pieces[ p ] = "1,14,7,5,".split( splitreg ); p++;
pieces[ p ] = "6,13,1,14,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "11,21,6,18,".split( splitreg ); p++;
pieces[ p ] = "12,0,16,21,".split( splitreg ); p++;
pieces[ p ] = "22,5,12,0,".split( splitreg ); p++;
pieces[ p ] = "2,11,15,5,".split( splitreg ); p++;
pieces[ p ] = "18,11,13,11,".split( splitreg ); p++;
pieces[ p ] = "13,17,9,11,".split( splitreg ); p++;
pieces[ p ] = "11,11,13,17,".split( splitreg ); p++;
pieces[ p ] = "18,10,13,11,".split( splitreg ); p++;
pieces[ p ] = "18,6,2,10,".split( splitreg ); p++;
pieces[ p ] = "15,9,9,6,".split( splitreg ); p++;
pieces[ p ] = "10,3,1,9,".split( splitreg ); p++;
pieces[ p ] = "13,10,5,3,".split( splitreg ); p++;
pieces[ p ] = "6,17,14,10,".split( splitreg ); p++;
pieces[ p ] = "7,6,17,17,".split( splitreg ); p++;
pieces[ p ] = "1,5,5,6,".split( splitreg ); p++;
pieces[ p ] = "10,19,14,5,".split( splitreg ); p++;
pieces[ p ] = "6,15,3,19,".split( splitreg ); p++;
pieces[ p ] = "16,0,8,15,".split( splitreg ); p++;
pieces[ p ] = "12,16,0,0,".split( splitreg ); p++;
pieces[ p ] = "15,8,0,16,".split( splitreg ); p++;
pieces[ p ] = "13,12,0,8,".split( splitreg ); p++;
pieces[ p ] = "9,16,0,12,".split( splitreg ); p++;
pieces[ p ] = "13,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "13,16,0,12,".split( splitreg ); p++;
pieces[ p ] = "2,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "9,12,0,12,".split( splitreg ); p++;
pieces[ p ] = "1,12,0,12,".split( splitreg ); p++;
pieces[ p ] = "5,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "14,4,0,22,".split( splitreg ); p++;
pieces[ p ] = "17,16,0,4,".split( splitreg ); p++;
pieces[ p ] = "5,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "14,12,0,12,".split( splitreg ); p++;
pieces[ p ] = "3,4,0,12,".split( splitreg ); p++;
pieces[ p ] = "8,0,0,4,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
