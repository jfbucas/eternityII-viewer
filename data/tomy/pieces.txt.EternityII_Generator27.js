puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator27.js,Eternity II Generator 27".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator27.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,8,16,0,".split( splitreg ); p++;
pieces[ p ] = "0,8,10,8,".split( splitreg ); p++;
pieces[ p ] = "0,16,5,8,".split( splitreg ); p++;
pieces[ p ] = "0,12,21,16,".split( splitreg ); p++;
pieces[ p ] = "0,8,21,12,".split( splitreg ); p++;
pieces[ p ] = "0,16,17,8,".split( splitreg ); p++;
pieces[ p ] = "0,8,14,16,".split( splitreg ); p++;
pieces[ p ] = "0,4,14,8,".split( splitreg ); p++;
pieces[ p ] = "0,8,3,4,".split( splitreg ); p++;
pieces[ p ] = "0,12,15,8,".split( splitreg ); p++;
pieces[ p ] = "0,8,6,12,".split( splitreg ); p++;
pieces[ p ] = "0,16,15,8,".split( splitreg ); p++;
pieces[ p ] = "0,4,21,16,".split( splitreg ); p++;
pieces[ p ] = "0,4,7,4,".split( splitreg ); p++;
pieces[ p ] = "0,8,21,4,".split( splitreg ); p++;
pieces[ p ] = "0,0,8,8,".split( splitreg ); p++;
pieces[ p ] = "16,2,22,0,".split( splitreg ); p++;
pieces[ p ] = "10,1,20,2,".split( splitreg ); p++;
pieces[ p ] = "5,14,17,1,".split( splitreg ); p++;
pieces[ p ] = "21,2,3,14,".split( splitreg ); p++;
pieces[ p ] = "21,21,14,2,".split( splitreg ); p++;
pieces[ p ] = "17,20,20,21,".split( splitreg ); p++;
pieces[ p ] = "14,19,15,20,".split( splitreg ); p++;
pieces[ p ] = "14,7,6,19,".split( splitreg ); p++;
pieces[ p ] = "3,5,2,7,".split( splitreg ); p++;
pieces[ p ] = "15,21,20,5,".split( splitreg ); p++;
pieces[ p ] = "6,19,2,21,".split( splitreg ); p++;
pieces[ p ] = "15,18,9,19,".split( splitreg ); p++;
pieces[ p ] = "21,15,18,18,".split( splitreg ); p++;
pieces[ p ] = "7,7,17,15,".split( splitreg ); p++;
pieces[ p ] = "21,17,3,7,".split( splitreg ); p++;
pieces[ p ] = "8,0,4,17,".split( splitreg ); p++;
pieces[ p ] = "22,11,12,0,".split( splitreg ); p++;
pieces[ p ] = "20,20,10,11,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "3,10,19,6,".split( splitreg ); p++;
pieces[ p ] = "14,5,11,10,".split( splitreg ); p++;
pieces[ p ] = "20,6,7,5,".split( splitreg ); p++;
pieces[ p ] = "15,17,1,6,".split( splitreg ); p++;
pieces[ p ] = "6,10,20,17,".split( splitreg ); p++;
pieces[ p ] = "2,17,11,10,".split( splitreg ); p++;
pieces[ p ] = "20,13,18,17,".split( splitreg ); p++;
pieces[ p ] = "2,5,2,13,".split( splitreg ); p++;
pieces[ p ] = "9,15,10,5,".split( splitreg ); p++;
pieces[ p ] = "18,9,11,15,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "3,10,1,19,".split( splitreg ); p++;
pieces[ p ] = "4,0,22,10,".split( splitreg ); p++;
pieces[ p ] = "12,18,22,0,".split( splitreg ); p++;
pieces[ p ] = "10,5,20,18,".split( splitreg ); p++;
pieces[ p ] = "14,7,9,5,".split( splitreg ); p++;
pieces[ p ] = "19,2,19,7,".split( splitreg ); p++;
pieces[ p ] = "11,2,6,2,".split( splitreg ); p++;
pieces[ p ] = "7,14,19,2,".split( splitreg ); p++;
pieces[ p ] = "1,10,6,14,".split( splitreg ); p++;
pieces[ p ] = "20,21,18,10,".split( splitreg ); p++;
pieces[ p ] = "11,1,13,21,".split( splitreg ); p++;
pieces[ p ] = "18,13,10,1,".split( splitreg ); p++;
pieces[ p ] = "2,7,18,13,".split( splitreg ); p++;
pieces[ p ] = "10,6,18,7,".split( splitreg ); p++;
pieces[ p ] = "11,17,1,6,".split( splitreg ); p++;
pieces[ p ] = "17,13,1,17,".split( splitreg ); p++;
pieces[ p ] = "1,2,2,13,".split( splitreg ); p++;
pieces[ p ] = "22,0,4,2,".split( splitreg ); p++;
pieces[ p ] = "22,9,16,0,".split( splitreg ); p++;
pieces[ p ] = "20,13,18,9,".split( splitreg ); p++;
pieces[ p ] = "9,14,13,13,".split( splitreg ); p++;
pieces[ p ] = "19,17,2,14,".split( splitreg ); p++;
pieces[ p ] = "6,19,5,17,".split( splitreg ); p++;
pieces[ p ] = "19,11,2,19,".split( splitreg ); p++;
pieces[ p ] = "6,19,7,11,".split( splitreg ); p++;
pieces[ p ] = "18,5,21,19,".split( splitreg ); p++;
pieces[ p ] = "13,17,6,5,".split( splitreg ); p++;
pieces[ p ] = "10,5,15,17,".split( splitreg ); p++;
pieces[ p ] = "18,20,10,5,".split( splitreg ); p++;
pieces[ p ] = "18,15,18,20,".split( splitreg ); p++;
pieces[ p ] = "1,14,19,15,".split( splitreg ); p++;
pieces[ p ] = "1,5,6,14,".split( splitreg ); p++;
pieces[ p ] = "2,21,17,5,".split( splitreg ); p++;
pieces[ p ] = "4,0,4,21,".split( splitreg ); p++;
pieces[ p ] = "16,6,22,0,".split( splitreg ); p++;
pieces[ p ] = "18,13,14,6,".split( splitreg ); p++;
pieces[ p ] = "13,5,10,13,".split( splitreg ); p++;
pieces[ p ] = "2,6,9,5,".split( splitreg ); p++;
pieces[ p ] = "5,9,7,6,".split( splitreg ); p++;
pieces[ p ] = "2,15,10,9,".split( splitreg ); p++;
pieces[ p ] = "7,18,15,15,".split( splitreg ); p++;
pieces[ p ] = "21,15,20,18,".split( splitreg ); p++;
pieces[ p ] = "6,6,1,15,".split( splitreg ); p++;
pieces[ p ] = "15,10,9,6,".split( splitreg ); p++;
pieces[ p ] = "10,1,18,10,".split( splitreg ); p++;
pieces[ p ] = "18,21,14,1,".split( splitreg ); p++;
pieces[ p ] = "19,7,13,21,".split( splitreg ); p++;
pieces[ p ] = "6,20,7,7,".split( splitreg ); p++;
pieces[ p ] = "17,1,13,20,".split( splitreg ); p++;
pieces[ p ] = "4,0,12,1,".split( splitreg ); p++;
pieces[ p ] = "22,7,8,0,".split( splitreg ); p++;
pieces[ p ] = "14,15,6,7,".split( splitreg ); p++;
pieces[ p ] = "10,20,11,15,".split( splitreg ); p++;
pieces[ p ] = "9,13,19,20,".split( splitreg ); p++;
pieces[ p ] = "7,2,21,13,".split( splitreg ); p++;
pieces[ p ] = "10,1,17,2,".split( splitreg ); p++;
pieces[ p ] = "15,5,6,1,".split( splitreg ); p++;
pieces[ p ] = "20,1,5,5,".split( splitreg ); p++;
pieces[ p ] = "1,13,21,1,".split( splitreg ); p++;
pieces[ p ] = "9,2,19,13,".split( splitreg ); p++;
pieces[ p ] = "18,5,3,2,".split( splitreg ); p++;
pieces[ p ] = "14,13,11,5,".split( splitreg ); p++;
pieces[ p ] = "13,7,3,13,".split( splitreg ); p++;
pieces[ p ] = "7,10,3,7,".split( splitreg ); p++;
pieces[ p ] = "13,3,18,10,".split( splitreg ); p++;
pieces[ p ] = "12,0,4,3,".split( splitreg ); p++;
pieces[ p ] = "8,11,22,0,".split( splitreg ); p++;
pieces[ p ] = "6,18,18,11,".split( splitreg ); p++;
pieces[ p ] = "11,1,20,18,".split( splitreg ); p++;
pieces[ p ] = "19,5,11,1,".split( splitreg ); p++;
pieces[ p ] = "21,13,14,5,".split( splitreg ); p++;
pieces[ p ] = "17,21,20,13,".split( splitreg ); p++;
pieces[ p ] = "6,7,6,21,".split( splitreg ); p++;
pieces[ p ] = "5,7,21,7,".split( splitreg ); p++;
pieces[ p ] = "21,21,2,7,".split( splitreg ); p++;
pieces[ p ] = "19,18,2,21,".split( splitreg ); p++;
pieces[ p ] = "3,19,13,18,".split( splitreg ); p++;
pieces[ p ] = "11,9,3,19,".split( splitreg ); p++;
pieces[ p ] = "3,13,15,9,".split( splitreg ); p++;
pieces[ p ] = "3,19,7,13,".split( splitreg ); p++;
pieces[ p ] = "18,17,15,19,".split( splitreg ); p++;
pieces[ p ] = "4,0,4,17,".split( splitreg ); p++;
pieces[ p ] = "22,19,8,0,".split( splitreg ); p++;
pieces[ p ] = "18,17,3,19,".split( splitreg ); p++;
pieces[ p ] = "20,19,7,17,".split( splitreg ); p++;
pieces[ p ] = "11,2,11,19,".split( splitreg ); p++;
pieces[ p ] = "14,14,2,2,".split( splitreg ); p++;
pieces[ p ] = "20,15,17,14,".split( splitreg ); p++;
pieces[ p ] = "6,14,10,15,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "2,17,21,3,".split( splitreg ); p++;
pieces[ p ] = "2,19,11,17,".split( splitreg ); p++;
pieces[ p ] = "13,3,10,19,".split( splitreg ); p++;
pieces[ p ] = "3,13,14,3,".split( splitreg ); p++;
pieces[ p ] = "15,15,13,13,".split( splitreg ); p++;
pieces[ p ] = "7,9,20,15,".split( splitreg ); p++;
pieces[ p ] = "15,20,9,9,".split( splitreg ); p++;
pieces[ p ] = "4,0,12,20,".split( splitreg ); p++;
pieces[ p ] = "8,5,12,0,".split( splitreg ); p++;
pieces[ p ] = "3,14,13,5,".split( splitreg ); p++;
pieces[ p ] = "7,2,9,14,".split( splitreg ); p++;
pieces[ p ] = "11,11,1,2,".split( splitreg ); p++;
pieces[ p ] = "2,10,11,11,".split( splitreg ); p++;
pieces[ p ] = "17,6,9,10,".split( splitreg ); p++;
pieces[ p ] = "10,1,9,6,".split( splitreg ); p++;
pieces[ p ] = "3,6,2,1,".split( splitreg ); p++;
pieces[ p ] = "21,10,21,6,".split( splitreg ); p++;
pieces[ p ] = "11,19,1,10,".split( splitreg ); p++;
pieces[ p ] = "10,21,10,19,".split( splitreg ); p++;
pieces[ p ] = "14,3,14,21,".split( splitreg ); p++;
pieces[ p ] = "13,7,13,3,".split( splitreg ); p++;
pieces[ p ] = "20,20,18,7,".split( splitreg ); p++;
pieces[ p ] = "9,15,19,20,".split( splitreg ); p++;
pieces[ p ] = "12,0,4,15,".split( splitreg ); p++;
pieces[ p ] = "12,18,16,0,".split( splitreg ); p++;
pieces[ p ] = "13,20,11,18,".split( splitreg ); p++;
pieces[ p ] = "9,10,20,20,".split( splitreg ); p++;
pieces[ p ] = "1,3,11,10,".split( splitreg ); p++;
pieces[ p ] = "11,5,5,3,".split( splitreg ); p++;
pieces[ p ] = "9,9,10,5,".split( splitreg ); p++;
pieces[ p ] = "9,21,11,9,".split( splitreg ); p++;
pieces[ p ] = "2,15,15,21,".split( splitreg ); p++;
pieces[ p ] = "21,14,2,15,".split( splitreg ); p++;
pieces[ p ] = "1,6,9,14,".split( splitreg ); p++;
pieces[ p ] = "10,14,2,6,".split( splitreg ); p++;
pieces[ p ] = "14,10,10,14,".split( splitreg ); p++;
pieces[ p ] = "13,21,20,10,".split( splitreg ); p++;
pieces[ p ] = "18,3,6,21,".split( splitreg ); p++;
pieces[ p ] = "19,7,2,3,".split( splitreg ); p++;
pieces[ p ] = "4,0,22,7,".split( splitreg ); p++;
pieces[ p ] = "16,1,22,0,".split( splitreg ); p++;
pieces[ p ] = "11,14,1,1,".split( splitreg ); p++;
pieces[ p ] = "20,13,14,14,".split( splitreg ); p++;
pieces[ p ] = "11,20,13,13,".split( splitreg ); p++;
pieces[ p ] = "5,9,6,20,".split( splitreg ); p++;
pieces[ p ] = "10,20,18,9,".split( splitreg ); p++;
pieces[ p ] = "11,9,19,20,".split( splitreg ); p++;
pieces[ p ] = "15,14,6,9,".split( splitreg ); p++;
pieces[ p ] = "2,7,13,14,".split( splitreg ); p++;
pieces[ p ] = "9,6,6,7,".split( splitreg ); p++;
pieces[ p ] = "2,3,19,6,".split( splitreg ); p++;
pieces[ p ] = "10,3,9,3,".split( splitreg ); p++;
pieces[ p ] = "20,15,2,3,".split( splitreg ); p++;
pieces[ p ] = "6,11,21,15,".split( splitreg ); p++;
pieces[ p ] = "2,3,21,11,".split( splitreg ); p++;
pieces[ p ] = "22,0,4,3,".split( splitreg ); p++;
pieces[ p ] = "22,3,8,0,".split( splitreg ); p++;
pieces[ p ] = "1,5,9,3,".split( splitreg ); p++;
pieces[ p ] = "14,1,9,5,".split( splitreg ); p++;
pieces[ p ] = "13,5,7,1,".split( splitreg ); p++;
pieces[ p ] = "6,7,1,5,".split( splitreg ); p++;
pieces[ p ] = "18,11,6,7,".split( splitreg ); p++;
pieces[ p ] = "19,3,17,11,".split( splitreg ); p++;
pieces[ p ] = "6,17,17,3,".split( splitreg ); p++;
pieces[ p ] = "13,19,3,17,".split( splitreg ); p++;
pieces[ p ] = "6,17,18,19,".split( splitreg ); p++;
pieces[ p ] = "19,13,21,17,".split( splitreg ); p++;
pieces[ p ] = "9,1,19,13,".split( splitreg ); p++;
pieces[ p ] = "2,5,19,1,".split( splitreg ); p++;
pieces[ p ] = "21,18,5,5,".split( splitreg ); p++;
pieces[ p ] = "21,9,17,18,".split( splitreg ); p++;
pieces[ p ] = "4,0,16,9,".split( splitreg ); p++;
pieces[ p ] = "8,3,16,0,".split( splitreg ); p++;
pieces[ p ] = "9,14,6,3,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "7,5,5,3,".split( splitreg ); p++;
pieces[ p ] = "1,21,1,5,".split( splitreg ); p++;
pieces[ p ] = "6,7,1,21,".split( splitreg ); p++;
pieces[ p ] = "17,14,11,7,".split( splitreg ); p++;
pieces[ p ] = "17,3,11,14,".split( splitreg ); p++;
pieces[ p ] = "3,5,9,3,".split( splitreg ); p++;
pieces[ p ] = "18,15,1,5,".split( splitreg ); p++;
pieces[ p ] = "21,15,15,15,".split( splitreg ); p++;
pieces[ p ] = "19,5,9,15,".split( splitreg ); p++;
pieces[ p ] = "19,13,9,5,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "17,2,17,18,".split( splitreg ); p++;
pieces[ p ] = "16,0,12,2,".split( splitreg ); p++;
pieces[ p ] = "16,17,12,0,".split( splitreg ); p++;
pieces[ p ] = "6,13,14,17,".split( splitreg ); p++;
pieces[ p ] = "18,19,17,13,".split( splitreg ); p++;
pieces[ p ] = "5,2,15,19,".split( splitreg ); p++;
pieces[ p ] = "1,1,7,2,".split( splitreg ); p++;
pieces[ p ] = "1,10,10,1,".split( splitreg ); p++;
pieces[ p ] = "11,15,11,10,".split( splitreg ); p++;
pieces[ p ] = "11,17,20,15,".split( splitreg ); p++;
pieces[ p ] = "9,14,18,17,".split( splitreg ); p++;
pieces[ p ] = "1,19,7,14,".split( splitreg ); p++;
pieces[ p ] = "15,20,18,19,".split( splitreg ); p++;
pieces[ p ] = "9,20,11,20,".split( splitreg ); p++;
pieces[ p ] = "9,1,11,20,".split( splitreg ); p++;
pieces[ p ] = "10,9,11,1,".split( splitreg ); p++;
pieces[ p ] = "17,18,20,9,".split( splitreg ); p++;
pieces[ p ] = "12,0,12,18,".split( splitreg ); p++;
pieces[ p ] = "12,22,0,0,".split( splitreg ); p++;
pieces[ p ] = "14,8,0,22,".split( splitreg ); p++;
pieces[ p ] = "17,22,0,8,".split( splitreg ); p++;
pieces[ p ] = "15,22,0,22,".split( splitreg ); p++;
pieces[ p ] = "7,12,0,22,".split( splitreg ); p++;
pieces[ p ] = "10,16,0,12,".split( splitreg ); p++;
pieces[ p ] = "11,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "20,16,0,12,".split( splitreg ); p++;
pieces[ p ] = "18,16,0,16,".split( splitreg ); p++;
pieces[ p ] = "7,22,0,16,".split( splitreg ); p++;
pieces[ p ] = "18,16,0,22,".split( splitreg ); p++;
pieces[ p ] = "11,22,0,16,".split( splitreg ); p++;
pieces[ p ] = "11,4,0,22,".split( splitreg ); p++;
pieces[ p ] = "11,4,0,4,".split( splitreg ); p++;
pieces[ p ] = "20,12,0,4,".split( splitreg ); p++;
pieces[ p ] = "12,0,0,12,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
