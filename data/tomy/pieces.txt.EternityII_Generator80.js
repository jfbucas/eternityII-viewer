puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator80.js,Eternity II Generator 80".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator80.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,16,16,0,".split( splitreg ); p++;
pieces[ p ] = "0,8,15,16,".split( splitreg ); p++;
pieces[ p ] = "0,12,3,8,".split( splitreg ); p++;
pieces[ p ] = "0,22,10,12,".split( splitreg ); p++;
pieces[ p ] = "0,4,2,22,".split( splitreg ); p++;
pieces[ p ] = "0,16,17,4,".split( splitreg ); p++;
pieces[ p ] = "0,8,9,16,".split( splitreg ); p++;
pieces[ p ] = "0,4,19,8,".split( splitreg ); p++;
pieces[ p ] = "0,12,17,4,".split( splitreg ); p++;
pieces[ p ] = "0,8,20,12,".split( splitreg ); p++;
pieces[ p ] = "0,22,15,8,".split( splitreg ); p++;
pieces[ p ] = "0,16,18,22,".split( splitreg ); p++;
pieces[ p ] = "0,4,11,16,".split( splitreg ); p++;
pieces[ p ] = "0,22,18,4,".split( splitreg ); p++;
pieces[ p ] = "0,12,15,22,".split( splitreg ); p++;
pieces[ p ] = "0,0,12,12,".split( splitreg ); p++;
pieces[ p ] = "16,20,4,0,".split( splitreg ); p++;
pieces[ p ] = "15,7,13,20,".split( splitreg ); p++;
pieces[ p ] = "3,11,17,7,".split( splitreg ); p++;
pieces[ p ] = "10,3,15,11,".split( splitreg ); p++;
pieces[ p ] = "2,11,6,3,".split( splitreg ); p++;
pieces[ p ] = "17,20,1,11,".split( splitreg ); p++;
pieces[ p ] = "9,9,9,20,".split( splitreg ); p++;
pieces[ p ] = "19,14,7,9,".split( splitreg ); p++;
pieces[ p ] = "17,1,1,14,".split( splitreg ); p++;
pieces[ p ] = "20,20,9,1,".split( splitreg ); p++;
pieces[ p ] = "15,20,10,20,".split( splitreg ); p++;
pieces[ p ] = "18,11,17,20,".split( splitreg ); p++;
pieces[ p ] = "11,15,6,11,".split( splitreg ); p++;
pieces[ p ] = "18,17,17,15,".split( splitreg ); p++;
pieces[ p ] = "15,2,14,17,".split( splitreg ); p++;
pieces[ p ] = "12,0,12,2,".split( splitreg ); p++;
pieces[ p ] = "4,19,4,0,".split( splitreg ); p++;
pieces[ p ] = "13,20,18,19,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "15,13,9,6,".split( splitreg ); p++;
pieces[ p ] = "6,21,9,13,".split( splitreg ); p++;
pieces[ p ] = "1,21,21,21,".split( splitreg ); p++;
pieces[ p ] = "9,3,5,21,".split( splitreg ); p++;
pieces[ p ] = "7,17,18,3,".split( splitreg ); p++;
pieces[ p ] = "1,14,1,17,".split( splitreg ); p++;
pieces[ p ] = "9,15,7,14,".split( splitreg ); p++;
pieces[ p ] = "10,13,18,15,".split( splitreg ); p++;
pieces[ p ] = "17,1,6,13,".split( splitreg ); p++;
pieces[ p ] = "6,9,1,1,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "14,10,18,19,".split( splitreg ); p++;
pieces[ p ] = "12,0,4,10,".split( splitreg ); p++;
pieces[ p ] = "4,6,16,0,".split( splitreg ); p++;
pieces[ p ] = "18,14,21,6,".split( splitreg ); p++;
pieces[ p ] = "14,2,10,14,".split( splitreg ); p++;
pieces[ p ] = "9,13,6,2,".split( splitreg ); p++;
pieces[ p ] = "9,21,10,13,".split( splitreg ); p++;
pieces[ p ] = "21,6,19,21,".split( splitreg ); p++;
pieces[ p ] = "5,21,21,6,".split( splitreg ); p++;
pieces[ p ] = "18,5,11,21,".split( splitreg ); p++;
pieces[ p ] = "1,14,21,5,".split( splitreg ); p++;
pieces[ p ] = "7,14,2,14,".split( splitreg ); p++;
pieces[ p ] = "18,7,20,14,".split( splitreg ); p++;
pieces[ p ] = "6,10,3,7,".split( splitreg ); p++;
pieces[ p ] = "1,2,7,10,".split( splitreg ); p++;
pieces[ p ] = "17,10,13,2,".split( splitreg ); p++;
pieces[ p ] = "18,14,1,10,".split( splitreg ); p++;
pieces[ p ] = "4,0,4,14,".split( splitreg ); p++;
pieces[ p ] = "16,9,8,0,".split( splitreg ); p++;
pieces[ p ] = "21,15,7,9,".split( splitreg ); p++;
pieces[ p ] = "10,20,1,15,".split( splitreg ); p++;
pieces[ p ] = "6,3,9,20,".split( splitreg ); p++;
pieces[ p ] = "10,2,17,3,".split( splitreg ); p++;
pieces[ p ] = "19,14,3,2,".split( splitreg ); p++;
pieces[ p ] = "21,10,21,14,".split( splitreg ); p++;
pieces[ p ] = "11,21,6,10,".split( splitreg ); p++;
pieces[ p ] = "21,20,19,21,".split( splitreg ); p++;
pieces[ p ] = "2,17,19,20,".split( splitreg ); p++;
pieces[ p ] = "20,9,5,17,".split( splitreg ); p++;
pieces[ p ] = "3,20,9,9,".split( splitreg ); p++;
pieces[ p ] = "7,19,10,20,".split( splitreg ); p++;
pieces[ p ] = "13,10,20,19,".split( splitreg ); p++;
pieces[ p ] = "1,21,7,10,".split( splitreg ); p++;
pieces[ p ] = "4,0,12,21,".split( splitreg ); p++;
pieces[ p ] = "8,14,16,0,".split( splitreg ); p++;
pieces[ p ] = "7,19,18,14,".split( splitreg ); p++;
pieces[ p ] = "1,19,2,19,".split( splitreg ); p++;
pieces[ p ] = "9,6,6,19,".split( splitreg ); p++;
pieces[ p ] = "17,13,10,6,".split( splitreg ); p++;
pieces[ p ] = "3,5,11,13,".split( splitreg ); p++;
pieces[ p ] = "21,7,18,5,".split( splitreg ); p++;
pieces[ p ] = "6,9,5,7,".split( splitreg ); p++;
pieces[ p ] = "19,5,14,9,".split( splitreg ); p++;
pieces[ p ] = "19,6,2,5,".split( splitreg ); p++;
pieces[ p ] = "5,21,15,6,".split( splitreg ); p++;
pieces[ p ] = "9,5,3,21,".split( splitreg ); p++;
pieces[ p ] = "10,15,20,5,".split( splitreg ); p++;
pieces[ p ] = "20,19,11,15,".split( splitreg ); p++;
pieces[ p ] = "7,13,2,19,".split( splitreg ); p++;
pieces[ p ] = "12,0,8,13,".split( splitreg ); p++;
pieces[ p ] = "16,13,12,0,".split( splitreg ); p++;
pieces[ p ] = "18,18,1,13,".split( splitreg ); p++;
pieces[ p ] = "2,11,20,18,".split( splitreg ); p++;
pieces[ p ] = "6,2,2,11,".split( splitreg ); p++;
pieces[ p ] = "10,6,11,2,".split( splitreg ); p++;
pieces[ p ] = "11,7,6,6,".split( splitreg ); p++;
pieces[ p ] = "18,19,9,7,".split( splitreg ); p++;
pieces[ p ] = "5,10,10,19,".split( splitreg ); p++;
pieces[ p ] = "14,11,21,10,".split( splitreg ); p++;
pieces[ p ] = "2,2,15,11,".split( splitreg ); p++;
pieces[ p ] = "15,10,19,2,".split( splitreg ); p++;
pieces[ p ] = "3,2,13,10,".split( splitreg ); p++;
pieces[ p ] = "20,9,9,2,".split( splitreg ); p++;
pieces[ p ] = "11,21,14,9,".split( splitreg ); p++;
pieces[ p ] = "2,11,21,21,".split( splitreg ); p++;
pieces[ p ] = "8,0,8,11,".split( splitreg ); p++;
pieces[ p ] = "12,7,8,0,".split( splitreg ); p++;
pieces[ p ] = "1,2,13,7,".split( splitreg ); p++;
pieces[ p ] = "20,1,5,2,".split( splitreg ); p++;
pieces[ p ] = "2,20,7,1,".split( splitreg ); p++;
pieces[ p ] = "11,1,18,20,".split( splitreg ); p++;
pieces[ p ] = "6,11,5,1,".split( splitreg ); p++;
pieces[ p ] = "9,5,7,11,".split( splitreg ); p++;
pieces[ p ] = "10,5,21,5,".split( splitreg ); p++;
pieces[ p ] = "21,17,17,5,".split( splitreg ); p++;
pieces[ p ] = "15,2,7,17,".split( splitreg ); p++;
pieces[ p ] = "19,1,15,2,".split( splitreg ); p++;
pieces[ p ] = "13,15,13,1,".split( splitreg ); p++;
pieces[ p ] = "9,6,15,15,".split( splitreg ); p++;
pieces[ p ] = "14,19,2,6,".split( splitreg ); p++;
pieces[ p ] = "21,10,3,19,".split( splitreg ); p++;
pieces[ p ] = "8,0,4,10,".split( splitreg ); p++;
pieces[ p ] = "8,11,22,0,".split( splitreg ); p++;
pieces[ p ] = "13,19,15,11,".split( splitreg ); p++;
pieces[ p ] = "5,6,15,19,".split( splitreg ); p++;
pieces[ p ] = "7,10,14,6,".split( splitreg ); p++;
pieces[ p ] = "18,18,18,10,".split( splitreg ); p++;
pieces[ p ] = "5,5,6,18,".split( splitreg ); p++;
pieces[ p ] = "7,14,19,5,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "17,17,3,3,".split( splitreg ); p++;
pieces[ p ] = "7,18,9,17,".split( splitreg ); p++;
pieces[ p ] = "15,13,19,18,".split( splitreg ); p++;
pieces[ p ] = "13,7,18,13,".split( splitreg ); p++;
pieces[ p ] = "15,17,5,7,".split( splitreg ); p++;
pieces[ p ] = "2,20,13,17,".split( splitreg ); p++;
pieces[ p ] = "3,7,9,20,".split( splitreg ); p++;
pieces[ p ] = "4,0,16,7,".split( splitreg ); p++;
pieces[ p ] = "22,7,8,0,".split( splitreg ); p++;
pieces[ p ] = "15,5,7,7,".split( splitreg ); p++;
pieces[ p ] = "15,10,1,5,".split( splitreg ); p++;
pieces[ p ] = "14,19,1,10,".split( splitreg ); p++;
pieces[ p ] = "18,11,11,19,".split( splitreg ); p++;
pieces[ p ] = "6,5,9,11,".split( splitreg ); p++;
pieces[ p ] = "19,15,19,5,".split( splitreg ); p++;
pieces[ p ] = "3,17,6,15,".split( splitreg ); p++;
pieces[ p ] = "3,1,13,17,".split( splitreg ); p++;
pieces[ p ] = "9,17,3,1,".split( splitreg ); p++;
pieces[ p ] = "19,17,6,17,".split( splitreg ); p++;
pieces[ p ] = "18,11,1,17,".split( splitreg ); p++;
pieces[ p ] = "5,11,3,11,".split( splitreg ); p++;
pieces[ p ] = "13,19,5,11,".split( splitreg ); p++;
pieces[ p ] = "9,7,3,19,".split( splitreg ); p++;
pieces[ p ] = "16,0,22,7,".split( splitreg ); p++;
pieces[ p ] = "8,18,4,0,".split( splitreg ); p++;
pieces[ p ] = "7,2,19,18,".split( splitreg ); p++;
pieces[ p ] = "1,19,2,2,".split( splitreg ); p++;
pieces[ p ] = "1,6,11,19,".split( splitreg ); p++;
pieces[ p ] = "11,1,5,6,".split( splitreg ); p++;
pieces[ p ] = "9,3,15,1,".split( splitreg ); p++;
pieces[ p ] = "19,6,10,3,".split( splitreg ); p++;
pieces[ p ] = "6,7,10,6,".split( splitreg ); p++;
pieces[ p ] = "13,20,14,7,".split( splitreg ); p++;
pieces[ p ] = "3,3,11,20,".split( splitreg ); p++;
pieces[ p ] = "6,13,13,3,".split( splitreg ); p++;
pieces[ p ] = "1,17,11,13,".split( splitreg ); p++;
pieces[ p ] = "3,21,10,17,".split( splitreg ); p++;
pieces[ p ] = "5,13,10,21,".split( splitreg ); p++;
pieces[ p ] = "3,21,3,13,".split( splitreg ); p++;
pieces[ p ] = "22,0,12,21,".split( splitreg ); p++;
pieces[ p ] = "4,2,16,0,".split( splitreg ); p++;
pieces[ p ] = "19,13,10,2,".split( splitreg ); p++;
pieces[ p ] = "2,10,3,13,".split( splitreg ); p++;
pieces[ p ] = "11,6,9,10,".split( splitreg ); p++;
pieces[ p ] = "5,18,20,6,".split( splitreg ); p++;
pieces[ p ] = "15,14,9,18,".split( splitreg ); p++;
pieces[ p ] = "10,14,17,14,".split( splitreg ); p++;
pieces[ p ] = "10,15,20,14,".split( splitreg ); p++;
pieces[ p ] = "14,15,20,15,".split( splitreg ); p++;
pieces[ p ] = "11,3,13,15,".split( splitreg ); p++;
pieces[ p ] = "13,2,14,3,".split( splitreg ); p++;
pieces[ p ] = "11,9,2,2,".split( splitreg ); p++;
pieces[ p ] = "10,1,20,9,".split( splitreg ); p++;
pieces[ p ] = "10,21,5,1,".split( splitreg ); p++;
pieces[ p ] = "3,10,14,21,".split( splitreg ); p++;
pieces[ p ] = "12,0,8,10,".split( splitreg ); p++;
pieces[ p ] = "16,1,4,0,".split( splitreg ); p++;
pieces[ p ] = "10,2,17,1,".split( splitreg ); p++;
pieces[ p ] = "3,2,9,2,".split( splitreg ); p++;
pieces[ p ] = "9,6,1,2,".split( splitreg ); p++;
pieces[ p ] = "20,18,13,6,".split( splitreg ); p++;
pieces[ p ] = "9,20,17,18,".split( splitreg ); p++;
pieces[ p ] = "17,18,18,20,".split( splitreg ); p++;
pieces[ p ] = "20,14,19,18,".split( splitreg ); p++;
pieces[ p ] = "20,6,7,14,".split( splitreg ); p++;
pieces[ p ] = "13,21,19,6,".split( splitreg ); p++;
pieces[ p ] = "14,15,6,21,".split( splitreg ); p++;
pieces[ p ] = "2,19,7,15,".split( splitreg ); p++;
pieces[ p ] = "20,15,7,19,".split( splitreg ); p++;
pieces[ p ] = "5,19,5,15,".split( splitreg ); p++;
pieces[ p ] = "14,1,3,19,".split( splitreg ); p++;
pieces[ p ] = "8,0,16,1,".split( splitreg ); p++;
pieces[ p ] = "4,21,22,0,".split( splitreg ); p++;
pieces[ p ] = "17,14,1,21,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "1,14,21,3,".split( splitreg ); p++;
pieces[ p ] = "13,13,20,14,".split( splitreg ); p++;
pieces[ p ] = "17,20,15,13,".split( splitreg ); p++;
pieces[ p ] = "18,6,21,20,".split( splitreg ); p++;
pieces[ p ] = "19,14,3,6,".split( splitreg ); p++;
pieces[ p ] = "7,13,9,14,".split( splitreg ); p++;
pieces[ p ] = "19,14,3,13,".split( splitreg ); p++;
pieces[ p ] = "6,5,18,14,".split( splitreg ); p++;
pieces[ p ] = "7,11,18,5,".split( splitreg ); p++;
pieces[ p ] = "7,13,15,11,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "3,11,21,18,".split( splitreg ); p++;
pieces[ p ] = "16,0,12,11,".split( splitreg ); p++;
pieces[ p ] = "22,1,8,0,".split( splitreg ); p++;
pieces[ p ] = "1,2,7,1,".split( splitreg ); p++;
pieces[ p ] = "18,2,17,2,".split( splitreg ); p++;
pieces[ p ] = "21,17,1,2,".split( splitreg ); p++;
pieces[ p ] = "20,18,9,17,".split( splitreg ); p++;
pieces[ p ] = "15,9,1,18,".split( splitreg ); p++;
pieces[ p ] = "21,5,20,9,".split( splitreg ); p++;
pieces[ p ] = "3,5,14,5,".split( splitreg ); p++;
pieces[ p ] = "9,5,15,5,".split( splitreg ); p++;
pieces[ p ] = "3,18,11,5,".split( splitreg ); p++;
pieces[ p ] = "18,11,5,18,".split( splitreg ); p++;
pieces[ p ] = "18,5,13,11,".split( splitreg ); p++;
pieces[ p ] = "15,17,13,5,".split( splitreg ); p++;
pieces[ p ] = "10,7,20,17,".split( splitreg ); p++;
pieces[ p ] = "21,3,17,7,".split( splitreg ); p++;
pieces[ p ] = "12,0,4,3,".split( splitreg ); p++;
pieces[ p ] = "8,22,0,0,".split( splitreg ); p++;
pieces[ p ] = "7,22,0,22,".split( splitreg ); p++;
pieces[ p ] = "17,8,0,22,".split( splitreg ); p++;
pieces[ p ] = "1,16,0,8,".split( splitreg ); p++;
pieces[ p ] = "9,16,0,16,".split( splitreg ); p++;
pieces[ p ] = "1,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "20,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "14,22,0,22,".split( splitreg ); p++;
pieces[ p ] = "15,12,0,22,".split( splitreg ); p++;
pieces[ p ] = "11,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "5,16,0,22,".split( splitreg ); p++;
pieces[ p ] = "13,8,0,16,".split( splitreg ); p++;
pieces[ p ] = "13,22,0,8,".split( splitreg ); p++;
pieces[ p ] = "20,4,0,22,".split( splitreg ); p++;
pieces[ p ] = "17,12,0,4,".split( splitreg ); p++;
pieces[ p ] = "4,0,0,12,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
