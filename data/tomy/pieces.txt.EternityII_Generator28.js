puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator28.js,Eternity II Generator 28".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator28.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,22,4,0,".split( splitreg ); p++;
pieces[ p ] = "0,22,5,22,".split( splitreg ); p++;
pieces[ p ] = "0,22,11,22,".split( splitreg ); p++;
pieces[ p ] = "0,12,1,22,".split( splitreg ); p++;
pieces[ p ] = "0,4,19,12,".split( splitreg ); p++;
pieces[ p ] = "0,16,13,4,".split( splitreg ); p++;
pieces[ p ] = "0,8,13,16,".split( splitreg ); p++;
pieces[ p ] = "0,4,6,8,".split( splitreg ); p++;
pieces[ p ] = "0,12,21,4,".split( splitreg ); p++;
pieces[ p ] = "0,16,1,12,".split( splitreg ); p++;
pieces[ p ] = "0,16,6,16,".split( splitreg ); p++;
pieces[ p ] = "0,8,17,16,".split( splitreg ); p++;
pieces[ p ] = "0,8,13,8,".split( splitreg ); p++;
pieces[ p ] = "0,8,11,8,".split( splitreg ); p++;
pieces[ p ] = "0,22,19,8,".split( splitreg ); p++;
pieces[ p ] = "0,0,8,22,".split( splitreg ); p++;
pieces[ p ] = "4,6,22,0,".split( splitreg ); p++;
pieces[ p ] = "5,14,1,6,".split( splitreg ); p++;
pieces[ p ] = "11,3,17,14,".split( splitreg ); p++;
pieces[ p ] = "1,2,3,3,".split( splitreg ); p++;
pieces[ p ] = "19,6,9,2,".split( splitreg ); p++;
pieces[ p ] = "13,7,19,6,".split( splitreg ); p++;
pieces[ p ] = "13,1,20,7,".split( splitreg ); p++;
pieces[ p ] = "6,1,20,1,".split( splitreg ); p++;
pieces[ p ] = "21,6,3,1,".split( splitreg ); p++;
pieces[ p ] = "1,17,21,6,".split( splitreg ); p++;
pieces[ p ] = "6,1,10,17,".split( splitreg ); p++;
pieces[ p ] = "17,6,13,1,".split( splitreg ); p++;
pieces[ p ] = "13,6,9,6,".split( splitreg ); p++;
pieces[ p ] = "11,9,17,6,".split( splitreg ); p++;
pieces[ p ] = "19,2,3,9,".split( splitreg ); p++;
pieces[ p ] = "8,0,8,2,".split( splitreg ); p++;
pieces[ p ] = "22,9,16,0,".split( splitreg ); p++;
pieces[ p ] = "1,20,9,9,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "3,9,19,6,".split( splitreg ); p++;
pieces[ p ] = "9,13,19,9,".split( splitreg ); p++;
pieces[ p ] = "19,20,2,13,".split( splitreg ); p++;
pieces[ p ] = "20,11,15,20,".split( splitreg ); p++;
pieces[ p ] = "20,18,11,11,".split( splitreg ); p++;
pieces[ p ] = "3,3,15,18,".split( splitreg ); p++;
pieces[ p ] = "21,14,15,3,".split( splitreg ); p++;
pieces[ p ] = "10,20,19,14,".split( splitreg ); p++;
pieces[ p ] = "13,11,2,20,".split( splitreg ); p++;
pieces[ p ] = "9,9,7,11,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "3,11,17,19,".split( splitreg ); p++;
pieces[ p ] = "8,0,16,11,".split( splitreg ); p++;
pieces[ p ] = "16,9,16,0,".split( splitreg ); p++;
pieces[ p ] = "9,10,15,9,".split( splitreg ); p++;
pieces[ p ] = "14,15,5,10,".split( splitreg ); p++;
pieces[ p ] = "19,15,14,15,".split( splitreg ); p++;
pieces[ p ] = "19,5,9,15,".split( splitreg ); p++;
pieces[ p ] = "2,20,7,5,".split( splitreg ); p++;
pieces[ p ] = "15,18,3,20,".split( splitreg ); p++;
pieces[ p ] = "11,19,7,18,".split( splitreg ); p++;
pieces[ p ] = "15,10,5,19,".split( splitreg ); p++;
pieces[ p ] = "15,10,20,10,".split( splitreg ); p++;
pieces[ p ] = "19,9,10,10,".split( splitreg ); p++;
pieces[ p ] = "2,18,7,9,".split( splitreg ); p++;
pieces[ p ] = "7,18,17,18,".split( splitreg ); p++;
pieces[ p ] = "17,17,2,18,".split( splitreg ); p++;
pieces[ p ] = "17,21,10,17,".split( splitreg ); p++;
pieces[ p ] = "16,0,12,21,".split( splitreg ); p++;
pieces[ p ] = "16,10,16,0,".split( splitreg ); p++;
pieces[ p ] = "15,20,20,10,".split( splitreg ); p++;
pieces[ p ] = "5,17,5,20,".split( splitreg ); p++;
pieces[ p ] = "14,15,2,17,".split( splitreg ); p++;
pieces[ p ] = "9,3,10,15,".split( splitreg ); p++;
pieces[ p ] = "7,17,9,3,".split( splitreg ); p++;
pieces[ p ] = "3,5,5,17,".split( splitreg ); p++;
pieces[ p ] = "7,3,15,5,".split( splitreg ); p++;
pieces[ p ] = "5,15,5,3,".split( splitreg ); p++;
pieces[ p ] = "20,6,2,15,".split( splitreg ); p++;
pieces[ p ] = "10,18,15,6,".split( splitreg ); p++;
pieces[ p ] = "7,10,5,18,".split( splitreg ); p++;
pieces[ p ] = "17,10,7,10,".split( splitreg ); p++;
pieces[ p ] = "2,11,17,10,".split( splitreg ); p++;
pieces[ p ] = "10,17,18,11,".split( splitreg ); p++;
pieces[ p ] = "12,0,8,17,".split( splitreg ); p++;
pieces[ p ] = "16,18,4,0,".split( splitreg ); p++;
pieces[ p ] = "20,2,19,18,".split( splitreg ); p++;
pieces[ p ] = "5,18,15,2,".split( splitreg ); p++;
pieces[ p ] = "2,13,1,18,".split( splitreg ); p++;
pieces[ p ] = "10,9,3,13,".split( splitreg ); p++;
pieces[ p ] = "9,14,7,9,".split( splitreg ); p++;
pieces[ p ] = "5,13,15,14,".split( splitreg ); p++;
pieces[ p ] = "15,3,19,13,".split( splitreg ); p++;
pieces[ p ] = "5,14,13,3,".split( splitreg ); p++;
pieces[ p ] = "2,6,10,14,".split( splitreg ); p++;
pieces[ p ] = "15,2,5,6,".split( splitreg ); p++;
pieces[ p ] = "5,7,14,2,".split( splitreg ); p++;
pieces[ p ] = "7,13,20,7,".split( splitreg ); p++;
pieces[ p ] = "17,19,14,13,".split( splitreg ); p++;
pieces[ p ] = "18,10,14,19,".split( splitreg ); p++;
pieces[ p ] = "8,0,4,10,".split( splitreg ); p++;
pieces[ p ] = "4,19,8,0,".split( splitreg ); p++;
pieces[ p ] = "19,17,18,19,".split( splitreg ); p++;
pieces[ p ] = "15,14,20,17,".split( splitreg ); p++;
pieces[ p ] = "1,20,6,14,".split( splitreg ); p++;
pieces[ p ] = "3,13,21,20,".split( splitreg ); p++;
pieces[ p ] = "7,14,3,13,".split( splitreg ); p++;
pieces[ p ] = "15,11,19,14,".split( splitreg ); p++;
pieces[ p ] = "19,15,13,11,".split( splitreg ); p++;
pieces[ p ] = "13,19,11,15,".split( splitreg ); p++;
pieces[ p ] = "10,14,6,19,".split( splitreg ); p++;
pieces[ p ] = "5,2,11,14,".split( splitreg ); p++;
pieces[ p ] = "14,17,3,2,".split( splitreg ); p++;
pieces[ p ] = "20,19,3,17,".split( splitreg ); p++;
pieces[ p ] = "14,3,11,19,".split( splitreg ); p++;
pieces[ p ] = "14,6,9,3,".split( splitreg ); p++;
pieces[ p ] = "4,0,12,6,".split( splitreg ); p++;
pieces[ p ] = "8,19,4,0,".split( splitreg ); p++;
pieces[ p ] = "18,17,14,19,".split( splitreg ); p++;
pieces[ p ] = "20,15,5,17,".split( splitreg ); p++;
pieces[ p ] = "6,19,15,15,".split( splitreg ); p++;
pieces[ p ] = "21,17,7,19,".split( splitreg ); p++;
pieces[ p ] = "3,2,6,17,".split( splitreg ); p++;
pieces[ p ] = "19,15,14,2,".split( splitreg ); p++;
pieces[ p ] = "13,10,21,15,".split( splitreg ); p++;
pieces[ p ] = "11,7,2,10,".split( splitreg ); p++;
pieces[ p ] = "6,5,21,7,".split( splitreg ); p++;
pieces[ p ] = "11,15,2,5,".split( splitreg ); p++;
pieces[ p ] = "3,7,2,15,".split( splitreg ); p++;
pieces[ p ] = "3,18,20,7,".split( splitreg ); p++;
pieces[ p ] = "11,10,21,18,".split( splitreg ); p++;
pieces[ p ] = "9,10,14,10,".split( splitreg ); p++;
pieces[ p ] = "12,0,8,10,".split( splitreg ); p++;
pieces[ p ] = "4,7,22,0,".split( splitreg ); p++;
pieces[ p ] = "14,19,1,7,".split( splitreg ); p++;
pieces[ p ] = "5,3,13,19,".split( splitreg ); p++;
pieces[ p ] = "15,6,17,3,".split( splitreg ); p++;
pieces[ p ] = "7,13,18,6,".split( splitreg ); p++;
pieces[ p ] = "6,17,6,13,".split( splitreg ); p++;
pieces[ p ] = "14,14,3,17,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "2,10,20,3,".split( splitreg ); p++;
pieces[ p ] = "21,6,1,10,".split( splitreg ); p++;
pieces[ p ] = "2,5,20,6,".split( splitreg ); p++;
pieces[ p ] = "2,17,5,5,".split( splitreg ); p++;
pieces[ p ] = "20,14,5,17,".split( splitreg ); p++;
pieces[ p ] = "21,7,18,14,".split( splitreg ); p++;
pieces[ p ] = "14,7,21,7,".split( splitreg ); p++;
pieces[ p ] = "8,0,16,7,".split( splitreg ); p++;
pieces[ p ] = "22,6,4,0,".split( splitreg ); p++;
pieces[ p ] = "1,15,11,6,".split( splitreg ); p++;
pieces[ p ] = "13,6,13,15,".split( splitreg ); p++;
pieces[ p ] = "17,1,1,6,".split( splitreg ); p++;
pieces[ p ] = "18,10,7,1,".split( splitreg ); p++;
pieces[ p ] = "6,7,11,10,".split( splitreg ); p++;
pieces[ p ] = "3,21,18,7,".split( splitreg ); p++;
pieces[ p ] = "3,1,19,21,".split( splitreg ); p++;
pieces[ p ] = "20,6,5,1,".split( splitreg ); p++;
pieces[ p ] = "1,11,6,6,".split( splitreg ); p++;
pieces[ p ] = "20,15,14,11,".split( splitreg ); p++;
pieces[ p ] = "5,18,20,15,".split( splitreg ); p++;
pieces[ p ] = "5,9,1,18,".split( splitreg ); p++;
pieces[ p ] = "18,20,13,9,".split( splitreg ); p++;
pieces[ p ] = "21,1,9,20,".split( splitreg ); p++;
pieces[ p ] = "16,0,12,1,".split( splitreg ); p++;
pieces[ p ] = "4,18,4,0,".split( splitreg ); p++;
pieces[ p ] = "11,2,10,18,".split( splitreg ); p++;
pieces[ p ] = "13,15,18,2,".split( splitreg ); p++;
pieces[ p ] = "1,5,6,15,".split( splitreg ); p++;
pieces[ p ] = "7,20,11,5,".split( splitreg ); p++;
pieces[ p ] = "11,3,9,20,".split( splitreg ); p++;
pieces[ p ] = "18,13,14,3,".split( splitreg ); p++;
pieces[ p ] = "19,21,20,13,".split( splitreg ); p++;
pieces[ p ] = "5,19,18,21,".split( splitreg ); p++;
pieces[ p ] = "6,5,2,19,".split( splitreg ); p++;
pieces[ p ] = "14,5,1,5,".split( splitreg ); p++;
pieces[ p ] = "20,9,19,5,".split( splitreg ); p++;
pieces[ p ] = "1,17,9,9,".split( splitreg ); p++;
pieces[ p ] = "13,6,20,17,".split( splitreg ); p++;
pieces[ p ] = "9,9,2,6,".split( splitreg ); p++;
pieces[ p ] = "12,0,22,9,".split( splitreg ); p++;
pieces[ p ] = "4,1,22,0,".split( splitreg ); p++;
pieces[ p ] = "10,11,5,1,".split( splitreg ); p++;
pieces[ p ] = "18,19,13,11,".split( splitreg ); p++;
pieces[ p ] = "6,13,11,19,".split( splitreg ); p++;
pieces[ p ] = "11,2,19,13,".split( splitreg ); p++;
pieces[ p ] = "9,13,11,2,".split( splitreg ); p++;
pieces[ p ] = "14,11,20,13,".split( splitreg ); p++;
pieces[ p ] = "20,11,15,11,".split( splitreg ); p++;
pieces[ p ] = "18,1,13,11,".split( splitreg ); p++;
pieces[ p ] = "2,21,11,1,".split( splitreg ); p++;
pieces[ p ] = "1,14,9,21,".split( splitreg ); p++;
pieces[ p ] = "19,9,7,14,".split( splitreg ); p++;
pieces[ p ] = "9,2,13,9,".split( splitreg ); p++;
pieces[ p ] = "20,21,21,2,".split( splitreg ); p++;
pieces[ p ] = "2,14,2,21,".split( splitreg ); p++;
pieces[ p ] = "22,0,4,14,".split( splitreg ); p++;
pieces[ p ] = "22,13,8,0,".split( splitreg ); p++;
pieces[ p ] = "5,13,6,13,".split( splitreg ); p++;
pieces[ p ] = "13,21,9,13,".split( splitreg ); p++;
pieces[ p ] = "11,17,1,21,".split( splitreg ); p++;
pieces[ p ] = "19,1,7,17,".split( splitreg ); p++;
pieces[ p ] = "11,15,1,1,".split( splitreg ); p++;
pieces[ p ] = "20,3,6,15,".split( splitreg ); p++;
pieces[ p ] = "15,20,21,3,".split( splitreg ); p++;
pieces[ p ] = "13,1,10,20,".split( splitreg ); p++;
pieces[ p ] = "11,17,20,1,".split( splitreg ); p++;
pieces[ p ] = "9,7,10,17,".split( splitreg ); p++;
pieces[ p ] = "7,20,5,7,".split( splitreg ); p++;
pieces[ p ] = "13,18,18,20,".split( splitreg ); p++;
pieces[ p ] = "21,1,5,18,".split( splitreg ); p++;
pieces[ p ] = "2,19,13,1,".split( splitreg ); p++;
pieces[ p ] = "4,0,16,19,".split( splitreg ); p++;
pieces[ p ] = "8,1,8,0,".split( splitreg ); p++;
pieces[ p ] = "6,14,20,1,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "1,21,2,3,".split( splitreg ); p++;
pieces[ p ] = "7,10,11,21,".split( splitreg ); p++;
pieces[ p ] = "1,7,17,10,".split( splitreg ); p++;
pieces[ p ] = "6,14,19,7,".split( splitreg ); p++;
pieces[ p ] = "21,21,9,14,".split( splitreg ); p++;
pieces[ p ] = "10,15,3,21,".split( splitreg ); p++;
pieces[ p ] = "20,15,7,15,".split( splitreg ); p++;
pieces[ p ] = "10,9,2,15,".split( splitreg ); p++;
pieces[ p ] = "5,1,2,9,".split( splitreg ); p++;
pieces[ p ] = "18,13,21,1,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "13,21,11,18,".split( splitreg ); p++;
pieces[ p ] = "16,0,16,21,".split( splitreg ); p++;
pieces[ p ] = "8,10,4,0,".split( splitreg ); p++;
pieces[ p ] = "20,10,5,10,".split( splitreg ); p++;
pieces[ p ] = "18,21,21,10,".split( splitreg ); p++;
pieces[ p ] = "2,2,21,21,".split( splitreg ); p++;
pieces[ p ] = "11,3,14,2,".split( splitreg ); p++;
pieces[ p ] = "17,18,18,3,".split( splitreg ); p++;
pieces[ p ] = "19,11,7,18,".split( splitreg ); p++;
pieces[ p ] = "9,5,10,11,".split( splitreg ); p++;
pieces[ p ] = "3,14,21,5,".split( splitreg ); p++;
pieces[ p ] = "7,3,7,14,".split( splitreg ); p++;
pieces[ p ] = "2,2,18,3,".split( splitreg ); p++;
pieces[ p ] = "2,18,9,2,".split( splitreg ); p++;
pieces[ p ] = "21,17,1,18,".split( splitreg ); p++;
pieces[ p ] = "10,7,21,17,".split( splitreg ); p++;
pieces[ p ] = "11,5,17,7,".split( splitreg ); p++;
pieces[ p ] = "16,0,12,5,".split( splitreg ); p++;
pieces[ p ] = "4,12,0,0,".split( splitreg ); p++;
pieces[ p ] = "5,4,0,12,".split( splitreg ); p++;
pieces[ p ] = "21,12,0,4,".split( splitreg ); p++;
pieces[ p ] = "21,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "14,12,0,22,".split( splitreg ); p++;
pieces[ p ] = "18,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "7,12,0,22,".split( splitreg ); p++;
pieces[ p ] = "10,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "21,16,0,22,".split( splitreg ); p++;
pieces[ p ] = "7,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "18,12,0,12,".split( splitreg ); p++;
pieces[ p ] = "9,4,0,12,".split( splitreg ); p++;
pieces[ p ] = "1,16,0,4,".split( splitreg ); p++;
pieces[ p ] = "21,22,0,16,".split( splitreg ); p++;
pieces[ p ] = "17,8,0,22,".split( splitreg ); p++;
pieces[ p ] = "12,0,0,8,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
