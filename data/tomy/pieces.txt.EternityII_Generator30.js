puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator30.js,Eternity II Generator 30".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator30.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,12,16,0,".split( splitreg ); p++;
pieces[ p ] = "0,8,10,12,".split( splitreg ); p++;
pieces[ p ] = "0,22,10,8,".split( splitreg ); p++;
pieces[ p ] = "0,12,6,22,".split( splitreg ); p++;
pieces[ p ] = "0,8,20,12,".split( splitreg ); p++;
pieces[ p ] = "0,12,7,8,".split( splitreg ); p++;
pieces[ p ] = "0,16,2,12,".split( splitreg ); p++;
pieces[ p ] = "0,8,13,16,".split( splitreg ); p++;
pieces[ p ] = "0,8,13,8,".split( splitreg ); p++;
pieces[ p ] = "0,22,19,8,".split( splitreg ); p++;
pieces[ p ] = "0,12,15,22,".split( splitreg ); p++;
pieces[ p ] = "0,16,18,12,".split( splitreg ); p++;
pieces[ p ] = "0,4,9,16,".split( splitreg ); p++;
pieces[ p ] = "0,8,6,4,".split( splitreg ); p++;
pieces[ p ] = "0,16,2,8,".split( splitreg ); p++;
pieces[ p ] = "0,0,22,16,".split( splitreg ); p++;
pieces[ p ] = "16,15,12,0,".split( splitreg ); p++;
pieces[ p ] = "10,11,2,15,".split( splitreg ); p++;
pieces[ p ] = "10,9,17,11,".split( splitreg ); p++;
pieces[ p ] = "6,19,19,9,".split( splitreg ); p++;
pieces[ p ] = "20,1,18,19,".split( splitreg ); p++;
pieces[ p ] = "7,14,11,1,".split( splitreg ); p++;
pieces[ p ] = "2,10,2,14,".split( splitreg ); p++;
pieces[ p ] = "13,21,14,10,".split( splitreg ); p++;
pieces[ p ] = "13,18,7,21,".split( splitreg ); p++;
pieces[ p ] = "19,1,19,18,".split( splitreg ); p++;
pieces[ p ] = "15,21,15,1,".split( splitreg ); p++;
pieces[ p ] = "18,15,17,21,".split( splitreg ); p++;
pieces[ p ] = "9,1,14,15,".split( splitreg ); p++;
pieces[ p ] = "6,7,17,1,".split( splitreg ); p++;
pieces[ p ] = "2,14,11,7,".split( splitreg ); p++;
pieces[ p ] = "22,0,22,14,".split( splitreg ); p++;
pieces[ p ] = "12,17,8,0,".split( splitreg ); p++;
pieces[ p ] = "2,20,7,17,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "19,14,15,6,".split( splitreg ); p++;
pieces[ p ] = "18,13,1,14,".split( splitreg ); p++;
pieces[ p ] = "11,11,14,13,".split( splitreg ); p++;
pieces[ p ] = "2,1,2,11,".split( splitreg ); p++;
pieces[ p ] = "14,21,18,1,".split( splitreg ); p++;
pieces[ p ] = "7,15,3,21,".split( splitreg ); p++;
pieces[ p ] = "19,19,2,15,".split( splitreg ); p++;
pieces[ p ] = "15,5,15,19,".split( splitreg ); p++;
pieces[ p ] = "17,11,2,5,".split( splitreg ); p++;
pieces[ p ] = "14,9,11,11,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "11,15,6,19,".split( splitreg ); p++;
pieces[ p ] = "22,0,16,15,".split( splitreg ); p++;
pieces[ p ] = "8,15,12,0,".split( splitreg ); p++;
pieces[ p ] = "7,20,2,15,".split( splitreg ); p++;
pieces[ p ] = "14,13,15,20,".split( splitreg ); p++;
pieces[ p ] = "15,14,6,13,".split( splitreg ); p++;
pieces[ p ] = "1,3,14,14,".split( splitreg ); p++;
pieces[ p ] = "14,17,7,3,".split( splitreg ); p++;
pieces[ p ] = "2,19,5,17,".split( splitreg ); p++;
pieces[ p ] = "18,21,20,19,".split( splitreg ); p++;
pieces[ p ] = "3,21,5,21,".split( splitreg ); p++;
pieces[ p ] = "2,5,21,21,".split( splitreg ); p++;
pieces[ p ] = "15,19,14,5,".split( splitreg ); p++;
pieces[ p ] = "2,1,2,19,".split( splitreg ); p++;
pieces[ p ] = "11,6,20,1,".split( splitreg ); p++;
pieces[ p ] = "17,1,2,6,".split( splitreg ); p++;
pieces[ p ] = "6,6,18,1,".split( splitreg ); p++;
pieces[ p ] = "16,0,4,6,".split( splitreg ); p++;
pieces[ p ] = "12,19,8,0,".split( splitreg ); p++;
pieces[ p ] = "2,3,10,19,".split( splitreg ); p++;
pieces[ p ] = "15,13,7,3,".split( splitreg ); p++;
pieces[ p ] = "6,6,6,13,".split( splitreg ); p++;
pieces[ p ] = "14,15,6,6,".split( splitreg ); p++;
pieces[ p ] = "7,9,11,15,".split( splitreg ); p++;
pieces[ p ] = "5,17,19,9,".split( splitreg ); p++;
pieces[ p ] = "20,6,18,17,".split( splitreg ); p++;
pieces[ p ] = "5,2,14,6,".split( splitreg ); p++;
pieces[ p ] = "21,2,2,2,".split( splitreg ); p++;
pieces[ p ] = "14,14,19,2,".split( splitreg ); p++;
pieces[ p ] = "2,10,7,14,".split( splitreg ); p++;
pieces[ p ] = "20,17,14,10,".split( splitreg ); p++;
pieces[ p ] = "2,6,18,17,".split( splitreg ); p++;
pieces[ p ] = "18,18,3,6,".split( splitreg ); p++;
pieces[ p ] = "4,0,12,18,".split( splitreg ); p++;
pieces[ p ] = "8,17,22,0,".split( splitreg ); p++;
pieces[ p ] = "10,13,14,17,".split( splitreg ); p++;
pieces[ p ] = "7,14,20,13,".split( splitreg ); p++;
pieces[ p ] = "6,13,5,14,".split( splitreg ); p++;
pieces[ p ] = "6,14,9,13,".split( splitreg ); p++;
pieces[ p ] = "11,10,11,14,".split( splitreg ); p++;
pieces[ p ] = "19,3,20,10,".split( splitreg ); p++;
pieces[ p ] = "18,2,17,3,".split( splitreg ); p++;
pieces[ p ] = "14,9,13,2,".split( splitreg ); p++;
pieces[ p ] = "2,19,3,9,".split( splitreg ); p++;
pieces[ p ] = "19,2,9,19,".split( splitreg ); p++;
pieces[ p ] = "7,15,15,2,".split( splitreg ); p++;
pieces[ p ] = "14,5,18,15,".split( splitreg ); p++;
pieces[ p ] = "18,19,15,5,".split( splitreg ); p++;
pieces[ p ] = "3,15,18,19,".split( splitreg ); p++;
pieces[ p ] = "12,0,4,15,".split( splitreg ); p++;
pieces[ p ] = "22,15,22,0,".split( splitreg ); p++;
pieces[ p ] = "14,15,10,15,".split( splitreg ); p++;
pieces[ p ] = "20,10,19,15,".split( splitreg ); p++;
pieces[ p ] = "5,10,1,10,".split( splitreg ); p++;
pieces[ p ] = "9,3,1,10,".split( splitreg ); p++;
pieces[ p ] = "11,3,5,3,".split( splitreg ); p++;
pieces[ p ] = "20,7,7,3,".split( splitreg ); p++;
pieces[ p ] = "17,21,10,7,".split( splitreg ); p++;
pieces[ p ] = "13,20,21,21,".split( splitreg ); p++;
pieces[ p ] = "3,13,2,20,".split( splitreg ); p++;
pieces[ p ] = "9,18,6,13,".split( splitreg ); p++;
pieces[ p ] = "15,1,5,18,".split( splitreg ); p++;
pieces[ p ] = "18,20,18,1,".split( splitreg ); p++;
pieces[ p ] = "15,5,13,20,".split( splitreg ); p++;
pieces[ p ] = "18,9,2,5,".split( splitreg ); p++;
pieces[ p ] = "4,0,8,9,".split( splitreg ); p++;
pieces[ p ] = "22,20,22,0,".split( splitreg ); p++;
pieces[ p ] = "10,7,2,20,".split( splitreg ); p++;
pieces[ p ] = "19,18,18,7,".split( splitreg ); p++;
pieces[ p ] = "1,2,20,18,".split( splitreg ); p++;
pieces[ p ] = "1,5,10,2,".split( splitreg ); p++;
pieces[ p ] = "5,7,11,5,".split( splitreg ); p++;
pieces[ p ] = "7,14,1,7,".split( splitreg ); p++;
pieces[ p ] = "10,3,21,14,".split( splitreg ); p++;
pieces[ p ] = "21,10,13,3,".split( splitreg ); p++;
pieces[ p ] = "2,6,1,10,".split( splitreg ); p++;
pieces[ p ] = "6,21,19,6,".split( splitreg ); p++;
pieces[ p ] = "5,3,15,21,".split( splitreg ); p++;
pieces[ p ] = "18,9,9,3,".split( splitreg ); p++;
pieces[ p ] = "13,7,9,9,".split( splitreg ); p++;
pieces[ p ] = "2,20,7,7,".split( splitreg ); p++;
pieces[ p ] = "8,0,12,20,".split( splitreg ); p++;
pieces[ p ] = "22,11,16,0,".split( splitreg ); p++;
pieces[ p ] = "2,13,10,11,".split( splitreg ); p++;
pieces[ p ] = "18,14,13,13,".split( splitreg ); p++;
pieces[ p ] = "20,1,5,14,".split( splitreg ); p++;
pieces[ p ] = "10,11,6,1,".split( splitreg ); p++;
pieces[ p ] = "11,2,3,11,".split( splitreg ); p++;
pieces[ p ] = "1,14,17,2,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "13,5,17,3,".split( splitreg ); p++;
pieces[ p ] = "1,13,13,5,".split( splitreg ); p++;
pieces[ p ] = "19,3,1,13,".split( splitreg ); p++;
pieces[ p ] = "15,17,21,3,".split( splitreg ); p++;
pieces[ p ] = "9,17,20,17,".split( splitreg ); p++;
pieces[ p ] = "9,10,2,17,".split( splitreg ); p++;
pieces[ p ] = "7,1,20,10,".split( splitreg ); p++;
pieces[ p ] = "12,0,22,1,".split( splitreg ); p++;
pieces[ p ] = "16,18,4,0,".split( splitreg ); p++;
pieces[ p ] = "10,19,19,18,".split( splitreg ); p++;
pieces[ p ] = "13,13,9,19,".split( splitreg ); p++;
pieces[ p ] = "5,20,9,13,".split( splitreg ); p++;
pieces[ p ] = "6,20,14,20,".split( splitreg ); p++;
pieces[ p ] = "3,10,5,20,".split( splitreg ); p++;
pieces[ p ] = "17,5,21,10,".split( splitreg ); p++;
pieces[ p ] = "3,9,11,5,".split( splitreg ); p++;
pieces[ p ] = "17,3,20,9,".split( splitreg ); p++;
pieces[ p ] = "13,21,5,3,".split( splitreg ); p++;
pieces[ p ] = "1,6,10,21,".split( splitreg ); p++;
pieces[ p ] = "21,20,6,6,".split( splitreg ); p++;
pieces[ p ] = "20,15,7,20,".split( splitreg ); p++;
pieces[ p ] = "2,21,10,15,".split( splitreg ); p++;
pieces[ p ] = "20,10,3,21,".split( splitreg ); p++;
pieces[ p ] = "22,0,12,10,".split( splitreg ); p++;
pieces[ p ] = "4,18,8,0,".split( splitreg ); p++;
pieces[ p ] = "19,13,6,18,".split( splitreg ); p++;
pieces[ p ] = "9,20,14,13,".split( splitreg ); p++;
pieces[ p ] = "9,20,15,20,".split( splitreg ); p++;
pieces[ p ] = "14,17,9,20,".split( splitreg ); p++;
pieces[ p ] = "5,14,6,17,".split( splitreg ); p++;
pieces[ p ] = "21,19,18,14,".split( splitreg ); p++;
pieces[ p ] = "11,5,1,19,".split( splitreg ); p++;
pieces[ p ] = "20,6,11,5,".split( splitreg ); p++;
pieces[ p ] = "5,18,2,6,".split( splitreg ); p++;
pieces[ p ] = "10,10,20,18,".split( splitreg ); p++;
pieces[ p ] = "6,6,7,10,".split( splitreg ); p++;
pieces[ p ] = "7,2,19,6,".split( splitreg ); p++;
pieces[ p ] = "10,17,5,2,".split( splitreg ); p++;
pieces[ p ] = "3,21,21,17,".split( splitreg ); p++;
pieces[ p ] = "12,0,12,21,".split( splitreg ); p++;
pieces[ p ] = "8,1,16,0,".split( splitreg ); p++;
pieces[ p ] = "6,20,17,1,".split( splitreg ); p++;
pieces[ p ] = "14,13,17,20,".split( splitreg ); p++;
pieces[ p ] = "15,6,17,13,".split( splitreg ); p++;
pieces[ p ] = "9,3,6,6,".split( splitreg ); p++;
pieces[ p ] = "6,18,17,3,".split( splitreg ); p++;
pieces[ p ] = "18,11,1,18,".split( splitreg ); p++;
pieces[ p ] = "1,19,18,11,".split( splitreg ); p++;
pieces[ p ] = "11,2,9,19,".split( splitreg ); p++;
pieces[ p ] = "2,15,7,2,".split( splitreg ); p++;
pieces[ p ] = "20,17,5,15,".split( splitreg ); p++;
pieces[ p ] = "7,7,7,17,".split( splitreg ); p++;
pieces[ p ] = "19,19,9,7,".split( splitreg ); p++;
pieces[ p ] = "5,11,13,19,".split( splitreg ); p++;
pieces[ p ] = "21,7,21,11,".split( splitreg ); p++;
pieces[ p ] = "12,0,16,7,".split( splitreg ); p++;
pieces[ p ] = "16,18,16,0,".split( splitreg ); p++;
pieces[ p ] = "17,11,11,18,".split( splitreg ); p++;
pieces[ p ] = "17,17,9,11,".split( splitreg ); p++;
pieces[ p ] = "17,20,5,17,".split( splitreg ); p++;
pieces[ p ] = "6,7,11,20,".split( splitreg ); p++;
pieces[ p ] = "17,13,6,7,".split( splitreg ); p++;
pieces[ p ] = "1,9,19,13,".split( splitreg ); p++;
pieces[ p ] = "18,21,21,9,".split( splitreg ); p++;
pieces[ p ] = "9,5,21,21,".split( splitreg ); p++;
pieces[ p ] = "7,5,1,5,".split( splitreg ); p++;
pieces[ p ] = "5,1,1,5,".split( splitreg ); p++;
pieces[ p ] = "7,1,5,1,".split( splitreg ); p++;
pieces[ p ] = "9,3,15,1,".split( splitreg ); p++;
pieces[ p ] = "13,18,5,3,".split( splitreg ); p++;
pieces[ p ] = "21,19,10,18,".split( splitreg ); p++;
pieces[ p ] = "16,0,16,19,".split( splitreg ); p++;
pieces[ p ] = "16,3,16,0,".split( splitreg ); p++;
pieces[ p ] = "11,14,14,3,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "5,3,21,3,".split( splitreg ); p++;
pieces[ p ] = "11,9,19,3,".split( splitreg ); p++;
pieces[ p ] = "6,21,7,9,".split( splitreg ); p++;
pieces[ p ] = "19,20,19,21,".split( splitreg ); p++;
pieces[ p ] = "21,1,7,20,".split( splitreg ); p++;
pieces[ p ] = "21,7,10,1,".split( splitreg ); p++;
pieces[ p ] = "1,5,10,7,".split( splitreg ); p++;
pieces[ p ] = "1,9,3,5,".split( splitreg ); p++;
pieces[ p ] = "5,9,3,9,".split( splitreg ); p++;
pieces[ p ] = "15,13,9,9,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "10,13,15,18,".split( splitreg ); p++;
pieces[ p ] = "16,0,22,13,".split( splitreg ); p++;
pieces[ p ] = "16,17,12,0,".split( splitreg ); p++;
pieces[ p ] = "14,17,5,17,".split( splitreg ); p++;
pieces[ p ] = "18,11,1,17,".split( splitreg ); p++;
pieces[ p ] = "21,13,11,11,".split( splitreg ); p++;
pieces[ p ] = "19,11,3,13,".split( splitreg ); p++;
pieces[ p ] = "7,20,2,11,".split( splitreg ); p++;
pieces[ p ] = "19,6,7,20,".split( splitreg ); p++;
pieces[ p ] = "7,11,15,6,".split( splitreg ); p++;
pieces[ p ] = "10,21,11,11,".split( splitreg ); p++;
pieces[ p ] = "10,9,17,21,".split( splitreg ); p++;
pieces[ p ] = "3,13,14,9,".split( splitreg ); p++;
pieces[ p ] = "3,11,13,13,".split( splitreg ); p++;
pieces[ p ] = "9,21,18,11,".split( splitreg ); p++;
pieces[ p ] = "10,9,10,21,".split( splitreg ); p++;
pieces[ p ] = "15,10,1,9,".split( splitreg ); p++;
pieces[ p ] = "22,0,8,10,".split( splitreg ); p++;
pieces[ p ] = "12,4,0,0,".split( splitreg ); p++;
pieces[ p ] = "5,4,0,4,".split( splitreg ); p++;
pieces[ p ] = "1,22,0,4,".split( splitreg ); p++;
pieces[ p ] = "11,22,0,22,".split( splitreg ); p++;
pieces[ p ] = "3,22,0,22,".split( splitreg ); p++;
pieces[ p ] = "2,8,0,22,".split( splitreg ); p++;
pieces[ p ] = "7,16,0,8,".split( splitreg ); p++;
pieces[ p ] = "15,4,0,16,".split( splitreg ); p++;
pieces[ p ] = "11,4,0,4,".split( splitreg ); p++;
pieces[ p ] = "17,8,0,4,".split( splitreg ); p++;
pieces[ p ] = "14,4,0,8,".split( splitreg ); p++;
pieces[ p ] = "13,4,0,4,".split( splitreg ); p++;
pieces[ p ] = "18,4,0,4,".split( splitreg ); p++;
pieces[ p ] = "10,4,0,4,".split( splitreg ); p++;
pieces[ p ] = "1,12,0,4,".split( splitreg ); p++;
pieces[ p ] = "8,0,0,12,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
