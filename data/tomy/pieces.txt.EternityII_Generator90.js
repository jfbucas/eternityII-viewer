puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator90.js,Eternity II Generator 90".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator90.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,22,4,0,".split( splitreg ); p++;
pieces[ p ] = "0,12,18,22,".split( splitreg ); p++;
pieces[ p ] = "0,8,15,12,".split( splitreg ); p++;
pieces[ p ] = "0,4,14,8,".split( splitreg ); p++;
pieces[ p ] = "0,16,1,4,".split( splitreg ); p++;
pieces[ p ] = "0,12,15,16,".split( splitreg ); p++;
pieces[ p ] = "0,12,10,12,".split( splitreg ); p++;
pieces[ p ] = "0,8,13,12,".split( splitreg ); p++;
pieces[ p ] = "0,8,2,8,".split( splitreg ); p++;
pieces[ p ] = "0,4,2,8,".split( splitreg ); p++;
pieces[ p ] = "0,16,15,4,".split( splitreg ); p++;
pieces[ p ] = "0,22,13,16,".split( splitreg ); p++;
pieces[ p ] = "0,4,15,22,".split( splitreg ); p++;
pieces[ p ] = "0,4,14,4,".split( splitreg ); p++;
pieces[ p ] = "0,4,13,4,".split( splitreg ); p++;
pieces[ p ] = "0,0,16,4,".split( splitreg ); p++;
pieces[ p ] = "4,6,12,0,".split( splitreg ); p++;
pieces[ p ] = "18,19,9,6,".split( splitreg ); p++;
pieces[ p ] = "15,19,17,19,".split( splitreg ); p++;
pieces[ p ] = "14,10,17,19,".split( splitreg ); p++;
pieces[ p ] = "1,19,1,10,".split( splitreg ); p++;
pieces[ p ] = "15,2,13,19,".split( splitreg ); p++;
pieces[ p ] = "10,9,1,2,".split( splitreg ); p++;
pieces[ p ] = "13,19,11,9,".split( splitreg ); p++;
pieces[ p ] = "2,15,10,19,".split( splitreg ); p++;
pieces[ p ] = "2,13,5,15,".split( splitreg ); p++;
pieces[ p ] = "15,5,21,13,".split( splitreg ); p++;
pieces[ p ] = "13,2,10,5,".split( splitreg ); p++;
pieces[ p ] = "15,10,14,2,".split( splitreg ); p++;
pieces[ p ] = "14,19,17,10,".split( splitreg ); p++;
pieces[ p ] = "13,21,15,19,".split( splitreg ); p++;
pieces[ p ] = "16,0,16,21,".split( splitreg ); p++;
pieces[ p ] = "12,9,8,0,".split( splitreg ); p++;
pieces[ p ] = "9,20,15,9,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "17,7,3,6,".split( splitreg ); p++;
pieces[ p ] = "1,21,10,7,".split( splitreg ); p++;
pieces[ p ] = "13,20,10,21,".split( splitreg ); p++;
pieces[ p ] = "1,21,2,20,".split( splitreg ); p++;
pieces[ p ] = "11,10,14,21,".split( splitreg ); p++;
pieces[ p ] = "10,13,15,10,".split( splitreg ); p++;
pieces[ p ] = "5,11,9,13,".split( splitreg ); p++;
pieces[ p ] = "21,2,9,11,".split( splitreg ); p++;
pieces[ p ] = "10,19,15,2,".split( splitreg ); p++;
pieces[ p ] = "14,9,5,19,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "15,1,5,19,".split( splitreg ); p++;
pieces[ p ] = "16,0,12,1,".split( splitreg ); p++;
pieces[ p ] = "8,5,22,0,".split( splitreg ); p++;
pieces[ p ] = "15,18,2,5,".split( splitreg ); p++;
pieces[ p ] = "14,21,13,18,".split( splitreg ); p++;
pieces[ p ] = "3,5,18,21,".split( splitreg ); p++;
pieces[ p ] = "10,17,9,5,".split( splitreg ); p++;
pieces[ p ] = "10,1,11,17,".split( splitreg ); p++;
pieces[ p ] = "2,17,9,1,".split( splitreg ); p++;
pieces[ p ] = "14,20,6,17,".split( splitreg ); p++;
pieces[ p ] = "15,6,6,20,".split( splitreg ); p++;
pieces[ p ] = "9,11,14,6,".split( splitreg ); p++;
pieces[ p ] = "9,15,14,11,".split( splitreg ); p++;
pieces[ p ] = "15,9,18,15,".split( splitreg ); p++;
pieces[ p ] = "5,17,3,9,".split( splitreg ); p++;
pieces[ p ] = "17,2,6,17,".split( splitreg ); p++;
pieces[ p ] = "5,2,7,2,".split( splitreg ); p++;
pieces[ p ] = "12,0,22,2,".split( splitreg ); p++;
pieces[ p ] = "22,10,22,0,".split( splitreg ); p++;
pieces[ p ] = "2,1,13,10,".split( splitreg ); p++;
pieces[ p ] = "13,9,18,1,".split( splitreg ); p++;
pieces[ p ] = "18,10,11,9,".split( splitreg ); p++;
pieces[ p ] = "9,1,6,10,".split( splitreg ); p++;
pieces[ p ] = "11,3,5,1,".split( splitreg ); p++;
pieces[ p ] = "9,15,17,3,".split( splitreg ); p++;
pieces[ p ] = "6,17,19,15,".split( splitreg ); p++;
pieces[ p ] = "6,3,10,17,".split( splitreg ); p++;
pieces[ p ] = "14,20,19,3,".split( splitreg ); p++;
pieces[ p ] = "14,19,14,20,".split( splitreg ); p++;
pieces[ p ] = "18,19,17,19,".split( splitreg ); p++;
pieces[ p ] = "3,21,21,19,".split( splitreg ); p++;
pieces[ p ] = "6,7,21,21,".split( splitreg ); p++;
pieces[ p ] = "7,1,9,7,".split( splitreg ); p++;
pieces[ p ] = "22,0,16,1,".split( splitreg ); p++;
pieces[ p ] = "22,13,4,0,".split( splitreg ); p++;
pieces[ p ] = "13,3,18,13,".split( splitreg ); p++;
pieces[ p ] = "18,7,9,3,".split( splitreg ); p++;
pieces[ p ] = "11,1,13,7,".split( splitreg ); p++;
pieces[ p ] = "6,15,18,1,".split( splitreg ); p++;
pieces[ p ] = "5,3,6,15,".split( splitreg ); p++;
pieces[ p ] = "17,9,14,3,".split( splitreg ); p++;
pieces[ p ] = "19,3,15,9,".split( splitreg ); p++;
pieces[ p ] = "10,18,19,3,".split( splitreg ); p++;
pieces[ p ] = "19,1,13,18,".split( splitreg ); p++;
pieces[ p ] = "14,14,7,1,".split( splitreg ); p++;
pieces[ p ] = "17,9,20,14,".split( splitreg ); p++;
pieces[ p ] = "21,7,5,9,".split( splitreg ); p++;
pieces[ p ] = "21,11,21,7,".split( splitreg ); p++;
pieces[ p ] = "9,2,14,11,".split( splitreg ); p++;
pieces[ p ] = "16,0,4,2,".split( splitreg ); p++;
pieces[ p ] = "4,20,8,0,".split( splitreg ); p++;
pieces[ p ] = "18,14,10,20,".split( splitreg ); p++;
pieces[ p ] = "9,13,18,14,".split( splitreg ); p++;
pieces[ p ] = "13,18,1,13,".split( splitreg ); p++;
pieces[ p ] = "18,11,5,18,".split( splitreg ); p++;
pieces[ p ] = "6,14,21,11,".split( splitreg ); p++;
pieces[ p ] = "14,20,5,14,".split( splitreg ); p++;
pieces[ p ] = "15,6,13,20,".split( splitreg ); p++;
pieces[ p ] = "19,2,5,6,".split( splitreg ); p++;
pieces[ p ] = "13,10,17,2,".split( splitreg ); p++;
pieces[ p ] = "7,21,3,10,".split( splitreg ); p++;
pieces[ p ] = "20,19,6,21,".split( splitreg ); p++;
pieces[ p ] = "5,9,7,19,".split( splitreg ); p++;
pieces[ p ] = "21,5,2,9,".split( splitreg ); p++;
pieces[ p ] = "14,14,5,5,".split( splitreg ); p++;
pieces[ p ] = "4,0,16,14,".split( splitreg ); p++;
pieces[ p ] = "8,21,4,0,".split( splitreg ); p++;
pieces[ p ] = "10,5,7,21,".split( splitreg ); p++;
pieces[ p ] = "18,11,6,5,".split( splitreg ); p++;
pieces[ p ] = "1,17,20,11,".split( splitreg ); p++;
pieces[ p ] = "5,7,20,17,".split( splitreg ); p++;
pieces[ p ] = "21,5,1,7,".split( splitreg ); p++;
pieces[ p ] = "5,6,1,5,".split( splitreg ); p++;
pieces[ p ] = "13,21,21,6,".split( splitreg ); p++;
pieces[ p ] = "5,10,5,21,".split( splitreg ); p++;
pieces[ p ] = "17,10,7,10,".split( splitreg ); p++;
pieces[ p ] = "3,17,14,10,".split( splitreg ); p++;
pieces[ p ] = "6,20,15,17,".split( splitreg ); p++;
pieces[ p ] = "7,3,15,20,".split( splitreg ); p++;
pieces[ p ] = "2,21,19,3,".split( splitreg ); p++;
pieces[ p ] = "5,14,17,21,".split( splitreg ); p++;
pieces[ p ] = "16,0,8,14,".split( splitreg ); p++;
pieces[ p ] = "4,17,22,0,".split( splitreg ); p++;
pieces[ p ] = "7,20,2,17,".split( splitreg ); p++;
pieces[ p ] = "6,20,20,20,".split( splitreg ); p++;
pieces[ p ] = "20,21,11,20,".split( splitreg ); p++;
pieces[ p ] = "20,7,10,21,".split( splitreg ); p++;
pieces[ p ] = "1,11,11,7,".split( splitreg ); p++;
pieces[ p ] = "1,14,13,11,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "5,6,18,3,".split( splitreg ); p++;
pieces[ p ] = "7,21,1,6,".split( splitreg ); p++;
pieces[ p ] = "14,11,21,21,".split( splitreg ); p++;
pieces[ p ] = "15,10,1,11,".split( splitreg ); p++;
pieces[ p ] = "15,20,18,10,".split( splitreg ); p++;
pieces[ p ] = "19,3,17,20,".split( splitreg ); p++;
pieces[ p ] = "17,2,2,3,".split( splitreg ); p++;
pieces[ p ] = "8,0,12,2,".split( splitreg ); p++;
pieces[ p ] = "22,6,16,0,".split( splitreg ); p++;
pieces[ p ] = "2,18,3,6,".split( splitreg ); p++;
pieces[ p ] = "20,9,3,18,".split( splitreg ); p++;
pieces[ p ] = "11,1,7,9,".split( splitreg ); p++;
pieces[ p ] = "10,19,19,1,".split( splitreg ); p++;
pieces[ p ] = "11,18,14,19,".split( splitreg ); p++;
pieces[ p ] = "13,11,17,18,".split( splitreg ); p++;
pieces[ p ] = "3,1,17,11,".split( splitreg ); p++;
pieces[ p ] = "18,7,9,1,".split( splitreg ); p++;
pieces[ p ] = "1,19,10,7,".split( splitreg ); p++;
pieces[ p ] = "21,19,13,19,".split( splitreg ); p++;
pieces[ p ] = "1,9,20,19,".split( splitreg ); p++;
pieces[ p ] = "18,7,13,9,".split( splitreg ); p++;
pieces[ p ] = "17,18,15,7,".split( splitreg ); p++;
pieces[ p ] = "2,9,15,18,".split( splitreg ); p++;
pieces[ p ] = "12,0,12,9,".split( splitreg ); p++;
pieces[ p ] = "16,6,12,0,".split( splitreg ); p++;
pieces[ p ] = "3,9,2,6,".split( splitreg ); p++;
pieces[ p ] = "3,11,11,9,".split( splitreg ); p++;
pieces[ p ] = "7,14,11,11,".split( splitreg ); p++;
pieces[ p ] = "19,5,1,14,".split( splitreg ); p++;
pieces[ p ] = "14,14,6,5,".split( splitreg ); p++;
pieces[ p ] = "17,18,18,14,".split( splitreg ); p++;
pieces[ p ] = "17,15,2,18,".split( splitreg ); p++;
pieces[ p ] = "9,1,14,15,".split( splitreg ); p++;
pieces[ p ] = "10,5,5,1,".split( splitreg ); p++;
pieces[ p ] = "13,14,11,5,".split( splitreg ); p++;
pieces[ p ] = "20,7,6,14,".split( splitreg ); p++;
pieces[ p ] = "13,13,15,7,".split( splitreg ); p++;
pieces[ p ] = "15,10,17,13,".split( splitreg ); p++;
pieces[ p ] = "15,14,1,10,".split( splitreg ); p++;
pieces[ p ] = "12,0,12,14,".split( splitreg ); p++;
pieces[ p ] = "12,6,8,0,".split( splitreg ); p++;
pieces[ p ] = "2,2,11,6,".split( splitreg ); p++;
pieces[ p ] = "11,13,2,2,".split( splitreg ); p++;
pieces[ p ] = "11,15,18,13,".split( splitreg ); p++;
pieces[ p ] = "1,15,6,15,".split( splitreg ); p++;
pieces[ p ] = "6,7,18,15,".split( splitreg ); p++;
pieces[ p ] = "18,11,9,7,".split( splitreg ); p++;
pieces[ p ] = "2,5,10,11,".split( splitreg ); p++;
pieces[ p ] = "14,5,11,5,".split( splitreg ); p++;
pieces[ p ] = "5,3,21,5,".split( splitreg ); p++;
pieces[ p ] = "11,13,19,3,".split( splitreg ); p++;
pieces[ p ] = "6,10,13,13,".split( splitreg ); p++;
pieces[ p ] = "15,6,19,10,".split( splitreg ); p++;
pieces[ p ] = "17,20,21,6,".split( splitreg ); p++;
pieces[ p ] = "1,20,3,20,".split( splitreg ); p++;
pieces[ p ] = "12,0,4,20,".split( splitreg ); p++;
pieces[ p ] = "8,7,8,0,".split( splitreg ); p++;
pieces[ p ] = "11,6,21,7,".split( splitreg ); p++;
pieces[ p ] = "2,2,9,6,".split( splitreg ); p++;
pieces[ p ] = "18,2,13,2,".split( splitreg ); p++;
pieces[ p ] = "6,7,11,2,".split( splitreg ); p++;
pieces[ p ] = "18,3,3,7,".split( splitreg ); p++;
pieces[ p ] = "9,18,7,3,".split( splitreg ); p++;
pieces[ p ] = "10,7,7,18,".split( splitreg ); p++;
pieces[ p ] = "11,1,1,7,".split( splitreg ); p++;
pieces[ p ] = "21,20,11,1,".split( splitreg ); p++;
pieces[ p ] = "19,19,13,20,".split( splitreg ); p++;
pieces[ p ] = "13,3,10,19,".split( splitreg ); p++;
pieces[ p ] = "19,2,5,3,".split( splitreg ); p++;
pieces[ p ] = "21,15,5,2,".split( splitreg ); p++;
pieces[ p ] = "3,20,11,15,".split( splitreg ); p++;
pieces[ p ] = "4,0,16,20,".split( splitreg ); p++;
pieces[ p ] = "8,1,16,0,".split( splitreg ); p++;
pieces[ p ] = "21,14,20,1,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "13,19,19,3,".split( splitreg ); p++;
pieces[ p ] = "11,17,15,19,".split( splitreg ); p++;
pieces[ p ] = "3,6,17,17,".split( splitreg ); p++;
pieces[ p ] = "7,7,14,6,".split( splitreg ); p++;
pieces[ p ] = "7,3,17,7,".split( splitreg ); p++;
pieces[ p ] = "1,6,21,3,".split( splitreg ); p++;
pieces[ p ] = "11,3,3,6,".split( splitreg ); p++;
pieces[ p ] = "13,2,21,3,".split( splitreg ); p++;
pieces[ p ] = "10,9,20,2,".split( splitreg ); p++;
pieces[ p ] = "5,13,10,9,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "11,19,1,18,".split( splitreg ); p++;
pieces[ p ] = "16,0,16,19,".split( splitreg ); p++;
pieces[ p ] = "16,18,22,0,".split( splitreg ); p++;
pieces[ p ] = "20,18,11,18,".split( splitreg ); p++;
pieces[ p ] = "18,20,2,18,".split( splitreg ); p++;
pieces[ p ] = "19,17,9,20,".split( splitreg ); p++;
pieces[ p ] = "15,3,20,17,".split( splitreg ); p++;
pieces[ p ] = "17,17,1,3,".split( splitreg ); p++;
pieces[ p ] = "14,9,13,17,".split( splitreg ); p++;
pieces[ p ] = "17,2,19,9,".split( splitreg ); p++;
pieces[ p ] = "21,7,15,2,".split( splitreg ); p++;
pieces[ p ] = "3,5,5,7,".split( splitreg ); p++;
pieces[ p ] = "21,21,20,5,".split( splitreg ); p++;
pieces[ p ] = "20,18,20,21,".split( splitreg ); p++;
pieces[ p ] = "10,7,13,18,".split( splitreg ); p++;
pieces[ p ] = "10,6,17,7,".split( splitreg ); p++;
pieces[ p ] = "1,6,10,6,".split( splitreg ); p++;
pieces[ p ] = "16,0,8,6,".split( splitreg ); p++;
pieces[ p ] = "22,16,0,0,".split( splitreg ); p++;
pieces[ p ] = "11,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "2,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "9,22,0,22,".split( splitreg ); p++;
pieces[ p ] = "20,8,0,22,".split( splitreg ); p++;
pieces[ p ] = "1,12,0,8,".split( splitreg ); p++;
pieces[ p ] = "13,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "19,12,0,22,".split( splitreg ); p++;
pieces[ p ] = "15,4,0,12,".split( splitreg ); p++;
pieces[ p ] = "5,4,0,4,".split( splitreg ); p++;
pieces[ p ] = "20,16,0,4,".split( splitreg ); p++;
pieces[ p ] = "20,22,0,16,".split( splitreg ); p++;
pieces[ p ] = "13,22,0,22,".split( splitreg ); p++;
pieces[ p ] = "17,8,0,22,".split( splitreg ); p++;
pieces[ p ] = "10,8,0,8,".split( splitreg ); p++;
pieces[ p ] = "8,0,0,8,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
