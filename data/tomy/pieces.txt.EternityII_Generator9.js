puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator9.js,Eternity II Generator 9".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator9.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,12,16,0,".split( splitreg ); p++;
pieces[ p ] = "0,16,5,12,".split( splitreg ); p++;
pieces[ p ] = "0,8,11,16,".split( splitreg ); p++;
pieces[ p ] = "0,22,3,8,".split( splitreg ); p++;
pieces[ p ] = "0,22,17,22,".split( splitreg ); p++;
pieces[ p ] = "0,22,3,22,".split( splitreg ); p++;
pieces[ p ] = "0,12,17,22,".split( splitreg ); p++;
pieces[ p ] = "0,8,21,12,".split( splitreg ); p++;
pieces[ p ] = "0,8,9,8,".split( splitreg ); p++;
pieces[ p ] = "0,12,11,8,".split( splitreg ); p++;
pieces[ p ] = "0,8,15,12,".split( splitreg ); p++;
pieces[ p ] = "0,22,19,8,".split( splitreg ); p++;
pieces[ p ] = "0,16,15,22,".split( splitreg ); p++;
pieces[ p ] = "0,16,17,16,".split( splitreg ); p++;
pieces[ p ] = "0,4,18,16,".split( splitreg ); p++;
pieces[ p ] = "0,0,22,4,".split( splitreg ); p++;
pieces[ p ] = "16,2,8,0,".split( splitreg ); p++;
pieces[ p ] = "5,11,6,2,".split( splitreg ); p++;
pieces[ p ] = "11,13,17,11,".split( splitreg ); p++;
pieces[ p ] = "3,13,7,13,".split( splitreg ); p++;
pieces[ p ] = "17,18,2,13,".split( splitreg ); p++;
pieces[ p ] = "3,6,10,18,".split( splitreg ); p++;
pieces[ p ] = "17,7,7,6,".split( splitreg ); p++;
pieces[ p ] = "21,7,17,7,".split( splitreg ); p++;
pieces[ p ] = "9,15,2,7,".split( splitreg ); p++;
pieces[ p ] = "11,3,19,15,".split( splitreg ); p++;
pieces[ p ] = "15,3,2,3,".split( splitreg ); p++;
pieces[ p ] = "19,7,15,3,".split( splitreg ); p++;
pieces[ p ] = "15,15,15,7,".split( splitreg ); p++;
pieces[ p ] = "17,14,17,15,".split( splitreg ); p++;
pieces[ p ] = "18,18,20,14,".split( splitreg ); p++;
pieces[ p ] = "22,0,8,18,".split( splitreg ); p++;
pieces[ p ] = "8,2,16,0,".split( splitreg ); p++;
pieces[ p ] = "6,20,7,2,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "7,6,10,6,".split( splitreg ); p++;
pieces[ p ] = "2,15,18,6,".split( splitreg ); p++;
pieces[ p ] = "10,2,1,15,".split( splitreg ); p++;
pieces[ p ] = "7,17,17,2,".split( splitreg ); p++;
pieces[ p ] = "17,1,1,17,".split( splitreg ); p++;
pieces[ p ] = "2,17,9,1,".split( splitreg ); p++;
pieces[ p ] = "19,5,14,17,".split( splitreg ); p++;
pieces[ p ] = "2,6,2,5,".split( splitreg ); p++;
pieces[ p ] = "15,15,21,6,".split( splitreg ); p++;
pieces[ p ] = "15,9,21,15,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "20,10,11,19,".split( splitreg ); p++;
pieces[ p ] = "8,0,12,10,".split( splitreg ); p++;
pieces[ p ] = "16,3,4,0,".split( splitreg ); p++;
pieces[ p ] = "7,5,9,3,".split( splitreg ); p++;
pieces[ p ] = "14,21,11,5,".split( splitreg ); p++;
pieces[ p ] = "10,10,13,21,".split( splitreg ); p++;
pieces[ p ] = "18,14,6,10,".split( splitreg ); p++;
pieces[ p ] = "1,3,17,14,".split( splitreg ); p++;
pieces[ p ] = "17,19,6,3,".split( splitreg ); p++;
pieces[ p ] = "1,9,20,19,".split( splitreg ); p++;
pieces[ p ] = "9,3,14,9,".split( splitreg ); p++;
pieces[ p ] = "14,1,14,3,".split( splitreg ); p++;
pieces[ p ] = "2,20,7,1,".split( splitreg ); p++;
pieces[ p ] = "21,1,7,20,".split( splitreg ); p++;
pieces[ p ] = "21,5,2,1,".split( splitreg ); p++;
pieces[ p ] = "17,2,14,5,".split( splitreg ); p++;
pieces[ p ] = "11,2,20,2,".split( splitreg ); p++;
pieces[ p ] = "12,0,4,2,".split( splitreg ); p++;
pieces[ p ] = "4,11,22,0,".split( splitreg ); p++;
pieces[ p ] = "9,10,5,11,".split( splitreg ); p++;
pieces[ p ] = "11,7,20,10,".split( splitreg ); p++;
pieces[ p ] = "13,10,2,7,".split( splitreg ); p++;
pieces[ p ] = "6,5,21,10,".split( splitreg ); p++;
pieces[ p ] = "17,10,2,5,".split( splitreg ); p++;
pieces[ p ] = "6,13,6,10,".split( splitreg ); p++;
pieces[ p ] = "20,10,3,13,".split( splitreg ); p++;
pieces[ p ] = "14,17,1,10,".split( splitreg ); p++;
pieces[ p ] = "14,6,7,17,".split( splitreg ); p++;
pieces[ p ] = "7,2,20,6,".split( splitreg ); p++;
pieces[ p ] = "7,1,15,2,".split( splitreg ); p++;
pieces[ p ] = "2,13,3,1,".split( splitreg ); p++;
pieces[ p ] = "14,10,13,13,".split( splitreg ); p++;
pieces[ p ] = "20,2,13,10,".split( splitreg ); p++;
pieces[ p ] = "4,0,22,2,".split( splitreg ); p++;
pieces[ p ] = "22,14,16,0,".split( splitreg ); p++;
pieces[ p ] = "5,6,6,14,".split( splitreg ); p++;
pieces[ p ] = "20,20,17,6,".split( splitreg ); p++;
pieces[ p ] = "2,21,6,20,".split( splitreg ); p++;
pieces[ p ] = "21,20,1,21,".split( splitreg ); p++;
pieces[ p ] = "2,10,19,20,".split( splitreg ); p++;
pieces[ p ] = "6,2,1,10,".split( splitreg ); p++;
pieces[ p ] = "3,9,14,2,".split( splitreg ); p++;
pieces[ p ] = "1,3,1,9,".split( splitreg ); p++;
pieces[ p ] = "7,2,17,3,".split( splitreg ); p++;
pieces[ p ] = "20,21,13,2,".split( splitreg ); p++;
pieces[ p ] = "15,21,11,21,".split( splitreg ); p++;
pieces[ p ] = "3,1,18,21,".split( splitreg ); p++;
pieces[ p ] = "13,19,11,1,".split( splitreg ); p++;
pieces[ p ] = "13,7,9,19,".split( splitreg ); p++;
pieces[ p ] = "22,0,4,7,".split( splitreg ); p++;
pieces[ p ] = "16,6,8,0,".split( splitreg ); p++;
pieces[ p ] = "6,17,2,6,".split( splitreg ); p++;
pieces[ p ] = "17,15,3,17,".split( splitreg ); p++;
pieces[ p ] = "6,14,6,15,".split( splitreg ); p++;
pieces[ p ] = "1,14,15,14,".split( splitreg ); p++;
pieces[ p ] = "19,5,11,14,".split( splitreg ); p++;
pieces[ p ] = "1,11,14,5,".split( splitreg ); p++;
pieces[ p ] = "14,15,6,11,".split( splitreg ); p++;
pieces[ p ] = "1,19,18,15,".split( splitreg ); p++;
pieces[ p ] = "17,21,11,19,".split( splitreg ); p++;
pieces[ p ] = "13,14,3,21,".split( splitreg ); p++;
pieces[ p ] = "11,10,10,14,".split( splitreg ); p++;
pieces[ p ] = "18,5,6,10,".split( splitreg ); p++;
pieces[ p ] = "11,9,2,5,".split( splitreg ); p++;
pieces[ p ] = "9,15,7,9,".split( splitreg ); p++;
pieces[ p ] = "4,0,4,15,".split( splitreg ); p++;
pieces[ p ] = "8,14,12,0,".split( splitreg ); p++;
pieces[ p ] = "2,19,13,14,".split( splitreg ); p++;
pieces[ p ] = "3,1,17,19,".split( splitreg ); p++;
pieces[ p ] = "6,7,17,1,".split( splitreg ); p++;
pieces[ p ] = "15,3,18,7,".split( splitreg ); p++;
pieces[ p ] = "11,15,7,3,".split( splitreg ); p++;
pieces[ p ] = "14,17,11,15,".split( splitreg ); p++;
pieces[ p ] = "6,5,21,17,".split( splitreg ); p++;
pieces[ p ] = "18,21,20,5,".split( splitreg ); p++;
pieces[ p ] = "11,1,5,21,".split( splitreg ); p++;
pieces[ p ] = "3,20,6,1,".split( splitreg ); p++;
pieces[ p ] = "10,21,11,20,".split( splitreg ); p++;
pieces[ p ] = "6,3,15,21,".split( splitreg ); p++;
pieces[ p ] = "2,9,10,3,".split( splitreg ); p++;
pieces[ p ] = "7,9,1,9,".split( splitreg ); p++;
pieces[ p ] = "4,0,16,9,".split( splitreg ); p++;
pieces[ p ] = "12,9,12,0,".split( splitreg ); p++;
pieces[ p ] = "13,20,5,9,".split( splitreg ); p++;
pieces[ p ] = "17,2,9,20,".split( splitreg ); p++;
pieces[ p ] = "17,7,11,2,".split( splitreg ); p++;
pieces[ p ] = "18,14,11,7,".split( splitreg ); p++;
pieces[ p ] = "7,3,15,14,".split( splitreg ); p++;
pieces[ p ] = "11,14,15,3,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "20,2,18,3,".split( splitreg ); p++;
pieces[ p ] = "5,15,18,2,".split( splitreg ); p++;
pieces[ p ] = "6,18,13,15,".split( splitreg ); p++;
pieces[ p ] = "11,20,15,18,".split( splitreg ); p++;
pieces[ p ] = "15,14,2,20,".split( splitreg ); p++;
pieces[ p ] = "10,10,17,14,".split( splitreg ); p++;
pieces[ p ] = "1,5,14,10,".split( splitreg ); p++;
pieces[ p ] = "16,0,8,5,".split( splitreg ); p++;
pieces[ p ] = "12,11,12,0,".split( splitreg ); p++;
pieces[ p ] = "5,5,17,11,".split( splitreg ); p++;
pieces[ p ] = "9,10,13,5,".split( splitreg ); p++;
pieces[ p ] = "11,17,13,10,".split( splitreg ); p++;
pieces[ p ] = "11,18,7,17,".split( splitreg ); p++;
pieces[ p ] = "15,5,13,18,".split( splitreg ); p++;
pieces[ p ] = "15,1,2,5,".split( splitreg ); p++;
pieces[ p ] = "3,7,1,1,".split( splitreg ); p++;
pieces[ p ] = "18,15,2,7,".split( splitreg ); p++;
pieces[ p ] = "18,6,13,15,".split( splitreg ); p++;
pieces[ p ] = "13,21,9,6,".split( splitreg ); p++;
pieces[ p ] = "15,18,20,21,".split( splitreg ); p++;
pieces[ p ] = "2,18,1,18,".split( splitreg ); p++;
pieces[ p ] = "17,1,10,18,".split( splitreg ); p++;
pieces[ p ] = "14,9,21,1,".split( splitreg ); p++;
pieces[ p ] = "8,0,16,9,".split( splitreg ); p++;
pieces[ p ] = "12,3,8,0,".split( splitreg ); p++;
pieces[ p ] = "17,1,13,3,".split( splitreg ); p++;
pieces[ p ] = "13,21,11,1,".split( splitreg ); p++;
pieces[ p ] = "13,19,5,21,".split( splitreg ); p++;
pieces[ p ] = "7,11,10,19,".split( splitreg ); p++;
pieces[ p ] = "13,9,18,11,".split( splitreg ); p++;
pieces[ p ] = "2,11,19,9,".split( splitreg ); p++;
pieces[ p ] = "1,9,20,11,".split( splitreg ); p++;
pieces[ p ] = "2,14,19,9,".split( splitreg ); p++;
pieces[ p ] = "13,9,20,14,".split( splitreg ); p++;
pieces[ p ] = "9,1,13,9,".split( splitreg ); p++;
pieces[ p ] = "20,10,11,1,".split( splitreg ); p++;
pieces[ p ] = "1,10,19,10,".split( splitreg ); p++;
pieces[ p ] = "10,19,19,10,".split( splitreg ); p++;
pieces[ p ] = "21,17,19,19,".split( splitreg ); p++;
pieces[ p ] = "16,0,8,17,".split( splitreg ); p++;
pieces[ p ] = "8,21,22,0,".split( splitreg ); p++;
pieces[ p ] = "13,6,2,21,".split( splitreg ); p++;
pieces[ p ] = "11,20,21,6,".split( splitreg ); p++;
pieces[ p ] = "5,5,6,20,".split( splitreg ); p++;
pieces[ p ] = "10,20,14,5,".split( splitreg ); p++;
pieces[ p ] = "18,20,6,20,".split( splitreg ); p++;
pieces[ p ] = "19,19,9,20,".split( splitreg ); p++;
pieces[ p ] = "20,5,1,19,".split( splitreg ); p++;
pieces[ p ] = "19,18,15,5,".split( splitreg ); p++;
pieces[ p ] = "20,9,2,18,".split( splitreg ); p++;
pieces[ p ] = "13,17,3,9,".split( splitreg ); p++;
pieces[ p ] = "11,9,20,17,".split( splitreg ); p++;
pieces[ p ] = "19,19,10,9,".split( splitreg ); p++;
pieces[ p ] = "19,18,13,19,".split( splitreg ); p++;
pieces[ p ] = "19,21,18,18,".split( splitreg ); p++;
pieces[ p ] = "8,0,22,21,".split( splitreg ); p++;
pieces[ p ] = "22,9,16,0,".split( splitreg ); p++;
pieces[ p ] = "2,11,13,9,".split( splitreg ); p++;
pieces[ p ] = "21,21,9,11,".split( splitreg ); p++;
pieces[ p ] = "6,1,1,21,".split( splitreg ); p++;
pieces[ p ] = "14,21,10,1,".split( splitreg ); p++;
pieces[ p ] = "6,17,5,21,".split( splitreg ); p++;
pieces[ p ] = "9,7,3,17,".split( splitreg ); p++;
pieces[ p ] = "1,15,19,7,".split( splitreg ); p++;
pieces[ p ] = "15,20,21,15,".split( splitreg ); p++;
pieces[ p ] = "2,19,15,20,".split( splitreg ); p++;
pieces[ p ] = "3,3,13,19,".split( splitreg ); p++;
pieces[ p ] = "20,5,21,3,".split( splitreg ); p++;
pieces[ p ] = "10,10,5,5,".split( splitreg ); p++;
pieces[ p ] = "13,10,5,10,".split( splitreg ); p++;
pieces[ p ] = "18,19,13,10,".split( splitreg ); p++;
pieces[ p ] = "22,0,12,19,".split( splitreg ); p++;
pieces[ p ] = "16,13,12,0,".split( splitreg ); p++;
pieces[ p ] = "13,14,21,13,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "1,9,18,3,".split( splitreg ); p++;
pieces[ p ] = "10,1,17,9,".split( splitreg ); p++;
pieces[ p ] = "5,7,6,1,".split( splitreg ); p++;
pieces[ p ] = "3,20,9,7,".split( splitreg ); p++;
pieces[ p ] = "19,21,18,20,".split( splitreg ); p++;
pieces[ p ] = "21,19,18,21,".split( splitreg ); p++;
pieces[ p ] = "15,19,11,19,".split( splitreg ); p++;
pieces[ p ] = "13,7,1,19,".split( splitreg ); p++;
pieces[ p ] = "21,15,5,7,".split( splitreg ); p++;
pieces[ p ] = "5,13,13,15,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "13,7,19,18,".split( splitreg ); p++;
pieces[ p ] = "12,0,4,7,".split( splitreg ); p++;
pieces[ p ] = "12,7,8,0,".split( splitreg ); p++;
pieces[ p ] = "21,6,7,7,".split( splitreg ); p++;
pieces[ p ] = "18,20,14,6,".split( splitreg ); p++;
pieces[ p ] = "18,13,18,20,".split( splitreg ); p++;
pieces[ p ] = "17,19,9,13,".split( splitreg ); p++;
pieces[ p ] = "6,13,11,19,".split( splitreg ); p++;
pieces[ p ] = "9,3,5,13,".split( splitreg ); p++;
pieces[ p ] = "18,14,6,3,".split( splitreg ); p++;
pieces[ p ] = "18,18,10,14,".split( splitreg ); p++;
pieces[ p ] = "11,11,14,18,".split( splitreg ); p++;
pieces[ p ] = "1,3,18,11,".split( splitreg ); p++;
pieces[ p ] = "5,7,5,3,".split( splitreg ); p++;
pieces[ p ] = "13,20,5,7,".split( splitreg ); p++;
pieces[ p ] = "10,19,6,20,".split( splitreg ); p++;
pieces[ p ] = "19,20,14,19,".split( splitreg ); p++;
pieces[ p ] = "4,0,4,20,".split( splitreg ); p++;
pieces[ p ] = "8,16,0,0,".split( splitreg ); p++;
pieces[ p ] = "7,4,0,16,".split( splitreg ); p++;
pieces[ p ] = "14,16,0,4,".split( splitreg ); p++;
pieces[ p ] = "18,4,0,16,".split( splitreg ); p++;
pieces[ p ] = "9,12,0,4,".split( splitreg ); p++;
pieces[ p ] = "11,4,0,12,".split( splitreg ); p++;
pieces[ p ] = "5,8,0,4,".split( splitreg ); p++;
pieces[ p ] = "6,22,0,8,".split( splitreg ); p++;
pieces[ p ] = "10,4,0,22,".split( splitreg ); p++;
pieces[ p ] = "14,22,0,4,".split( splitreg ); p++;
pieces[ p ] = "18,12,0,22,".split( splitreg ); p++;
pieces[ p ] = "5,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "5,12,0,22,".split( splitreg ); p++;
pieces[ p ] = "6,16,0,12,".split( splitreg ); p++;
pieces[ p ] = "14,4,0,16,".split( splitreg ); p++;
pieces[ p ] = "4,0,0,4,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
