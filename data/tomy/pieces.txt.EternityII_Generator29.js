puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator29.js,Eternity II Generator 29".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator29.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,8,4,0,".split( splitreg ); p++;
pieces[ p ] = "0,8,10,8,".split( splitreg ); p++;
pieces[ p ] = "0,16,10,8,".split( splitreg ); p++;
pieces[ p ] = "0,12,10,16,".split( splitreg ); p++;
pieces[ p ] = "0,22,7,12,".split( splitreg ); p++;
pieces[ p ] = "0,4,5,22,".split( splitreg ); p++;
pieces[ p ] = "0,4,14,4,".split( splitreg ); p++;
pieces[ p ] = "0,22,6,4,".split( splitreg ); p++;
pieces[ p ] = "0,16,15,22,".split( splitreg ); p++;
pieces[ p ] = "0,12,19,16,".split( splitreg ); p++;
pieces[ p ] = "0,4,2,12,".split( splitreg ); p++;
pieces[ p ] = "0,12,14,4,".split( splitreg ); p++;
pieces[ p ] = "0,12,19,12,".split( splitreg ); p++;
pieces[ p ] = "0,22,19,12,".split( splitreg ); p++;
pieces[ p ] = "0,4,14,22,".split( splitreg ); p++;
pieces[ p ] = "0,0,12,4,".split( splitreg ); p++;
pieces[ p ] = "4,18,8,0,".split( splitreg ); p++;
pieces[ p ] = "10,5,2,18,".split( splitreg ); p++;
pieces[ p ] = "10,15,17,5,".split( splitreg ); p++;
pieces[ p ] = "10,2,6,15,".split( splitreg ); p++;
pieces[ p ] = "7,1,6,2,".split( splitreg ); p++;
pieces[ p ] = "5,3,21,1,".split( splitreg ); p++;
pieces[ p ] = "14,2,3,3,".split( splitreg ); p++;
pieces[ p ] = "6,3,11,2,".split( splitreg ); p++;
pieces[ p ] = "15,1,6,3,".split( splitreg ); p++;
pieces[ p ] = "19,18,14,1,".split( splitreg ); p++;
pieces[ p ] = "2,3,6,18,".split( splitreg ); p++;
pieces[ p ] = "14,18,7,3,".split( splitreg ); p++;
pieces[ p ] = "19,1,11,18,".split( splitreg ); p++;
pieces[ p ] = "19,7,17,1,".split( splitreg ); p++;
pieces[ p ] = "14,9,17,7,".split( splitreg ); p++;
pieces[ p ] = "12,0,12,9,".split( splitreg ); p++;
pieces[ p ] = "8,6,22,0,".split( splitreg ); p++;
pieces[ p ] = "2,20,1,6,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "6,17,5,6,".split( splitreg ); p++;
pieces[ p ] = "6,3,20,17,".split( splitreg ); p++;
pieces[ p ] = "21,15,7,3,".split( splitreg ); p++;
pieces[ p ] = "3,18,5,15,".split( splitreg ); p++;
pieces[ p ] = "11,17,10,18,".split( splitreg ); p++;
pieces[ p ] = "6,11,6,17,".split( splitreg ); p++;
pieces[ p ] = "14,6,19,11,".split( splitreg ); p++;
pieces[ p ] = "6,2,6,6,".split( splitreg ); p++;
pieces[ p ] = "7,6,1,2,".split( splitreg ); p++;
pieces[ p ] = "11,9,14,6,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "17,19,11,19,".split( splitreg ); p++;
pieces[ p ] = "12,0,16,19,".split( splitreg ); p++;
pieces[ p ] = "22,11,8,0,".split( splitreg ); p++;
pieces[ p ] = "1,9,17,11,".split( splitreg ); p++;
pieces[ p ] = "14,2,10,9,".split( splitreg ); p++;
pieces[ p ] = "5,20,18,2,".split( splitreg ); p++;
pieces[ p ] = "20,18,14,20,".split( splitreg ); p++;
pieces[ p ] = "7,21,10,18,".split( splitreg ); p++;
pieces[ p ] = "5,11,17,21,".split( splitreg ); p++;
pieces[ p ] = "10,20,10,11,".split( splitreg ); p++;
pieces[ p ] = "6,20,10,20,".split( splitreg ); p++;
pieces[ p ] = "19,2,17,20,".split( splitreg ); p++;
pieces[ p ] = "6,17,20,2,".split( splitreg ); p++;
pieces[ p ] = "1,2,3,17,".split( splitreg ); p++;
pieces[ p ] = "14,5,19,2,".split( splitreg ); p++;
pieces[ p ] = "17,18,19,5,".split( splitreg ); p++;
pieces[ p ] = "11,7,13,18,".split( splitreg ); p++;
pieces[ p ] = "16,0,8,7,".split( splitreg ); p++;
pieces[ p ] = "8,3,16,0,".split( splitreg ); p++;
pieces[ p ] = "17,9,7,3,".split( splitreg ); p++;
pieces[ p ] = "10,15,19,9,".split( splitreg ); p++;
pieces[ p ] = "18,15,15,15,".split( splitreg ); p++;
pieces[ p ] = "14,2,1,15,".split( splitreg ); p++;
pieces[ p ] = "10,7,9,2,".split( splitreg ); p++;
pieces[ p ] = "17,7,1,7,".split( splitreg ); p++;
pieces[ p ] = "10,14,21,7,".split( splitreg ); p++;
pieces[ p ] = "10,18,9,14,".split( splitreg ); p++;
pieces[ p ] = "17,13,2,18,".split( splitreg ); p++;
pieces[ p ] = "20,14,9,13,".split( splitreg ); p++;
pieces[ p ] = "3,6,18,14,".split( splitreg ); p++;
pieces[ p ] = "19,7,20,6,".split( splitreg ); p++;
pieces[ p ] = "19,9,20,7,".split( splitreg ); p++;
pieces[ p ] = "13,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "8,0,16,19,".split( splitreg ); p++;
pieces[ p ] = "16,10,4,0,".split( splitreg ); p++;
pieces[ p ] = "7,1,3,10,".split( splitreg ); p++;
pieces[ p ] = "19,2,5,1,".split( splitreg ); p++;
pieces[ p ] = "15,14,14,2,".split( splitreg ); p++;
pieces[ p ] = "1,13,19,14,".split( splitreg ); p++;
pieces[ p ] = "9,13,1,13,".split( splitreg ); p++;
pieces[ p ] = "1,6,5,13,".split( splitreg ); p++;
pieces[ p ] = "21,15,17,6,".split( splitreg ); p++;
pieces[ p ] = "9,10,7,15,".split( splitreg ); p++;
pieces[ p ] = "2,3,18,10,".split( splitreg ); p++;
pieces[ p ] = "9,7,7,3,".split( splitreg ); p++;
pieces[ p ] = "18,6,1,7,".split( splitreg ); p++;
pieces[ p ] = "20,1,21,6,".split( splitreg ); p++;
pieces[ p ] = "20,20,6,1,".split( splitreg ); p++;
pieces[ p ] = "17,14,15,20,".split( splitreg ); p++;
pieces[ p ] = "16,0,8,14,".split( splitreg ); p++;
pieces[ p ] = "4,18,16,0,".split( splitreg ); p++;
pieces[ p ] = "3,5,21,18,".split( splitreg ); p++;
pieces[ p ] = "5,21,3,5,".split( splitreg ); p++;
pieces[ p ] = "14,20,18,21,".split( splitreg ); p++;
pieces[ p ] = "19,10,13,20,".split( splitreg ); p++;
pieces[ p ] = "1,10,7,10,".split( splitreg ); p++;
pieces[ p ] = "5,5,15,10,".split( splitreg ); p++;
pieces[ p ] = "17,11,21,5,".split( splitreg ); p++;
pieces[ p ] = "7,15,21,11,".split( splitreg ); p++;
pieces[ p ] = "18,21,19,15,".split( splitreg ); p++;
pieces[ p ] = "7,1,9,21,".split( splitreg ); p++;
pieces[ p ] = "1,20,19,1,".split( splitreg ); p++;
pieces[ p ] = "21,11,2,20,".split( splitreg ); p++;
pieces[ p ] = "6,11,20,11,".split( splitreg ); p++;
pieces[ p ] = "15,17,20,11,".split( splitreg ); p++;
pieces[ p ] = "8,0,22,17,".split( splitreg ); p++;
pieces[ p ] = "16,2,22,0,".split( splitreg ); p++;
pieces[ p ] = "21,15,5,2,".split( splitreg ); p++;
pieces[ p ] = "3,2,5,15,".split( splitreg ); p++;
pieces[ p ] = "18,11,1,2,".split( splitreg ); p++;
pieces[ p ] = "13,7,6,11,".split( splitreg ); p++;
pieces[ p ] = "7,21,20,7,".split( splitreg ); p++;
pieces[ p ] = "15,13,10,21,".split( splitreg ); p++;
pieces[ p ] = "21,21,21,13,".split( splitreg ); p++;
pieces[ p ] = "21,18,18,21,".split( splitreg ); p++;
pieces[ p ] = "19,14,19,18,".split( splitreg ); p++;
pieces[ p ] = "9,17,10,14,".split( splitreg ); p++;
pieces[ p ] = "19,13,13,17,".split( splitreg ); p++;
pieces[ p ] = "2,11,13,13,".split( splitreg ); p++;
pieces[ p ] = "20,2,13,11,".split( splitreg ); p++;
pieces[ p ] = "20,11,13,2,".split( splitreg ); p++;
pieces[ p ] = "22,0,12,11,".split( splitreg ); p++;
pieces[ p ] = "22,13,4,0,".split( splitreg ); p++;
pieces[ p ] = "5,2,15,13,".split( splitreg ); p++;
pieces[ p ] = "5,3,21,2,".split( splitreg ); p++;
pieces[ p ] = "1,6,1,3,".split( splitreg ); p++;
pieces[ p ] = "6,2,18,6,".split( splitreg ); p++;
pieces[ p ] = "20,18,3,2,".split( splitreg ); p++;
pieces[ p ] = "10,14,11,18,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "18,10,21,3,".split( splitreg ); p++;
pieces[ p ] = "19,13,19,10,".split( splitreg ); p++;
pieces[ p ] = "10,5,5,13,".split( splitreg ); p++;
pieces[ p ] = "13,20,5,5,".split( splitreg ); p++;
pieces[ p ] = "13,11,21,20,".split( splitreg ); p++;
pieces[ p ] = "13,14,11,11,".split( splitreg ); p++;
pieces[ p ] = "13,15,9,14,".split( splitreg ); p++;
pieces[ p ] = "12,0,4,15,".split( splitreg ); p++;
pieces[ p ] = "4,1,4,0,".split( splitreg ); p++;
pieces[ p ] = "15,13,18,1,".split( splitreg ); p++;
pieces[ p ] = "21,10,5,13,".split( splitreg ); p++;
pieces[ p ] = "1,5,7,10,".split( splitreg ); p++;
pieces[ p ] = "18,9,9,5,".split( splitreg ); p++;
pieces[ p ] = "3,10,21,9,".split( splitreg ); p++;
pieces[ p ] = "11,15,9,10,".split( splitreg ); p++;
pieces[ p ] = "3,3,19,15,".split( splitreg ); p++;
pieces[ p ] = "21,10,19,3,".split( splitreg ); p++;
pieces[ p ] = "19,14,5,10,".split( splitreg ); p++;
pieces[ p ] = "5,15,19,14,".split( splitreg ); p++;
pieces[ p ] = "5,17,13,15,".split( splitreg ); p++;
pieces[ p ] = "21,19,6,17,".split( splitreg ); p++;
pieces[ p ] = "11,15,21,19,".split( splitreg ); p++;
pieces[ p ] = "9,21,17,15,".split( splitreg ); p++;
pieces[ p ] = "4,0,8,21,".split( splitreg ); p++;
pieces[ p ] = "4,6,4,0,".split( splitreg ); p++;
pieces[ p ] = "18,14,17,6,".split( splitreg ); p++;
pieces[ p ] = "5,17,9,14,".split( splitreg ); p++;
pieces[ p ] = "7,19,2,17,".split( splitreg ); p++;
pieces[ p ] = "9,9,5,19,".split( splitreg ); p++;
pieces[ p ] = "21,15,9,9,".split( splitreg ); p++;
pieces[ p ] = "9,6,13,15,".split( splitreg ); p++;
pieces[ p ] = "19,6,20,6,".split( splitreg ); p++;
pieces[ p ] = "19,17,15,6,".split( splitreg ); p++;
pieces[ p ] = "5,9,18,17,".split( splitreg ); p++;
pieces[ p ] = "19,19,3,9,".split( splitreg ); p++;
pieces[ p ] = "13,19,2,19,".split( splitreg ); p++;
pieces[ p ] = "6,13,2,19,".split( splitreg ); p++;
pieces[ p ] = "21,1,7,13,".split( splitreg ); p++;
pieces[ p ] = "17,13,10,1,".split( splitreg ); p++;
pieces[ p ] = "8,0,22,13,".split( splitreg ); p++;
pieces[ p ] = "4,9,16,0,".split( splitreg ); p++;
pieces[ p ] = "17,15,1,9,".split( splitreg ); p++;
pieces[ p ] = "9,11,21,15,".split( splitreg ); p++;
pieces[ p ] = "2,13,19,11,".split( splitreg ); p++;
pieces[ p ] = "5,10,3,13,".split( splitreg ); p++;
pieces[ p ] = "9,20,7,10,".split( splitreg ); p++;
pieces[ p ] = "13,15,21,20,".split( splitreg ); p++;
pieces[ p ] = "20,13,3,15,".split( splitreg ); p++;
pieces[ p ] = "15,15,3,13,".split( splitreg ); p++;
pieces[ p ] = "18,13,3,15,".split( splitreg ); p++;
pieces[ p ] = "3,14,20,13,".split( splitreg ); p++;
pieces[ p ] = "2,11,10,14,".split( splitreg ); p++;
pieces[ p ] = "2,9,5,11,".split( splitreg ); p++;
pieces[ p ] = "7,18,1,9,".split( splitreg ); p++;
pieces[ p ] = "10,9,10,18,".split( splitreg ); p++;
pieces[ p ] = "22,0,8,9,".split( splitreg ); p++;
pieces[ p ] = "16,20,22,0,".split( splitreg ); p++;
pieces[ p ] = "1,1,13,20,".split( splitreg ); p++;
pieces[ p ] = "21,1,9,1,".split( splitreg ); p++;
pieces[ p ] = "19,21,18,1,".split( splitreg ); p++;
pieces[ p ] = "3,14,1,21,".split( splitreg ); p++;
pieces[ p ] = "7,18,11,14,".split( splitreg ); p++;
pieces[ p ] = "21,14,14,18,".split( splitreg ); p++;
pieces[ p ] = "3,21,15,14,".split( splitreg ); p++;
pieces[ p ] = "3,6,7,21,".split( splitreg ); p++;
pieces[ p ] = "3,1,7,6,".split( splitreg ); p++;
pieces[ p ] = "20,15,5,1,".split( splitreg ); p++;
pieces[ p ] = "10,10,20,15,".split( splitreg ); p++;
pieces[ p ] = "5,7,17,10,".split( splitreg ); p++;
pieces[ p ] = "1,15,5,7,".split( splitreg ); p++;
pieces[ p ] = "10,20,5,15,".split( splitreg ); p++;
pieces[ p ] = "8,0,22,20,".split( splitreg ); p++;
pieces[ p ] = "22,7,16,0,".split( splitreg ); p++;
pieces[ p ] = "13,14,18,7,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "18,11,10,3,".split( splitreg ); p++;
pieces[ p ] = "1,20,7,11,".split( splitreg ); p++;
pieces[ p ] = "11,9,2,20,".split( splitreg ); p++;
pieces[ p ] = "14,5,3,9,".split( splitreg ); p++;
pieces[ p ] = "15,6,11,5,".split( splitreg ); p++;
pieces[ p ] = "7,7,21,6,".split( splitreg ); p++;
pieces[ p ] = "7,17,3,7,".split( splitreg ); p++;
pieces[ p ] = "5,19,1,17,".split( splitreg ); p++;
pieces[ p ] = "20,18,2,19,".split( splitreg ); p++;
pieces[ p ] = "17,13,17,18,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "5,17,1,18,".split( splitreg ); p++;
pieces[ p ] = "22,0,16,17,".split( splitreg ); p++;
pieces[ p ] = "16,6,8,0,".split( splitreg ); p++;
pieces[ p ] = "18,1,20,6,".split( splitreg ); p++;
pieces[ p ] = "18,20,2,1,".split( splitreg ); p++;
pieces[ p ] = "10,14,3,20,".split( splitreg ); p++;
pieces[ p ] = "7,19,14,14,".split( splitreg ); p++;
pieces[ p ] = "2,11,6,19,".split( splitreg ); p++;
pieces[ p ] = "3,17,7,11,".split( splitreg ); p++;
pieces[ p ] = "11,9,21,17,".split( splitreg ); p++;
pieces[ p ] = "21,5,2,9,".split( splitreg ); p++;
pieces[ p ] = "3,13,17,5,".split( splitreg ); p++;
pieces[ p ] = "1,9,20,13,".split( splitreg ); p++;
pieces[ p ] = "2,9,13,9,".split( splitreg ); p++;
pieces[ p ] = "17,11,11,9,".split( splitreg ); p++;
pieces[ p ] = "10,11,2,11,".split( splitreg ); p++;
pieces[ p ] = "1,5,14,11,".split( splitreg ); p++;
pieces[ p ] = "16,0,4,5,".split( splitreg ); p++;
pieces[ p ] = "8,12,0,0,".split( splitreg ); p++;
pieces[ p ] = "20,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "2,16,0,22,".split( splitreg ); p++;
pieces[ p ] = "3,4,0,16,".split( splitreg ); p++;
pieces[ p ] = "14,8,0,4,".split( splitreg ); p++;
pieces[ p ] = "6,8,0,8,".split( splitreg ); p++;
pieces[ p ] = "7,8,0,8,".split( splitreg ); p++;
pieces[ p ] = "21,16,0,8,".split( splitreg ); p++;
pieces[ p ] = "2,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "17,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "20,12,0,22,".split( splitreg ); p++;
pieces[ p ] = "13,16,0,12,".split( splitreg ); p++;
pieces[ p ] = "11,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "2,12,0,12,".split( splitreg ); p++;
pieces[ p ] = "14,22,0,12,".split( splitreg ); p++;
pieces[ p ] = "4,0,0,22,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
