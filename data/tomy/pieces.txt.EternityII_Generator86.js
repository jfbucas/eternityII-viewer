puzzles[ nb_puzzles ] = "tomy/pieces.txt.EternityII_Generator86.js,Eternity II Generator 86".split( splitreg ); nb_puzzles++;
if ( puzzle == "tomy/pieces.txt.EternityII_Generator86.js" ) {
board_w = 16;
board_h = 16;
pieces[ p ] = "0,22,4,0,".split( splitreg ); p++;
pieces[ p ] = "0,12,20,22,".split( splitreg ); p++;
pieces[ p ] = "0,8,9,12,".split( splitreg ); p++;
pieces[ p ] = "0,4,17,8,".split( splitreg ); p++;
pieces[ p ] = "0,12,13,4,".split( splitreg ); p++;
pieces[ p ] = "0,22,6,12,".split( splitreg ); p++;
pieces[ p ] = "0,4,9,22,".split( splitreg ); p++;
pieces[ p ] = "0,22,2,4,".split( splitreg ); p++;
pieces[ p ] = "0,8,10,22,".split( splitreg ); p++;
pieces[ p ] = "0,22,18,8,".split( splitreg ); p++;
pieces[ p ] = "0,16,15,22,".split( splitreg ); p++;
pieces[ p ] = "0,16,6,16,".split( splitreg ); p++;
pieces[ p ] = "0,12,18,16,".split( splitreg ); p++;
pieces[ p ] = "0,4,6,12,".split( splitreg ); p++;
pieces[ p ] = "0,4,9,4,".split( splitreg ); p++;
pieces[ p ] = "0,0,4,4,".split( splitreg ); p++;
pieces[ p ] = "4,17,12,0,".split( splitreg ); p++;
pieces[ p ] = "20,2,15,17,".split( splitreg ); p++;
pieces[ p ] = "9,3,17,2,".split( splitreg ); p++;
pieces[ p ] = "17,15,18,3,".split( splitreg ); p++;
pieces[ p ] = "13,18,7,15,".split( splitreg ); p++;
pieces[ p ] = "6,9,18,18,".split( splitreg ); p++;
pieces[ p ] = "9,6,19,9,".split( splitreg ); p++;
pieces[ p ] = "2,5,3,6,".split( splitreg ); p++;
pieces[ p ] = "10,11,3,5,".split( splitreg ); p++;
pieces[ p ] = "18,21,1,11,".split( splitreg ); p++;
pieces[ p ] = "15,20,1,21,".split( splitreg ); p++;
pieces[ p ] = "6,14,6,20,".split( splitreg ); p++;
pieces[ p ] = "18,17,1,14,".split( splitreg ); p++;
pieces[ p ] = "6,19,17,17,".split( splitreg ); p++;
pieces[ p ] = "9,21,5,19,".split( splitreg ); p++;
pieces[ p ] = "4,0,22,21,".split( splitreg ); p++;
pieces[ p ] = "12,9,8,0,".split( splitreg ); p++;
pieces[ p ] = "15,20,10,9,".split( splitreg ); p++;
pieces[ p ] = "17,6,14,20,".split( splitreg ); p++;
pieces[ p ] = "18,13,14,6,".split( splitreg ); p++;
pieces[ p ] = "7,13,15,13,".split( splitreg ); p++;
pieces[ p ] = "18,15,20,13,".split( splitreg ); p++;
pieces[ p ] = "19,1,20,15,".split( splitreg ); p++;
pieces[ p ] = "3,19,18,1,".split( splitreg ); p++;
pieces[ p ] = "3,15,10,19,".split( splitreg ); p++;
pieces[ p ] = "1,11,20,15,".split( splitreg ); p++;
pieces[ p ] = "1,20,2,11,".split( splitreg ); p++;
pieces[ p ] = "6,21,14,20,".split( splitreg ); p++;
pieces[ p ] = "1,9,3,21,".split( splitreg ); p++;
pieces[ p ] = "17,19,17,9,".split( splitreg ); p++;
pieces[ p ] = "5,19,18,19,".split( splitreg ); p++;
pieces[ p ] = "22,0,8,19,".split( splitreg ); p++;
pieces[ p ] = "8,21,16,0,".split( splitreg ); p++;
pieces[ p ] = "10,10,6,21,".split( splitreg ); p++;
pieces[ p ] = "14,1,6,10,".split( splitreg ); p++;
pieces[ p ] = "14,15,9,1,".split( splitreg ); p++;
pieces[ p ] = "15,10,11,15,".split( splitreg ); p++;
pieces[ p ] = "20,3,11,10,".split( splitreg ); p++;
pieces[ p ] = "20,1,6,3,".split( splitreg ); p++;
pieces[ p ] = "18,6,15,1,".split( splitreg ); p++;
pieces[ p ] = "10,13,21,6,".split( splitreg ); p++;
pieces[ p ] = "20,5,9,13,".split( splitreg ); p++;
pieces[ p ] = "2,10,13,5,".split( splitreg ); p++;
pieces[ p ] = "14,14,9,10,".split( splitreg ); p++;
pieces[ p ] = "3,14,10,14,".split( splitreg ); p++;
pieces[ p ] = "17,3,21,14,".split( splitreg ); p++;
pieces[ p ] = "18,13,18,3,".split( splitreg ); p++;
pieces[ p ] = "8,0,8,13,".split( splitreg ); p++;
pieces[ p ] = "16,6,12,0,".split( splitreg ); p++;
pieces[ p ] = "6,10,14,6,".split( splitreg ); p++;
pieces[ p ] = "6,20,13,10,".split( splitreg ); p++;
pieces[ p ] = "9,21,20,20,".split( splitreg ); p++;
pieces[ p ] = "11,13,5,21,".split( splitreg ); p++;
pieces[ p ] = "11,13,1,13,".split( splitreg ); p++;
pieces[ p ] = "6,9,11,13,".split( splitreg ); p++;
pieces[ p ] = "15,11,21,9,".split( splitreg ); p++;
pieces[ p ] = "21,13,19,11,".split( splitreg ); p++;
pieces[ p ] = "9,11,5,13,".split( splitreg ); p++;
pieces[ p ] = "13,1,14,11,".split( splitreg ); p++;
pieces[ p ] = "9,10,11,1,".split( splitreg ); p++;
pieces[ p ] = "10,1,2,10,".split( splitreg ); p++;
pieces[ p ] = "21,6,6,1,".split( splitreg ); p++;
pieces[ p ] = "18,17,2,6,".split( splitreg ); p++;
pieces[ p ] = "8,0,22,17,".split( splitreg ); p++;
pieces[ p ] = "12,9,12,0,".split( splitreg ); p++;
pieces[ p ] = "14,3,19,9,".split( splitreg ); p++;
pieces[ p ] = "13,15,2,3,".split( splitreg ); p++;
pieces[ p ] = "20,19,10,15,".split( splitreg ); p++;
pieces[ p ] = "5,7,5,19,".split( splitreg ); p++;
pieces[ p ] = "1,21,9,7,".split( splitreg ); p++;
pieces[ p ] = "11,15,9,21,".split( splitreg ); p++;
pieces[ p ] = "21,7,10,15,".split( splitreg ); p++;
pieces[ p ] = "19,3,3,7,".split( splitreg ); p++;
pieces[ p ] = "5,19,1,3,".split( splitreg ); p++;
pieces[ p ] = "14,7,6,19,".split( splitreg ); p++;
pieces[ p ] = "11,18,2,7,".split( splitreg ); p++;
pieces[ p ] = "2,10,5,18,".split( splitreg ); p++;
pieces[ p ] = "6,15,14,10,".split( splitreg ); p++;
pieces[ p ] = "2,20,5,15,".split( splitreg ); p++;
pieces[ p ] = "22,0,8,20,".split( splitreg ); p++;
pieces[ p ] = "12,7,22,0,".split( splitreg ); p++;
pieces[ p ] = "19,15,6,7,".split( splitreg ); p++;
pieces[ p ] = "2,5,2,15,".split( splitreg ); p++;
pieces[ p ] = "10,5,20,5,".split( splitreg ); p++;
pieces[ p ] = "5,10,17,5,".split( splitreg ); p++;
pieces[ p ] = "9,21,15,10,".split( splitreg ); p++;
pieces[ p ] = "9,7,6,21,".split( splitreg ); p++;
pieces[ p ] = "10,7,5,7,".split( splitreg ); p++;
pieces[ p ] = "3,19,3,7,".split( splitreg ); p++;
pieces[ p ] = "1,10,13,19,".split( splitreg ); p++;
pieces[ p ] = "6,6,3,10,".split( splitreg ); p++;
pieces[ p ] = "2,9,18,6,".split( splitreg ); p++;
pieces[ p ] = "5,21,10,9,".split( splitreg ); p++;
pieces[ p ] = "14,20,2,21,".split( splitreg ); p++;
pieces[ p ] = "5,11,13,20,".split( splitreg ); p++;
pieces[ p ] = "8,0,8,11,".split( splitreg ); p++;
pieces[ p ] = "22,14,12,0,".split( splitreg ); p++;
pieces[ p ] = "6,10,21,14,".split( splitreg ); p++;
pieces[ p ] = "2,11,5,10,".split( splitreg ); p++;
pieces[ p ] = "20,7,14,11,".split( splitreg ); p++;
pieces[ p ] = "17,7,10,7,".split( splitreg ); p++;
pieces[ p ] = "15,3,5,7,".split( splitreg ); p++;
pieces[ p ] = "6,20,21,3,".split( splitreg ); p++;
pieces[ p ] = "5,18,21,20,".split( splitreg ); p++;
pieces[ p ] = "3,13,18,18,".split( splitreg ); p++;
pieces[ p ] = "13,7,14,13,".split( splitreg ); p++;
pieces[ p ] = "3,7,1,7,".split( splitreg ); p++;
pieces[ p ] = "18,9,14,7,".split( splitreg ); p++;
pieces[ p ] = "10,11,21,9,".split( splitreg ); p++;
pieces[ p ] = "2,13,17,11,".split( splitreg ); p++;
pieces[ p ] = "13,1,5,13,".split( splitreg ); p++;
pieces[ p ] = "8,0,4,1,".split( splitreg ); p++;
pieces[ p ] = "12,10,8,0,".split( splitreg ); p++;
pieces[ p ] = "21,1,17,10,".split( splitreg ); p++;
pieces[ p ] = "5,19,1,1,".split( splitreg ); p++;
pieces[ p ] = "14,5,5,19,".split( splitreg ); p++;
pieces[ p ] = "10,15,5,5,".split( splitreg ); p++;
pieces[ p ] = "5,5,18,15,".split( splitreg ); p++;
pieces[ p ] = "21,14,7,5,".split( splitreg ); p++;
pieces[ p ] = "21,3,3,14,".split( splitreg ); p++;
pieces[ p ] = "18,9,9,3,".split( splitreg ); p++;
pieces[ p ] = "14,7,7,9,".split( splitreg ); p++;
pieces[ p ] = "1,10,10,7,".split( splitreg ); p++;
pieces[ p ] = "14,14,14,10,".split( splitreg ); p++;
pieces[ p ] = "21,14,3,14,".split( splitreg ); p++;
pieces[ p ] = "17,18,6,14,".split( splitreg ); p++;
pieces[ p ] = "5,14,1,18,".split( splitreg ); p++;
pieces[ p ] = "4,0,4,14,".split( splitreg ); p++;
pieces[ p ] = "8,1,16,0,".split( splitreg ); p++;
pieces[ p ] = "17,19,20,1,".split( splitreg ); p++;
pieces[ p ] = "1,15,21,19,".split( splitreg ); p++;
pieces[ p ] = "5,3,11,15,".split( splitreg ); p++;
pieces[ p ] = "5,11,2,3,".split( splitreg ); p++;
pieces[ p ] = "18,1,2,11,".split( splitreg ); p++;
pieces[ p ] = "7,3,18,1,".split( splitreg ); p++;
pieces[ p ] = "3,21,19,3,".split( splitreg ); p++;
pieces[ p ] = "9,9,7,21,".split( splitreg ); p++;
pieces[ p ] = "7,19,6,9,".split( splitreg ); p++;
pieces[ p ] = "10,1,2,19,".split( splitreg ); p++;
pieces[ p ] = "14,20,5,1,".split( splitreg ); p++;
pieces[ p ] = "3,6,19,20,".split( splitreg ); p++;
pieces[ p ] = "6,14,17,6,".split( splitreg ); p++;
pieces[ p ] = "1,10,13,14,".split( splitreg ); p++;
pieces[ p ] = "4,0,22,10,".split( splitreg ); p++;
pieces[ p ] = "16,13,16,0,".split( splitreg ); p++;
pieces[ p ] = "20,15,18,13,".split( splitreg ); p++;
pieces[ p ] = "21,17,7,15,".split( splitreg ); p++;
pieces[ p ] = "11,3,7,17,".split( splitreg ); p++;
pieces[ p ] = "2,6,13,3,".split( splitreg ); p++;
pieces[ p ] = "2,19,11,6,".split( splitreg ); p++;
pieces[ p ] = "18,21,2,19,".split( splitreg ); p++;
pieces[ p ] = "19,13,7,21,".split( splitreg ); p++;
pieces[ p ] = "7,20,2,13,".split( splitreg ); p++;
pieces[ p ] = "6,2,7,20,".split( splitreg ); p++;
pieces[ p ] = "2,3,15,2,".split( splitreg ); p++;
pieces[ p ] = "5,5,13,3,".split( splitreg ); p++;
pieces[ p ] = "19,2,9,5,".split( splitreg ); p++;
pieces[ p ] = "17,6,11,2,".split( splitreg ); p++;
pieces[ p ] = "13,11,14,6,".split( splitreg ); p++;
pieces[ p ] = "22,0,22,11,".split( splitreg ); p++;
pieces[ p ] = "16,10,16,0,".split( splitreg ); p++;
pieces[ p ] = "18,20,20,10,".split( splitreg ); p++;
pieces[ p ] = "7,18,15,20,".split( splitreg ); p++;
pieces[ p ] = "7,14,15,18,".split( splitreg ); p++;
pieces[ p ] = "13,11,17,14,".split( splitreg ); p++;
pieces[ p ] = "11,10,20,11,".split( splitreg ); p++;
pieces[ p ] = "2,10,20,10,".split( splitreg ); p++;
pieces[ p ] = "7,9,18,10,".split( splitreg ); p++;
pieces[ p ] = "2,13,15,9,".split( splitreg ); p++;
pieces[ p ] = "7,7,2,13,".split( splitreg ); p++;
pieces[ p ] = "15,15,17,7,".split( splitreg ); p++;
pieces[ p ] = "13,1,20,15,".split( splitreg ); p++;
pieces[ p ] = "9,18,17,1,".split( splitreg ); p++;
pieces[ p ] = "11,11,18,18,".split( splitreg ); p++;
pieces[ p ] = "14,21,19,11,".split( splitreg ); p++;
pieces[ p ] = "22,0,16,21,".split( splitreg ); p++;
pieces[ p ] = "16,7,22,0,".split( splitreg ); p++;
pieces[ p ] = "20,17,7,7,".split( splitreg ); p++;
pieces[ p ] = "15,5,9,17,".split( splitreg ); p++;
pieces[ p ] = "15,18,15,5,".split( splitreg ); p++;
pieces[ p ] = "17,20,2,18,".split( splitreg ); p++;
pieces[ p ] = "20,19,1,20,".split( splitreg ); p++;
pieces[ p ] = "20,17,9,19,".split( splitreg ); p++;
pieces[ p ] = "18,17,5,17,".split( splitreg ); p++;
pieces[ p ] = "15,15,19,17,".split( splitreg ); p++;
pieces[ p ] = "2,1,14,15,".split( splitreg ); p++;
pieces[ p ] = "17,17,21,1,".split( splitreg ); p++;
pieces[ p ] = "20,1,2,17,".split( splitreg ); p++;
pieces[ p ] = "17,17,13,1,".split( splitreg ); p++;
pieces[ p ] = "18,21,5,17,".split( splitreg ); p++;
pieces[ p ] = "19,19,9,21,".split( splitreg ); p++;
pieces[ p ] = "16,0,4,19,".split( splitreg ); p++;
pieces[ p ] = "22,19,12,0,".split( splitreg ); p++;
pieces[ p ] = "7,14,1,19,".split( splitreg ); p++;
pieces[ p ] = "9,3,18,14,".split( splitreg ); p++;
pieces[ p ] = "15,19,11,3,".split( splitreg ); p++;
pieces[ p ] = "2,5,18,19,".split( splitreg ); p++;
pieces[ p ] = "1,2,21,5,".split( splitreg ); p++;
pieces[ p ] = "9,11,13,2,".split( splitreg ); p++;
pieces[ p ] = "5,17,2,11,".split( splitreg ); p++;
pieces[ p ] = "19,7,3,17,".split( splitreg ); p++;
pieces[ p ] = "14,13,1,7,".split( splitreg ); p++;
pieces[ p ] = "21,21,6,13,".split( splitreg ); p++;
pieces[ p ] = "2,7,19,21,".split( splitreg ); p++;
pieces[ p ] = "13,13,17,7,".split( splitreg ); p++;
pieces[ p ] = "5,18,10,13,".split( splitreg ); p++;
pieces[ p ] = "9,21,6,18,".split( splitreg ); p++;
pieces[ p ] = "4,0,4,21,".split( splitreg ); p++;
pieces[ p ] = "12,2,8,0,".split( splitreg ); p++;
pieces[ p ] = "1,13,9,2,".split( splitreg ); p++;
pieces[ p ] = "18,15,14,13,".split( splitreg ); p++;
pieces[ p ] = "11,1,3,15,".split( splitreg ); p++;
pieces[ p ] = "18,20,3,1,".split( splitreg ); p++;
pieces[ p ] = "21,2,6,20,".split( splitreg ); p++;
pieces[ p ] = "13,17,5,2,".split( splitreg ); p++;
pieces[ p ] = "2,3,2,17,".split( splitreg ); p++;
pieces[ p ] = "3,2,20,3,".split( splitreg ); p++;
pieces[ p ] = "1,11,17,2,".split( splitreg ); p++;
pieces[ p ] = "6,18,11,11,".split( splitreg ); p++;
pieces[ p ] = "19,9,19,18,".split( splitreg ); p++;
pieces[ p ] = "17,11,19,9,".split( splitreg ); p++;
pieces[ p ] = "10,11,20,11,".split( splitreg ); p++;
pieces[ p ] = "6,14,17,11,".split( splitreg ); p++;
pieces[ p ] = "4,0,8,14,".split( splitreg ); p++;
pieces[ p ] = "8,12,0,0,".split( splitreg ); p++;
pieces[ p ] = "9,4,0,12,".split( splitreg ); p++;
pieces[ p ] = "14,12,0,4,".split( splitreg ); p++;
pieces[ p ] = "3,16,0,12,".split( splitreg ); p++;
pieces[ p ] = "3,12,0,16,".split( splitreg ); p++;
pieces[ p ] = "6,4,0,12,".split( splitreg ); p++;
pieces[ p ] = "5,16,0,4,".split( splitreg ); p++;
pieces[ p ] = "2,8,0,16,".split( splitreg ); p++;
pieces[ p ] = "20,12,0,8,".split( splitreg ); p++;
pieces[ p ] = "17,8,0,12,".split( splitreg ); p++;
pieces[ p ] = "11,16,0,8,".split( splitreg ); p++;
pieces[ p ] = "19,16,0,16,".split( splitreg ); p++;
pieces[ p ] = "19,22,0,16,".split( splitreg ); p++;
pieces[ p ] = "20,16,0,22,".split( splitreg ); p++;
pieces[ p ] = "17,22,0,16,".split( splitreg ); p++;
pieces[ p ] = "8,0,0,22,".split( splitreg ); p++;
// piece,space,rotation
fixed[ f ] = "210,210,0".split( splitreg ); f++;
fixed[ f ] = "34,34,0".split( splitreg ); f++;
fixed[ f ] = "221,221,0".split( splitreg ); f++;
fixed[ f ] = "45,45,0".split( splitreg ); f++;
fixed[ f ] = "135,135,0".split( splitreg ); f++;
nb_pieces = p;
nb_fixed = f;
}
