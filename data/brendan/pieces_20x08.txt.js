
puzzles[ nb_puzzles ] = "brendan/pieces_20x08.txt.js,Brendan 20x08".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_20x08.txt.js" ) {

board_w = 20;
board_h = 8;


pieces[ p ] = "0,0,1,1".split( splitreg ); p++;
pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,0,5,1".split( splitreg ); p++;
pieces[ p ] = "0,0,5,3".split( splitreg ); p++;
pieces[ p ] = "0,1,6,2".split( splitreg ); p++;
pieces[ p ] = "0,1,7,4".split( splitreg ); p++;
pieces[ p ] = "0,1,10,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,5".split( splitreg ); p++;
pieces[ p ] = "0,1,15,2".split( splitreg ); p++;
pieces[ p ] = "0,1,16,5".split( splitreg ); p++;
pieces[ p ] = "0,1,17,1".split( splitreg ); p++;
pieces[ p ] = "0,1,18,2".split( splitreg ); p++;
pieces[ p ] = "0,1,18,3".split( splitreg ); p++;
pieces[ p ] = "0,1,18,5".split( splitreg ); p++;
pieces[ p ] = "0,2,6,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,1".split( splitreg ); p++;
pieces[ p ] = "0,2,8,3".split( splitreg ); p++;
pieces[ p ] = "0,2,10,2".split( splitreg ); p++;
pieces[ p ] = "0,2,11,1".split( splitreg ); p++;
pieces[ p ] = "0,2,11,3".split( splitreg ); p++;
pieces[ p ] = "0,2,12,2".split( splitreg ); p++;
pieces[ p ] = "0,2,13,4".split( splitreg ); p++;
pieces[ p ] = "0,2,14,5".split( splitreg ); p++;
pieces[ p ] = "0,2,15,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,2".split( splitreg ); p++;
pieces[ p ] = "0,3,7,4".split( splitreg ); p++;
pieces[ p ] = "0,3,8,1".split( splitreg ); p++;
pieces[ p ] = "0,3,8,4".split( splitreg ); p++;
pieces[ p ] = "0,3,11,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,1".split( splitreg ); p++;
pieces[ p ] = "0,3,17,4".split( splitreg ); p++;
pieces[ p ] = "0,3,17,5".split( splitreg ); p++;
pieces[ p ] = "0,3,18,2".split( splitreg ); p++;
pieces[ p ] = "0,3,18,3".split( splitreg ); p++;
pieces[ p ] = "0,4,8,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,5".split( splitreg ); p++;
pieces[ p ] = "0,4,11,5".split( splitreg ); p++;
pieces[ p ] = "0,4,12,3".split( splitreg ); p++;
pieces[ p ] = "0,4,13,5".split( splitreg ); p++;
pieces[ p ] = "0,4,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,15,4".split( splitreg ); p++;
pieces[ p ] = "0,4,16,5".split( splitreg ); p++;
pieces[ p ] = "0,4,17,3".split( splitreg ); p++;
pieces[ p ] = "0,4,18,5".split( splitreg ); p++;
pieces[ p ] = "0,5,6,3".split( splitreg ); p++;
pieces[ p ] = "0,5,8,4".split( splitreg ); p++;
pieces[ p ] = "0,5,12,1".split( splitreg ); p++;
pieces[ p ] = "0,5,13,1".split( splitreg ); p++;
pieces[ p ] = "0,5,15,2".split( splitreg ); p++;
pieces[ p ] = "0,5,15,4".split( splitreg ); p++;
pieces[ p ] = "0,5,16,4".split( splitreg ); p++;
pieces[ p ] = "0,5,18,4".split( splitreg ); p++;
pieces[ p ] = "6,6,7,9".split( splitreg ); p++;
pieces[ p ] = "6,8,7,10".split( splitreg ); p++;
pieces[ p ] = "6,8,12,9".split( splitreg ); p++;
pieces[ p ] = "6,8,16,12".split( splitreg ); p++;
pieces[ p ] = "6,8,18,11".split( splitreg ); p++;
pieces[ p ] = "6,9,9,14".split( splitreg ); p++;
pieces[ p ] = "6,9,14,12".split( splitreg ); p++;
pieces[ p ] = "6,9,14,13".split( splitreg ); p++;
pieces[ p ] = "6,9,14,18".split( splitreg ); p++;
pieces[ p ] = "6,10,13,10".split( splitreg ); p++;
pieces[ p ] = "6,11,16,12".split( splitreg ); p++;
pieces[ p ] = "6,12,8,17".split( splitreg ); p++;
pieces[ p ] = "6,12,10,12".split( splitreg ); p++;
pieces[ p ] = "6,12,11,17".split( splitreg ); p++;
pieces[ p ] = "6,12,17,8".split( splitreg ); p++;
pieces[ p ] = "6,13,6,15".split( splitreg ); p++;
pieces[ p ] = "6,13,8,10".split( splitreg ); p++;
pieces[ p ] = "6,14,6,16".split( splitreg ); p++;
pieces[ p ] = "6,14,7,16".split( splitreg ); p++;
pieces[ p ] = "6,14,16,9".split( splitreg ); p++;
pieces[ p ] = "6,14,18,11".split( splitreg ); p++;
pieces[ p ] = "6,14,18,15".split( splitreg ); p++;
pieces[ p ] = "6,15,15,16".split( splitreg ); p++;
pieces[ p ] = "6,16,11,16".split( splitreg ); p++;
pieces[ p ] = "6,16,15,13".split( splitreg ); p++;
pieces[ p ] = "6,17,7,11".split( splitreg ); p++;
pieces[ p ] = "6,17,11,8".split( splitreg ); p++;
pieces[ p ] = "6,17,16,18".split( splitreg ); p++;
pieces[ p ] = "6,17,17,11".split( splitreg ); p++;
pieces[ p ] = "6,18,10,9".split( splitreg ); p++;
pieces[ p ] = "6,18,12,13".split( splitreg ); p++;
pieces[ p ] = "7,7,7,9".split( splitreg ); p++;
pieces[ p ] = "7,7,14,10".split( splitreg ); p++;
pieces[ p ] = "7,7,16,12".split( splitreg ); p++;
pieces[ p ] = "7,7,16,15".split( splitreg ); p++;
pieces[ p ] = "7,8,9,17".split( splitreg ); p++;
pieces[ p ] = "7,8,17,15".split( splitreg ); p++;
pieces[ p ] = "7,10,12,16".split( splitreg ); p++;
pieces[ p ] = "7,10,16,9".split( splitreg ); p++;
pieces[ p ] = "7,12,8,16".split( splitreg ); p++;
pieces[ p ] = "7,12,10,11".split( splitreg ); p++;
pieces[ p ] = "7,12,14,12".split( splitreg ); p++;
pieces[ p ] = "7,12,14,18".split( splitreg ); p++;
pieces[ p ] = "7,13,8,12".split( splitreg ); p++;
pieces[ p ] = "7,14,8,9".split( splitreg ); p++;
pieces[ p ] = "7,14,13,13".split( splitreg ); p++;
pieces[ p ] = "7,14,15,10".split( splitreg ); p++;
pieces[ p ] = "7,14,17,18".split( splitreg ); p++;
pieces[ p ] = "7,15,10,15".split( splitreg ); p++;
pieces[ p ] = "7,15,15,14".split( splitreg ); p++;
pieces[ p ] = "7,15,16,18".split( splitreg ); p++;
pieces[ p ] = "7,16,12,10".split( splitreg ); p++;
pieces[ p ] = "7,16,18,13".split( splitreg ); p++;
pieces[ p ] = "7,17,11,16".split( splitreg ); p++;
pieces[ p ] = "7,17,18,12".split( splitreg ); p++;
pieces[ p ] = "7,18,13,10".split( splitreg ); p++;
pieces[ p ] = "7,18,18,11".split( splitreg ); p++;
pieces[ p ] = "8,9,9,11".split( splitreg ); p++;
pieces[ p ] = "8,9,10,11".split( splitreg ); p++;
pieces[ p ] = "8,9,10,13".split( splitreg ); p++;
pieces[ p ] = "8,9,15,9".split( splitreg ); p++;
pieces[ p ] = "8,9,15,12".split( splitreg ); p++;
pieces[ p ] = "8,9,16,10".split( splitreg ); p++;
pieces[ p ] = "8,10,9,18".split( splitreg ); p++;
pieces[ p ] = "8,10,12,11".split( splitreg ); p++;
pieces[ p ] = "8,10,15,16".split( splitreg ); p++;
pieces[ p ] = "8,11,15,15".split( splitreg ); p++;
pieces[ p ] = "8,12,9,14".split( splitreg ); p++;
pieces[ p ] = "8,13,8,17".split( splitreg ); p++;
pieces[ p ] = "8,13,10,17".split( splitreg ); p++;
pieces[ p ] = "8,14,9,10".split( splitreg ); p++;
pieces[ p ] = "8,16,14,16".split( splitreg ); p++;
pieces[ p ] = "8,17,9,17".split( splitreg ); p++;
pieces[ p ] = "8,18,12,15".split( splitreg ); p++;
pieces[ p ] = "8,18,14,14".split( splitreg ); p++;
pieces[ p ] = "8,18,18,18".split( splitreg ); p++;
pieces[ p ] = "9,10,17,10".split( splitreg ); p++;
pieces[ p ] = "9,11,9,13".split( splitreg ); p++;
pieces[ p ] = "9,11,13,11".split( splitreg ); p++;
pieces[ p ] = "9,11,13,17".split( splitreg ); p++;
pieces[ p ] = "9,11,15,14".split( splitreg ); p++;
pieces[ p ] = "9,13,11,16".split( splitreg ); p++;
pieces[ p ] = "9,14,13,17".split( splitreg ); p++;
pieces[ p ] = "9,15,10,16".split( splitreg ); p++;
pieces[ p ] = "9,16,14,13".split( splitreg ); p++;
pieces[ p ] = "9,17,15,17".split( splitreg ); p++;
pieces[ p ] = "9,18,13,12".split( splitreg ); p++;
pieces[ p ] = "9,18,14,11".split( splitreg ); p++;
pieces[ p ] = "10,12,17,12".split( splitreg ); p++;
pieces[ p ] = "10,13,17,15".split( splitreg ); p++;
pieces[ p ] = "10,13,17,16".split( splitreg ); p++;
pieces[ p ] = "10,14,10,15".split( splitreg ); p++;
pieces[ p ] = "10,16,13,15".split( splitreg ); p++;
pieces[ p ] = "10,17,17,13".split( splitreg ); p++;
pieces[ p ] = "10,18,11,14".split( splitreg ); p++;
pieces[ p ] = "10,18,12,14".split( splitreg ); p++;
pieces[ p ] = "10,18,15,18".split( splitreg ); p++;
pieces[ p ] = "11,11,12,12".split( splitreg ); p++;
pieces[ p ] = "11,11,16,13".split( splitreg ); p++;
pieces[ p ] = "11,11,18,17".split( splitreg ); p++;
pieces[ p ] = "11,14,17,13".split( splitreg ); p++;
pieces[ p ] = "11,16,15,17".split( splitreg ); p++;
pieces[ p ] = "11,17,15,12".split( splitreg ); p++;
pieces[ p ] = "11,17,16,12".split( splitreg ); p++;
pieces[ p ] = "11,18,13,13".split( splitreg ); p++;
pieces[ p ] = "12,16,14,13".split( splitreg ); p++;
pieces[ p ] = "13,13,13,15".split( splitreg ); p++;
pieces[ p ] = "14,14,15,16".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

