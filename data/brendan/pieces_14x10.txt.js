
puzzles[ nb_puzzles ] = "brendan/pieces_14x10.txt.js,Brendan 14x10".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_14x10.txt.js" ) {

board_w = 14;
board_h = 10;


pieces[ p ] = "0,0,1,2".split( splitreg ); p++;
pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,4,1".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,1,5,3".split( splitreg ); p++;
pieces[ p ] = "0,1,6,1".split( splitreg ); p++;
pieces[ p ] = "0,1,6,3".split( splitreg ); p++;
pieces[ p ] = "0,1,6,4".split( splitreg ); p++;
pieces[ p ] = "0,1,8,4".split( splitreg ); p++;
pieces[ p ] = "0,1,10,2".split( splitreg ); p++;
pieces[ p ] = "0,1,11,2".split( splitreg ); p++;
pieces[ p ] = "0,1,12,2".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,16,2".split( splitreg ); p++;
pieces[ p ] = "0,2,5,3".split( splitreg ); p++;
pieces[ p ] = "0,2,6,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,4".split( splitreg ); p++;
pieces[ p ] = "0,2,8,2".split( splitreg ); p++;
pieces[ p ] = "0,2,9,1".split( splitreg ); p++;
pieces[ p ] = "0,2,9,3".split( splitreg ); p++;
pieces[ p ] = "0,2,12,3".split( splitreg ); p++;
pieces[ p ] = "0,2,13,1".split( splitreg ); p++;
pieces[ p ] = "0,2,14,4".split( splitreg ); p++;
pieces[ p ] = "0,2,15,4".split( splitreg ); p++;
pieces[ p ] = "0,3,5,3".split( splitreg ); p++;
pieces[ p ] = "0,3,7,1".split( splitreg ); p++;
pieces[ p ] = "0,3,8,4".split( splitreg ); p++;
pieces[ p ] = "0,3,10,1".split( splitreg ); p++;
pieces[ p ] = "0,3,10,2".split( splitreg ); p++;
pieces[ p ] = "0,3,11,1".split( splitreg ); p++;
pieces[ p ] = "0,3,11,4".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,15,3".split( splitreg ); p++;
pieces[ p ] = "0,3,15,4".split( splitreg ); p++;
pieces[ p ] = "0,3,16,1".split( splitreg ); p++;
pieces[ p ] = "0,4,5,3".split( splitreg ); p++;
pieces[ p ] = "0,4,6,4".split( splitreg ); p++;
pieces[ p ] = "0,4,7,4".split( splitreg ); p++;
pieces[ p ] = "0,4,10,1".split( splitreg ); p++;
pieces[ p ] = "0,4,12,1".split( splitreg ); p++;
pieces[ p ] = "0,4,12,2".split( splitreg ); p++;
pieces[ p ] = "0,4,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,16,3".split( splitreg ); p++;
pieces[ p ] = "0,4,16,4".split( splitreg ); p++;
pieces[ p ] = "5,6,8,10".split( splitreg ); p++;
pieces[ p ] = "5,6,9,9".split( splitreg ); p++;
pieces[ p ] = "5,7,6,15".split( splitreg ); p++;
pieces[ p ] = "5,7,10,11".split( splitreg ); p++;
pieces[ p ] = "5,7,12,9".split( splitreg ); p++;
pieces[ p ] = "5,7,12,11".split( splitreg ); p++;
pieces[ p ] = "5,7,15,7".split( splitreg ); p++;
pieces[ p ] = "5,8,5,15".split( splitreg ); p++;
pieces[ p ] = "5,8,8,11".split( splitreg ); p++;
pieces[ p ] = "5,8,8,15".split( splitreg ); p++;
pieces[ p ] = "5,8,14,13".split( splitreg ); p++;
pieces[ p ] = "5,9,6,12".split( splitreg ); p++;
pieces[ p ] = "5,9,16,14".split( splitreg ); p++;
pieces[ p ] = "5,10,12,13".split( splitreg ); p++;
pieces[ p ] = "5,10,12,14".split( splitreg ); p++;
pieces[ p ] = "5,10,12,16".split( splitreg ); p++;
pieces[ p ] = "5,10,15,6".split( splitreg ); p++;
pieces[ p ] = "5,11,14,10".split( splitreg ); p++;
pieces[ p ] = "5,11,16,14".split( splitreg ); p++;
pieces[ p ] = "5,12,6,16".split( splitreg ); p++;
pieces[ p ] = "5,12,8,12".split( splitreg ); p++;
pieces[ p ] = "5,12,8,14".split( splitreg ); p++;
pieces[ p ] = "5,12,8,16".split( splitreg ); p++;
pieces[ p ] = "5,13,5,16".split( splitreg ); p++;
pieces[ p ] = "5,13,9,13".split( splitreg ); p++;
pieces[ p ] = "5,13,10,8".split( splitreg ); p++;
pieces[ p ] = "5,13,10,11".split( splitreg ); p++;
pieces[ p ] = "5,14,14,16".split( splitreg ); p++;
pieces[ p ] = "5,15,9,6".split( splitreg ); p++;
pieces[ p ] = "5,15,9,13".split( splitreg ); p++;
pieces[ p ] = "6,6,8,14".split( splitreg ); p++;
pieces[ p ] = "6,6,11,9".split( splitreg ); p++;
pieces[ p ] = "6,6,15,9".split( splitreg ); p++;
pieces[ p ] = "6,6,16,8".split( splitreg ); p++;
pieces[ p ] = "6,7,12,16".split( splitreg ); p++;
pieces[ p ] = "6,7,14,10".split( splitreg ); p++;
pieces[ p ] = "6,7,15,13".split( splitreg ); p++;
pieces[ p ] = "6,7,16,11".split( splitreg ); p++;
pieces[ p ] = "6,10,7,8".split( splitreg ); p++;
pieces[ p ] = "6,11,15,13".split( splitreg ); p++;
pieces[ p ] = "6,12,7,16".split( splitreg ); p++;
pieces[ p ] = "6,12,11,15".split( splitreg ); p++;
pieces[ p ] = "6,14,15,13".split( splitreg ); p++;
pieces[ p ] = "6,14,16,12".split( splitreg ); p++;
pieces[ p ] = "6,15,8,12".split( splitreg ); p++;
pieces[ p ] = "6,15,9,9".split( splitreg ); p++;
pieces[ p ] = "6,15,9,15".split( splitreg ); p++;
pieces[ p ] = "6,16,9,11".split( splitreg ); p++;
pieces[ p ] = "6,16,9,15".split( splitreg ); p++;
pieces[ p ] = "6,16,14,14".split( splitreg ); p++;
pieces[ p ] = "7,7,11,10".split( splitreg ); p++;
pieces[ p ] = "7,7,11,13".split( splitreg ); p++;
pieces[ p ] = "7,7,13,11".split( splitreg ); p++;
pieces[ p ] = "7,8,13,13".split( splitreg ); p++;
pieces[ p ] = "7,8,14,16".split( splitreg ); p++;
pieces[ p ] = "7,10,11,11".split( splitreg ); p++;
pieces[ p ] = "7,10,12,16".split( splitreg ); p++;
pieces[ p ] = "7,11,11,16".split( splitreg ); p++;
pieces[ p ] = "7,13,9,8".split( splitreg ); p++;
pieces[ p ] = "7,13,12,16".split( splitreg ); p++;
pieces[ p ] = "7,13,14,12".split( splitreg ); p++;
pieces[ p ] = "7,14,7,15".split( splitreg ); p++;
pieces[ p ] = "7,14,8,9".split( splitreg ); p++;
pieces[ p ] = "7,14,9,13".split( splitreg ); p++;
pieces[ p ] = "7,14,12,9".split( splitreg ); p++;
pieces[ p ] = "7,15,11,16".split( splitreg ); p++;
pieces[ p ] = "7,16,8,8".split( splitreg ); p++;
pieces[ p ] = "8,9,11,12".split( splitreg ); p++;
pieces[ p ] = "8,9,13,10".split( splitreg ); p++;
pieces[ p ] = "8,9,14,11".split( splitreg ); p++;
pieces[ p ] = "8,10,9,15".split( splitreg ); p++;
pieces[ p ] = "8,11,16,15".split( splitreg ); p++;
pieces[ p ] = "8,13,9,11".split( splitreg ); p++;
pieces[ p ] = "8,13,10,12".split( splitreg ); p++;
pieces[ p ] = "8,13,14,13".split( splitreg ); p++;
pieces[ p ] = "8,13,16,15".split( splitreg ); p++;
pieces[ p ] = "8,14,9,9".split( splitreg ); p++;
pieces[ p ] = "8,14,14,13".split( splitreg ); p++;
pieces[ p ] = "8,15,14,13".split( splitreg ); p++;
pieces[ p ] = "9,9,16,13".split( splitreg ); p++;
pieces[ p ] = "9,10,11,15".split( splitreg ); p++;
pieces[ p ] = "9,11,9,12".split( splitreg ); p++;
pieces[ p ] = "9,11,12,13".split( splitreg ); p++;
pieces[ p ] = "9,12,11,14".split( splitreg ); p++;
pieces[ p ] = "9,15,11,12".split( splitreg ); p++;
pieces[ p ] = "10,10,10,12".split( splitreg ); p++;
pieces[ p ] = "10,10,10,14".split( splitreg ); p++;
pieces[ p ] = "10,10,11,15".split( splitreg ); p++;
pieces[ p ] = "10,12,14,14".split( splitreg ); p++;
pieces[ p ] = "10,12,16,11".split( splitreg ); p++;
pieces[ p ] = "10,13,12,11".split( splitreg ); p++;
pieces[ p ] = "10,14,10,15".split( splitreg ); p++;
pieces[ p ] = "10,16,16,12".split( splitreg ); p++;
pieces[ p ] = "11,15,12,16".split( splitreg ); p++;
pieces[ p ] = "11,16,15,13".split( splitreg ); p++;
pieces[ p ] = "13,14,16,15".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

