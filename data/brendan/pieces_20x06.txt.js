
puzzles[ nb_puzzles ] = "brendan/pieces_20x06.txt.js,Brendan 20x06".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_20x06.txt.js" ) {

board_w = 20;
board_h = 6;


pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,4,3".split( splitreg ); p++;
pieces[ p ] = "0,0,5,3".split( splitreg ); p++;
pieces[ p ] = "0,0,5,4".split( splitreg ); p++;
pieces[ p ] = "0,1,9,2".split( splitreg ); p++;
pieces[ p ] = "0,1,9,4".split( splitreg ); p++;
pieces[ p ] = "0,1,10,5".split( splitreg ); p++;
pieces[ p ] = "0,1,12,1".split( splitreg ); p++;
pieces[ p ] = "0,1,12,2".split( splitreg ); p++;
pieces[ p ] = "0,1,12,4".split( splitreg ); p++;
pieces[ p ] = "0,1,13,1".split( splitreg ); p++;
pieces[ p ] = "0,1,13,2".split( splitreg ); p++;
pieces[ p ] = "0,1,14,1".split( splitreg ); p++;
pieces[ p ] = "0,1,14,5".split( splitreg ); p++;
pieces[ p ] = "0,2,7,1".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,8,2".split( splitreg ); p++;
pieces[ p ] = "0,2,8,5".split( splitreg ); p++;
pieces[ p ] = "0,2,9,3".split( splitreg ); p++;
pieces[ p ] = "0,2,10,3".split( splitreg ); p++;
pieces[ p ] = "0,2,10,4".split( splitreg ); p++;
pieces[ p ] = "0,2,16,1".split( splitreg ); p++;
pieces[ p ] = "0,2,16,3".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,8,2".split( splitreg ); p++;
pieces[ p ] = "0,3,8,5".split( splitreg ); p++;
pieces[ p ] = "0,3,10,4".split( splitreg ); p++;
pieces[ p ] = "0,3,11,3".split( splitreg ); p++;
pieces[ p ] = "0,3,12,2".split( splitreg ); p++;
pieces[ p ] = "0,3,12,5".split( splitreg ); p++;
pieces[ p ] = "0,3,14,1".split( splitreg ); p++;
pieces[ p ] = "0,3,15,2".split( splitreg ); p++;
pieces[ p ] = "0,3,16,5".split( splitreg ); p++;
pieces[ p ] = "0,4,6,2".split( splitreg ); p++;
pieces[ p ] = "0,4,7,5".split( splitreg ); p++;
pieces[ p ] = "0,4,8,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,4".split( splitreg ); p++;
pieces[ p ] = "0,4,11,5".split( splitreg ); p++;
pieces[ p ] = "0,4,14,3".split( splitreg ); p++;
pieces[ p ] = "0,4,15,5".split( splitreg ); p++;
pieces[ p ] = "0,5,7,4".split( splitreg ); p++;
pieces[ p ] = "0,5,11,4".split( splitreg ); p++;
pieces[ p ] = "0,5,13,3".split( splitreg ); p++;
pieces[ p ] = "0,5,13,4".split( splitreg ); p++;
pieces[ p ] = "0,5,14,3".split( splitreg ); p++;
pieces[ p ] = "0,5,16,1".split( splitreg ); p++;
pieces[ p ] = "0,5,16,2".split( splitreg ); p++;
pieces[ p ] = "6,6,6,11".split( splitreg ); p++;
pieces[ p ] = "6,6,8,10".split( splitreg ); p++;
pieces[ p ] = "6,6,9,15".split( splitreg ); p++;
pieces[ p ] = "6,6,13,12".split( splitreg ); p++;
pieces[ p ] = "6,7,8,15".split( splitreg ); p++;
pieces[ p ] = "6,7,9,13".split( splitreg ); p++;
pieces[ p ] = "6,7,10,8".split( splitreg ); p++;
pieces[ p ] = "6,7,12,13".split( splitreg ); p++;
pieces[ p ] = "6,8,7,16".split( splitreg ); p++;
pieces[ p ] = "6,8,9,12".split( splitreg ); p++;
pieces[ p ] = "6,9,10,7".split( splitreg ); p++;
pieces[ p ] = "6,10,7,15".split( splitreg ); p++;
pieces[ p ] = "6,10,14,9".split( splitreg ); p++;
pieces[ p ] = "6,11,9,11".split( splitreg ); p++;
pieces[ p ] = "6,11,9,13".split( splitreg ); p++;
pieces[ p ] = "6,11,13,9".split( splitreg ); p++;
pieces[ p ] = "6,11,14,8".split( splitreg ); p++;
pieces[ p ] = "6,12,7,16".split( splitreg ); p++;
pieces[ p ] = "6,12,12,7".split( splitreg ); p++;
pieces[ p ] = "6,13,15,11".split( splitreg ); p++;
pieces[ p ] = "6,13,16,14".split( splitreg ); p++;
pieces[ p ] = "6,14,13,10".split( splitreg ); p++;
pieces[ p ] = "6,15,8,11".split( splitreg ); p++;
pieces[ p ] = "6,15,10,11".split( splitreg ); p++;
pieces[ p ] = "6,15,11,15".split( splitreg ); p++;
pieces[ p ] = "7,8,8,15".split( splitreg ); p++;
pieces[ p ] = "7,8,15,15".split( splitreg ); p++;
pieces[ p ] = "7,8,16,16".split( splitreg ); p++;
pieces[ p ] = "7,9,9,13".split( splitreg ); p++;
pieces[ p ] = "7,10,10,9".split( splitreg ); p++;
pieces[ p ] = "7,10,14,8".split( splitreg ); p++;
pieces[ p ] = "7,12,12,12".split( splitreg ); p++;
pieces[ p ] = "7,12,16,9".split( splitreg ); p++;
pieces[ p ] = "7,14,9,9".split( splitreg ); p++;
pieces[ p ] = "7,14,11,10".split( splitreg ); p++;
pieces[ p ] = "7,14,12,16".split( splitreg ); p++;
pieces[ p ] = "7,14,13,9".split( splitreg ); p++;
pieces[ p ] = "7,15,9,15".split( splitreg ); p++;
pieces[ p ] = "7,16,11,15".split( splitreg ); p++;
pieces[ p ] = "7,16,12,13".split( splitreg ); p++;
pieces[ p ] = "7,16,12,15".split( splitreg ); p++;
pieces[ p ] = "7,16,16,8".split( splitreg ); p++;
pieces[ p ] = "8,8,14,14".split( splitreg ); p++;
pieces[ p ] = "8,11,11,15".split( splitreg ); p++;
pieces[ p ] = "8,11,13,13".split( splitreg ); p++;
pieces[ p ] = "8,11,16,12".split( splitreg ); p++;
pieces[ p ] = "8,12,9,12".split( splitreg ); p++;
pieces[ p ] = "8,13,11,16".split( splitreg ); p++;
pieces[ p ] = "8,13,12,11".split( splitreg ); p++;
pieces[ p ] = "8,14,16,9".split( splitreg ); p++;
pieces[ p ] = "8,15,9,14".split( splitreg ); p++;
pieces[ p ] = "8,15,9,15".split( splitreg ); p++;
pieces[ p ] = "8,16,13,15".split( splitreg ); p++;
pieces[ p ] = "9,10,14,15".split( splitreg ); p++;
pieces[ p ] = "9,11,10,10".split( splitreg ); p++;
pieces[ p ] = "9,11,10,16".split( splitreg ); p++;
pieces[ p ] = "9,12,10,16".split( splitreg ); p++;
pieces[ p ] = "9,13,11,11".split( splitreg ); p++;
pieces[ p ] = "9,13,14,14".split( splitreg ); p++;
pieces[ p ] = "9,13,15,15".split( splitreg ); p++;
pieces[ p ] = "10,11,12,15".split( splitreg ); p++;
pieces[ p ] = "10,11,14,14".split( splitreg ); p++;
pieces[ p ] = "10,12,14,16".split( splitreg ); p++;
pieces[ p ] = "10,13,13,13".split( splitreg ); p++;
pieces[ p ] = "10,14,10,16".split( splitreg ); p++;
pieces[ p ] = "10,14,12,14".split( splitreg ); p++;
pieces[ p ] = "10,14,15,12".split( splitreg ); p++;
pieces[ p ] = "11,12,11,16".split( splitreg ); p++;
pieces[ p ] = "11,16,15,15".split( splitreg ); p++;
pieces[ p ] = "12,12,13,16".split( splitreg ); p++;
pieces[ p ] = "13,13,16,16".split( splitreg ); p++;
pieces[ p ] = "13,15,14,14".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

