
puzzles[ nb_puzzles ] = "brendan/pieces_16x08.txt.js,Brendan 16x08".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_16x08.txt.js" ) {

board_w = 16;
board_h = 8;


pieces[ p ] = "0,0,1,1".split( splitreg ); p++;
pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,1,5,3".split( splitreg ); p++;
pieces[ p ] = "0,1,7,1".split( splitreg ); p++;
pieces[ p ] = "0,1,8,1".split( splitreg ); p++;
pieces[ p ] = "0,1,8,2".split( splitreg ); p++;
pieces[ p ] = "0,1,8,4".split( splitreg ); p++;
pieces[ p ] = "0,1,10,4".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,2".split( splitreg ); p++;
pieces[ p ] = "0,1,15,4".split( splitreg ); p++;
pieces[ p ] = "0,2,5,4".split( splitreg ); p++;
pieces[ p ] = "0,2,6,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,4".split( splitreg ); p++;
pieces[ p ] = "0,2,8,2".split( splitreg ); p++;
pieces[ p ] = "0,2,8,4".split( splitreg ); p++;
pieces[ p ] = "0,2,10,1".split( splitreg ); p++;
pieces[ p ] = "0,2,11,1".split( splitreg ); p++;
pieces[ p ] = "0,2,11,3".split( splitreg ); p++;
pieces[ p ] = "0,2,12,2".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,4".split( splitreg ); p++;
pieces[ p ] = "0,3,7,1".split( splitreg ); p++;
pieces[ p ] = "0,3,7,2".split( splitreg ); p++;
pieces[ p ] = "0,3,8,4".split( splitreg ); p++;
pieces[ p ] = "0,3,9,1".split( splitreg ); p++;
pieces[ p ] = "0,3,9,3".split( splitreg ); p++;
pieces[ p ] = "0,3,11,2".split( splitreg ); p++;
pieces[ p ] = "0,3,11,3".split( splitreg ); p++;
pieces[ p ] = "0,3,13,4".split( splitreg ); p++;
pieces[ p ] = "0,3,15,2".split( splitreg ); p++;
pieces[ p ] = "0,4,9,4".split( splitreg ); p++;
pieces[ p ] = "0,4,10,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,11,1".split( splitreg ); p++;
pieces[ p ] = "0,4,11,3".split( splitreg ); p++;
pieces[ p ] = "0,4,13,2".split( splitreg ); p++;
pieces[ p ] = "0,4,13,3".split( splitreg ); p++;
pieces[ p ] = "0,4,14,2".split( splitreg ); p++;
pieces[ p ] = "0,4,14,3".split( splitreg ); p++;
pieces[ p ] = "0,4,14,4".split( splitreg ); p++;
pieces[ p ] = "0,4,15,1".split( splitreg ); p++;
pieces[ p ] = "5,5,5,13".split( splitreg ); p++;
pieces[ p ] = "5,5,6,6".split( splitreg ); p++;
pieces[ p ] = "5,5,10,9".split( splitreg ); p++;
pieces[ p ] = "5,5,11,7".split( splitreg ); p++;
pieces[ p ] = "5,5,12,14".split( splitreg ); p++;
pieces[ p ] = "5,5,14,8".split( splitreg ); p++;
pieces[ p ] = "5,5,15,15".split( splitreg ); p++;
pieces[ p ] = "5,6,12,14".split( splitreg ); p++;
pieces[ p ] = "5,6,14,10".split( splitreg ); p++;
pieces[ p ] = "5,6,15,13".split( splitreg ); p++;
pieces[ p ] = "5,7,6,14".split( splitreg ); p++;
pieces[ p ] = "5,7,10,6".split( splitreg ); p++;
pieces[ p ] = "5,7,13,9".split( splitreg ); p++;
pieces[ p ] = "5,7,15,9".split( splitreg ); p++;
pieces[ p ] = "5,9,9,13".split( splitreg ); p++;
pieces[ p ] = "5,10,15,7".split( splitreg ); p++;
pieces[ p ] = "5,11,9,7".split( splitreg ); p++;
pieces[ p ] = "5,11,13,11".split( splitreg ); p++;
pieces[ p ] = "5,12,6,12".split( splitreg ); p++;
pieces[ p ] = "5,12,8,7".split( splitreg ); p++;
pieces[ p ] = "5,12,10,15".split( splitreg ); p++;
pieces[ p ] = "5,12,11,14".split( splitreg ); p++;
pieces[ p ] = "5,13,6,15".split( splitreg ); p++;
pieces[ p ] = "5,13,12,9".split( splitreg ); p++;
pieces[ p ] = "5,13,14,15".split( splitreg ); p++;
pieces[ p ] = "5,14,10,7".split( splitreg ); p++;
pieces[ p ] = "6,7,13,12".split( splitreg ); p++;
pieces[ p ] = "6,7,15,12".split( splitreg ); p++;
pieces[ p ] = "6,8,10,8".split( splitreg ); p++;
pieces[ p ] = "6,8,10,14".split( splitreg ); p++;
pieces[ p ] = "6,8,12,11".split( splitreg ); p++;
pieces[ p ] = "6,9,11,12".split( splitreg ); p++;
pieces[ p ] = "6,10,7,11".split( splitreg ); p++;
pieces[ p ] = "6,10,11,15".split( splitreg ); p++;
pieces[ p ] = "6,10,15,9".split( splitreg ); p++;
pieces[ p ] = "6,10,15,12".split( splitreg ); p++;
pieces[ p ] = "6,11,9,7".split( splitreg ); p++;
pieces[ p ] = "6,12,14,8".split( splitreg ); p++;
pieces[ p ] = "6,12,15,8".split( splitreg ); p++;
pieces[ p ] = "6,13,12,13".split( splitreg ); p++;
pieces[ p ] = "6,13,14,9".split( splitreg ); p++;
pieces[ p ] = "6,13,14,12".split( splitreg ); p++;
pieces[ p ] = "6,14,11,9".split( splitreg ); p++;
pieces[ p ] = "6,15,8,11".split( splitreg ); p++;
pieces[ p ] = "6,15,9,15".split( splitreg ); p++;
pieces[ p ] = "6,15,12,13".split( splitreg ); p++;
pieces[ p ] = "6,15,12,14".split( splitreg ); p++;
pieces[ p ] = "6,15,14,14".split( splitreg ); p++;
pieces[ p ] = "7,8,7,13".split( splitreg ); p++;
pieces[ p ] = "7,8,12,12".split( splitreg ); p++;
pieces[ p ] = "7,9,9,14".split( splitreg ); p++;
pieces[ p ] = "7,9,11,8".split( splitreg ); p++;
pieces[ p ] = "7,9,13,10".split( splitreg ); p++;
pieces[ p ] = "7,9,15,11".split( splitreg ); p++;
pieces[ p ] = "7,10,12,14".split( splitreg ); p++;
pieces[ p ] = "7,11,7,15".split( splitreg ); p++;
pieces[ p ] = "7,11,8,10".split( splitreg ); p++;
pieces[ p ] = "7,12,9,8".split( splitreg ); p++;
pieces[ p ] = "7,12,9,12".split( splitreg ); p++;
pieces[ p ] = "7,12,10,14".split( splitreg ); p++;
pieces[ p ] = "7,13,10,10".split( splitreg ); p++;
pieces[ p ] = "7,15,9,12".split( splitreg ); p++;
pieces[ p ] = "7,15,13,15".split( splitreg ); p++;
pieces[ p ] = "8,8,10,11".split( splitreg ); p++;
pieces[ p ] = "8,8,13,9".split( splitreg ); p++;
pieces[ p ] = "8,9,8,14".split( splitreg ); p++;
pieces[ p ] = "8,10,8,14".split( splitreg ); p++;
pieces[ p ] = "8,11,14,13".split( splitreg ); p++;
pieces[ p ] = "8,13,9,11".split( splitreg ); p++;
pieces[ p ] = "8,14,8,15".split( splitreg ); p++;
pieces[ p ] = "8,14,11,13".split( splitreg ); p++;
pieces[ p ] = "8,15,9,9".split( splitreg ); p++;
pieces[ p ] = "9,10,11,10".split( splitreg ); p++;
pieces[ p ] = "9,12,15,13".split( splitreg ); p++;
pieces[ p ] = "9,13,10,13".split( splitreg ); p++;
pieces[ p ] = "9,14,13,11".split( splitreg ); p++;
pieces[ p ] = "9,15,13,10".split( splitreg ); p++;
pieces[ p ] = "10,10,10,13".split( splitreg ); p++;
pieces[ p ] = "10,11,10,14".split( splitreg ); p++;
pieces[ p ] = "10,11,14,12".split( splitreg ); p++;
pieces[ p ] = "11,11,14,12".split( splitreg ); p++;
pieces[ p ] = "11,13,12,12".split( splitreg ); p++;
pieces[ p ] = "11,15,15,12".split( splitreg ); p++;
pieces[ p ] = "13,14,14,15".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

