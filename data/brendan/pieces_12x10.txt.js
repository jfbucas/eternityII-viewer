
puzzles[ nb_puzzles ] = "brendan/pieces_12x10.txt.js,Brendan 12x10".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_12x10.txt.js" ) {

board_w = 12;
board_h = 10;


pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,3,1".split( splitreg ); p++;
pieces[ p ] = "0,0,3,4".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,1,6,1".split( splitreg ); p++;
pieces[ p ] = "0,1,7,2".split( splitreg ); p++;
pieces[ p ] = "0,1,8,3".split( splitreg ); p++;
pieces[ p ] = "0,1,9,1".split( splitreg ); p++;
pieces[ p ] = "0,1,9,3".split( splitreg ); p++;
pieces[ p ] = "0,1,10,3".split( splitreg ); p++;
pieces[ p ] = "0,1,11,2".split( splitreg ); p++;
pieces[ p ] = "0,1,12,4".split( splitreg ); p++;
pieces[ p ] = "0,1,13,1".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,5,2".split( splitreg ); p++;
pieces[ p ] = "0,2,5,4".split( splitreg ); p++;
pieces[ p ] = "0,2,6,1".split( splitreg ); p++;
pieces[ p ] = "0,2,6,3".split( splitreg ); p++;
pieces[ p ] = "0,2,8,4".split( splitreg ); p++;
pieces[ p ] = "0,2,11,3".split( splitreg ); p++;
pieces[ p ] = "0,2,15,1".split( splitreg ); p++;
pieces[ p ] = "0,2,15,2".split( splitreg ); p++;
pieces[ p ] = "0,2,15,4".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,4".split( splitreg ); p++;
pieces[ p ] = "0,3,7,2".split( splitreg ); p++;
pieces[ p ] = "0,3,12,1".split( splitreg ); p++;
pieces[ p ] = "0,3,12,3".split( splitreg ); p++;
pieces[ p ] = "0,3,13,3".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,5,2".split( splitreg ); p++;
pieces[ p ] = "0,4,6,1".split( splitreg ); p++;
pieces[ p ] = "0,4,7,4".split( splitreg ); p++;
pieces[ p ] = "0,4,8,3".split( splitreg ); p++;
pieces[ p ] = "0,4,8,4".split( splitreg ); p++;
pieces[ p ] = "0,4,9,3".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,12,2".split( splitreg ); p++;
pieces[ p ] = "0,4,14,4".split( splitreg ); p++;
pieces[ p ] = "5,5,7,12".split( splitreg ); p++;
pieces[ p ] = "5,5,9,9".split( splitreg ); p++;
pieces[ p ] = "5,5,13,6".split( splitreg ); p++;
pieces[ p ] = "5,5,14,9".split( splitreg ); p++;
pieces[ p ] = "5,5,15,15".split( splitreg ); p++;
pieces[ p ] = "5,6,8,11".split( splitreg ); p++;
pieces[ p ] = "5,6,11,8".split( splitreg ); p++;
pieces[ p ] = "5,6,15,12".split( splitreg ); p++;
pieces[ p ] = "5,7,10,7".split( splitreg ); p++;
pieces[ p ] = "5,7,13,15".split( splitreg ); p++;
pieces[ p ] = "5,7,15,15".split( splitreg ); p++;
pieces[ p ] = "5,9,9,9".split( splitreg ); p++;
pieces[ p ] = "5,9,12,9".split( splitreg ); p++;
pieces[ p ] = "5,11,10,6".split( splitreg ); p++;
pieces[ p ] = "5,11,11,15".split( splitreg ); p++;
pieces[ p ] = "5,11,14,11".split( splitreg ); p++;
pieces[ p ] = "5,12,9,14".split( splitreg ); p++;
pieces[ p ] = "5,12,14,15".split( splitreg ); p++;
pieces[ p ] = "5,13,9,13".split( splitreg ); p++;
pieces[ p ] = "5,13,15,13".split( splitreg ); p++;
pieces[ p ] = "5,14,9,6".split( splitreg ); p++;
pieces[ p ] = "5,14,11,6".split( splitreg ); p++;
pieces[ p ] = "5,14,11,10".split( splitreg ); p++;
pieces[ p ] = "5,14,14,9".split( splitreg ); p++;
pieces[ p ] = "5,14,14,15".split( splitreg ); p++;
pieces[ p ] = "5,15,11,14".split( splitreg ); p++;
pieces[ p ] = "6,7,11,8".split( splitreg ); p++;
pieces[ p ] = "6,8,12,8".split( splitreg ); p++;
pieces[ p ] = "6,8,14,7".split( splitreg ); p++;
pieces[ p ] = "6,9,12,11".split( splitreg ); p++;
pieces[ p ] = "6,10,8,11".split( splitreg ); p++;
pieces[ p ] = "6,11,9,15".split( splitreg ); p++;
pieces[ p ] = "6,11,12,8".split( splitreg ); p++;
pieces[ p ] = "6,11,13,14".split( splitreg ); p++;
pieces[ p ] = "6,12,12,14".split( splitreg ); p++;
pieces[ p ] = "6,12,13,7".split( splitreg ); p++;
pieces[ p ] = "6,13,7,13".split( splitreg ); p++;
pieces[ p ] = "6,13,9,7".split( splitreg ); p++;
pieces[ p ] = "6,13,9,12".split( splitreg ); p++;
pieces[ p ] = "6,13,13,12".split( splitreg ); p++;
pieces[ p ] = "6,14,8,15".split( splitreg ); p++;
pieces[ p ] = "6,14,11,10".split( splitreg ); p++;
pieces[ p ] = "6,14,12,15".split( splitreg ); p++;
pieces[ p ] = "6,14,14,8".split( splitreg ); p++;
pieces[ p ] = "6,15,11,12".split( splitreg ); p++;
pieces[ p ] = "6,15,13,10".split( splitreg ); p++;
pieces[ p ] = "6,15,15,15".split( splitreg ); p++;
pieces[ p ] = "7,7,8,10".split( splitreg ); p++;
pieces[ p ] = "7,7,15,9".split( splitreg ); p++;
pieces[ p ] = "7,8,7,10".split( splitreg ); p++;
pieces[ p ] = "7,8,11,9".split( splitreg ); p++;
pieces[ p ] = "7,8,14,8".split( splitreg ); p++;
pieces[ p ] = "7,8,15,14".split( splitreg ); p++;
pieces[ p ] = "7,9,8,15".split( splitreg ); p++;
pieces[ p ] = "7,10,8,14".split( splitreg ); p++;
pieces[ p ] = "7,10,12,9".split( splitreg ); p++;
pieces[ p ] = "7,10,13,8".split( splitreg ); p++;
pieces[ p ] = "7,11,11,13".split( splitreg ); p++;
pieces[ p ] = "7,12,10,9".split( splitreg ); p++;
pieces[ p ] = "7,12,14,11".split( splitreg ); p++;
pieces[ p ] = "7,13,10,14".split( splitreg ); p++;
pieces[ p ] = "7,13,14,14".split( splitreg ); p++;
pieces[ p ] = "7,15,12,11".split( splitreg ); p++;
pieces[ p ] = "8,8,10,9".split( splitreg ); p++;
pieces[ p ] = "8,8,15,15".split( splitreg ); p++;
pieces[ p ] = "8,9,10,9".split( splitreg ); p++;
pieces[ p ] = "8,10,9,12".split( splitreg ); p++;
pieces[ p ] = "8,12,12,11".split( splitreg ); p++;
pieces[ p ] = "8,13,10,13".split( splitreg ); p++;
pieces[ p ] = "8,14,10,10".split( splitreg ); p++;
pieces[ p ] = "9,9,13,10".split( splitreg ); p++;
pieces[ p ] = "9,10,10,12".split( splitreg ); p++;
pieces[ p ] = "9,10,15,10".split( splitreg ); p++;
pieces[ p ] = "10,11,10,12".split( splitreg ); p++;
pieces[ p ] = "10,11,11,14".split( splitreg ); p++;
pieces[ p ] = "10,12,10,13".split( splitreg ); p++;
pieces[ p ] = "10,13,15,13".split( splitreg ); p++;
pieces[ p ] = "11,11,13,15".split( splitreg ); p++;
pieces[ p ] = "11,13,12,14".split( splitreg ); p++;
pieces[ p ] = "12,12,13,13".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

