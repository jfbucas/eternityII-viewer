
puzzles[ nb_puzzles ] = "brendan/pieces_15x08.txt.js,Brendan 15x08".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_15x08.txt.js" ) {

board_w = 15;
board_h = 8;


pieces[ p ] = "0,0,1,2".split( splitreg ); p++;
pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,0,4,1".split( splitreg ); p++;
pieces[ p ] = "0,1,7,3".split( splitreg ); p++;
pieces[ p ] = "0,1,8,2".split( splitreg ); p++;
pieces[ p ] = "0,1,9,4".split( splitreg ); p++;
pieces[ p ] = "0,1,11,4".split( splitreg ); p++;
pieces[ p ] = "0,1,12,4".split( splitreg ); p++;
pieces[ p ] = "0,1,13,1".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,4".split( splitreg ); p++;
pieces[ p ] = "0,1,15,2".split( splitreg ); p++;
pieces[ p ] = "0,2,5,3".split( splitreg ); p++;
pieces[ p ] = "0,2,6,2".split( splitreg ); p++;
pieces[ p ] = "0,2,6,4".split( splitreg ); p++;
pieces[ p ] = "0,2,8,3".split( splitreg ); p++;
pieces[ p ] = "0,2,9,2".split( splitreg ); p++;
pieces[ p ] = "0,2,11,2".split( splitreg ); p++;
pieces[ p ] = "0,2,13,1".split( splitreg ); p++;
pieces[ p ] = "0,2,14,2".split( splitreg ); p++;
pieces[ p ] = "0,2,15,1".split( splitreg ); p++;
pieces[ p ] = "0,2,15,4".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,3".split( splitreg ); p++;
pieces[ p ] = "0,3,6,4".split( splitreg ); p++;
pieces[ p ] = "0,3,7,1".split( splitreg ); p++;
pieces[ p ] = "0,3,7,3".split( splitreg ); p++;
pieces[ p ] = "0,3,9,2".split( splitreg ); p++;
pieces[ p ] = "0,3,11,1".split( splitreg ); p++;
pieces[ p ] = "0,3,12,1".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,4,5,1".split( splitreg ); p++;
pieces[ p ] = "0,4,6,1".split( splitreg ); p++;
pieces[ p ] = "0,4,7,2".split( splitreg ); p++;
pieces[ p ] = "0,4,9,3".split( splitreg ); p++;
pieces[ p ] = "0,4,10,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,11,4".split( splitreg ); p++;
pieces[ p ] = "0,4,12,4".split( splitreg ); p++;
pieces[ p ] = "0,4,14,3".split( splitreg ); p++;
pieces[ p ] = "5,5,6,9".split( splitreg ); p++;
pieces[ p ] = "5,6,5,12".split( splitreg ); p++;
pieces[ p ] = "5,6,12,6".split( splitreg ); p++;
pieces[ p ] = "5,7,6,6".split( splitreg ); p++;
pieces[ p ] = "5,7,11,13".split( splitreg ); p++;
pieces[ p ] = "5,7,12,8".split( splitreg ); p++;
pieces[ p ] = "5,8,7,11".split( splitreg ); p++;
pieces[ p ] = "5,8,12,7".split( splitreg ); p++;
pieces[ p ] = "5,9,11,11".split( splitreg ); p++;
pieces[ p ] = "5,10,6,11".split( splitreg ); p++;
pieces[ p ] = "5,10,7,7".split( splitreg ); p++;
pieces[ p ] = "5,10,9,7".split( splitreg ); p++;
pieces[ p ] = "5,10,12,11".split( splitreg ); p++;
pieces[ p ] = "5,10,15,6".split( splitreg ); p++;
pieces[ p ] = "5,11,10,7".split( splitreg ); p++;
pieces[ p ] = "5,11,14,14".split( splitreg ); p++;
pieces[ p ] = "5,12,6,9".split( splitreg ); p++;
pieces[ p ] = "5,12,13,12".split( splitreg ); p++;
pieces[ p ] = "5,12,13,15".split( splitreg ); p++;
pieces[ p ] = "5,13,8,7".split( splitreg ); p++;
pieces[ p ] = "5,13,9,15".split( splitreg ); p++;
pieces[ p ] = "5,13,14,6".split( splitreg ); p++;
pieces[ p ] = "5,14,8,7".split( splitreg ); p++;
pieces[ p ] = "5,14,11,13".split( splitreg ); p++;
pieces[ p ] = "5,14,12,13".split( splitreg ); p++;
pieces[ p ] = "5,14,13,8".split( splitreg ); p++;
pieces[ p ] = "5,15,8,6".split( splitreg ); p++;
pieces[ p ] = "5,15,8,15".split( splitreg ); p++;
pieces[ p ] = "6,6,10,12".split( splitreg ); p++;
pieces[ p ] = "6,7,11,15".split( splitreg ); p++;
pieces[ p ] = "6,7,15,10".split( splitreg ); p++;
pieces[ p ] = "6,8,14,12".split( splitreg ); p++;
pieces[ p ] = "6,10,7,8".split( splitreg ); p++;
pieces[ p ] = "6,10,11,11".split( splitreg ); p++;
pieces[ p ] = "6,10,13,13".split( splitreg ); p++;
pieces[ p ] = "6,10,15,7".split( splitreg ); p++;
pieces[ p ] = "6,11,9,10".split( splitreg ); p++;
pieces[ p ] = "6,11,9,14".split( splitreg ); p++;
pieces[ p ] = "6,11,10,13".split( splitreg ); p++;
pieces[ p ] = "6,11,15,15".split( splitreg ); p++;
pieces[ p ] = "6,12,15,12".split( splitreg ); p++;
pieces[ p ] = "6,13,13,12".split( splitreg ); p++;
pieces[ p ] = "7,8,7,12".split( splitreg ); p++;
pieces[ p ] = "7,8,11,11".split( splitreg ); p++;
pieces[ p ] = "7,9,8,9".split( splitreg ); p++;
pieces[ p ] = "7,9,9,14".split( splitreg ); p++;
pieces[ p ] = "7,9,10,15".split( splitreg ); p++;
pieces[ p ] = "7,10,7,13".split( splitreg ); p++;
pieces[ p ] = "7,10,8,8".split( splitreg ); p++;
pieces[ p ] = "7,10,11,8".split( splitreg ); p++;
pieces[ p ] = "7,13,10,13".split( splitreg ); p++;
pieces[ p ] = "7,13,14,9".split( splitreg ); p++;
pieces[ p ] = "7,15,12,9".split( splitreg ); p++;
pieces[ p ] = "8,9,9,13".split( splitreg ); p++;
pieces[ p ] = "8,9,13,14".split( splitreg ); p++;
pieces[ p ] = "8,10,13,14".split( splitreg ); p++;
pieces[ p ] = "8,11,13,10".split( splitreg ); p++;
pieces[ p ] = "8,12,12,9".split( splitreg ); p++;
pieces[ p ] = "8,12,13,10".split( splitreg ); p++;
pieces[ p ] = "8,13,10,13".split( splitreg ); p++;
pieces[ p ] = "8,13,12,10".split( splitreg ); p++;
pieces[ p ] = "8,14,12,11".split( splitreg ); p++;
pieces[ p ] = "8,15,10,11".split( splitreg ); p++;
pieces[ p ] = "8,15,12,14".split( splitreg ); p++;
pieces[ p ] = "8,15,14,9".split( splitreg ); p++;
pieces[ p ] = "8,15,14,14".split( splitreg ); p++;
pieces[ p ] = "8,15,15,10".split( splitreg ); p++;
pieces[ p ] = "9,9,9,12".split( splitreg ); p++;
pieces[ p ] = "9,9,13,10".split( splitreg ); p++;
pieces[ p ] = "9,11,12,11".split( splitreg ); p++;
pieces[ p ] = "9,14,14,14".split( splitreg ); p++;
pieces[ p ] = "9,14,15,15".split( splitreg ); p++;
pieces[ p ] = "9,15,15,13".split( splitreg ); p++;
pieces[ p ] = "10,10,11,12".split( splitreg ); p++;
pieces[ p ] = "10,11,15,11".split( splitreg ); p++;
pieces[ p ] = "11,14,12,15".split( splitreg ); p++;
pieces[ p ] = "12,14,13,15".split( splitreg ); p++;
pieces[ p ] = "12,14,14,14".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

