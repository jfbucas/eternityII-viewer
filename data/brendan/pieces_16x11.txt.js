
puzzles[ nb_puzzles ] = "brendan/pieces_16x11.txt.js,Brendan 16x11".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_16x11.txt.js" ) {

board_w = 16;
board_h = 11;


pieces[ p ] = "0,0,2,5".split( splitreg ); p++;
pieces[ p ] = "0,0,3,4".split( splitreg ); p++;
pieces[ p ] = "0,0,5,1".split( splitreg ); p++;
pieces[ p ] = "0,0,5,2".split( splitreg ); p++;
pieces[ p ] = "0,1,7,1".split( splitreg ); p++;
pieces[ p ] = "0,1,9,2".split( splitreg ); p++;
pieces[ p ] = "0,1,10,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,3".split( splitreg ); p++;
pieces[ p ] = "0,1,16,1".split( splitreg ); p++;
pieces[ p ] = "0,1,17,5".split( splitreg ); p++;
pieces[ p ] = "0,1,18,4".split( splitreg ); p++;
pieces[ p ] = "0,1,18,5".split( splitreg ); p++;
pieces[ p ] = "0,1,19,3".split( splitreg ); p++;
pieces[ p ] = "0,1,19,4".split( splitreg ); p++;
pieces[ p ] = "0,2,6,1".split( splitreg ); p++;
pieces[ p ] = "0,2,7,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,10,4".split( splitreg ); p++;
pieces[ p ] = "0,2,11,5".split( splitreg ); p++;
pieces[ p ] = "0,2,12,1".split( splitreg ); p++;
pieces[ p ] = "0,2,14,2".split( splitreg ); p++;
pieces[ p ] = "0,2,16,5".split( splitreg ); p++;
pieces[ p ] = "0,2,18,3".split( splitreg ); p++;
pieces[ p ] = "0,3,6,2".split( splitreg ); p++;
pieces[ p ] = "0,3,8,3".split( splitreg ); p++;
pieces[ p ] = "0,3,9,1".split( splitreg ); p++;
pieces[ p ] = "0,3,9,4".split( splitreg ); p++;
pieces[ p ] = "0,3,9,5".split( splitreg ); p++;
pieces[ p ] = "0,3,14,5".split( splitreg ); p++;
pieces[ p ] = "0,3,15,3".split( splitreg ); p++;
pieces[ p ] = "0,3,16,1".split( splitreg ); p++;
pieces[ p ] = "0,3,19,2".split( splitreg ); p++;
pieces[ p ] = "0,4,7,1".split( splitreg ); p++;
pieces[ p ] = "0,4,11,4".split( splitreg ); p++;
pieces[ p ] = "0,4,11,5".split( splitreg ); p++;
pieces[ p ] = "0,4,12,5".split( splitreg ); p++;
pieces[ p ] = "0,4,13,4".split( splitreg ); p++;
pieces[ p ] = "0,4,14,2".split( splitreg ); p++;
pieces[ p ] = "0,4,16,2".split( splitreg ); p++;
pieces[ p ] = "0,4,18,1".split( splitreg ); p++;
pieces[ p ] = "0,4,18,3".split( splitreg ); p++;
pieces[ p ] = "0,4,19,5".split( splitreg ); p++;
pieces[ p ] = "0,5,8,4".split( splitreg ); p++;
pieces[ p ] = "0,5,10,4".split( splitreg ); p++;
pieces[ p ] = "0,5,11,1".split( splitreg ); p++;
pieces[ p ] = "0,5,11,2".split( splitreg ); p++;
pieces[ p ] = "0,5,12,3".split( splitreg ); p++;
pieces[ p ] = "0,5,14,4".split( splitreg ); p++;
pieces[ p ] = "0,5,19,2".split( splitreg ); p++;
pieces[ p ] = "0,5,19,3".split( splitreg ); p++;
pieces[ p ] = "6,6,6,14".split( splitreg ); p++;
pieces[ p ] = "6,6,6,18".split( splitreg ); p++;
pieces[ p ] = "6,6,10,15".split( splitreg ); p++;
pieces[ p ] = "6,6,13,19".split( splitreg ); p++;
pieces[ p ] = "6,7,10,7".split( splitreg ); p++;
pieces[ p ] = "6,7,17,12".split( splitreg ); p++;
pieces[ p ] = "6,8,11,11".split( splitreg ); p++;
pieces[ p ] = "6,8,14,18".split( splitreg ); p++;
pieces[ p ] = "6,9,16,14".split( splitreg ); p++;
pieces[ p ] = "6,10,11,15".split( splitreg ); p++;
pieces[ p ] = "6,10,12,10".split( splitreg ); p++;
pieces[ p ] = "6,10,16,12".split( splitreg ); p++;
pieces[ p ] = "6,10,17,17".split( splitreg ); p++;
pieces[ p ] = "6,11,18,14".split( splitreg ); p++;
pieces[ p ] = "6,12,10,15".split( splitreg ); p++;
pieces[ p ] = "6,12,17,7".split( splitreg ); p++;
pieces[ p ] = "6,13,7,10".split( splitreg ); p++;
pieces[ p ] = "6,13,13,11".split( splitreg ); p++;
pieces[ p ] = "6,14,18,15".split( splitreg ); p++;
pieces[ p ] = "6,15,12,14".split( splitreg ); p++;
pieces[ p ] = "6,15,14,17".split( splitreg ); p++;
pieces[ p ] = "6,15,15,17".split( splitreg ); p++;
pieces[ p ] = "6,15,19,7".split( splitreg ); p++;
pieces[ p ] = "6,15,19,9".split( splitreg ); p++;
pieces[ p ] = "6,16,11,8".split( splitreg ); p++;
pieces[ p ] = "6,16,12,16".split( splitreg ); p++;
pieces[ p ] = "6,16,13,10".split( splitreg ); p++;
pieces[ p ] = "6,16,14,10".split( splitreg ); p++;
pieces[ p ] = "6,18,15,12".split( splitreg ); p++;
pieces[ p ] = "6,18,17,14".split( splitreg ); p++;
pieces[ p ] = "6,18,19,10".split( splitreg ); p++;
pieces[ p ] = "6,19,8,8".split( splitreg ); p++;
pieces[ p ] = "7,7,12,11".split( splitreg ); p++;
pieces[ p ] = "7,7,16,9".split( splitreg ); p++;
pieces[ p ] = "7,7,18,13".split( splitreg ); p++;
pieces[ p ] = "7,8,7,11".split( splitreg ); p++;
pieces[ p ] = "7,8,10,9".split( splitreg ); p++;
pieces[ p ] = "7,8,12,9".split( splitreg ); p++;
pieces[ p ] = "7,8,14,9".split( splitreg ); p++;
pieces[ p ] = "7,8,17,19".split( splitreg ); p++;
pieces[ p ] = "7,10,7,17".split( splitreg ); p++;
pieces[ p ] = "7,10,13,10".split( splitreg ); p++;
pieces[ p ] = "7,10,14,18".split( splitreg ); p++;
pieces[ p ] = "7,10,15,10".split( splitreg ); p++;
pieces[ p ] = "7,11,8,13".split( splitreg ); p++;
pieces[ p ] = "7,11,16,17".split( splitreg ); p++;
pieces[ p ] = "7,12,11,13".split( splitreg ); p++;
pieces[ p ] = "7,12,15,15".split( splitreg ); p++;
pieces[ p ] = "7,13,12,8".split( splitreg ); p++;
pieces[ p ] = "7,13,13,10".split( splitreg ); p++;
pieces[ p ] = "7,14,19,14".split( splitreg ); p++;
pieces[ p ] = "7,15,9,17".split( splitreg ); p++;
pieces[ p ] = "7,17,12,9".split( splitreg ); p++;
pieces[ p ] = "7,17,13,10".split( splitreg ); p++;
pieces[ p ] = "7,18,9,13".split( splitreg ); p++;
pieces[ p ] = "7,19,11,19".split( splitreg ); p++;
pieces[ p ] = "7,19,14,8".split( splitreg ); p++;
pieces[ p ] = "8,8,12,9".split( splitreg ); p++;
pieces[ p ] = "8,8,17,13".split( splitreg ); p++;
pieces[ p ] = "8,8,17,19".split( splitreg ); p++;
pieces[ p ] = "8,8,18,15".split( splitreg ); p++;
pieces[ p ] = "8,9,18,9".split( splitreg ); p++;
pieces[ p ] = "8,9,18,14".split( splitreg ); p++;
pieces[ p ] = "8,10,11,12".split( splitreg ); p++;
pieces[ p ] = "8,10,13,9".split( splitreg ); p++;
pieces[ p ] = "8,10,14,17".split( splitreg ); p++;
pieces[ p ] = "8,11,12,10".split( splitreg ); p++;
pieces[ p ] = "8,11,16,19".split( splitreg ); p++;
pieces[ p ] = "8,12,18,16".split( splitreg ); p++;
pieces[ p ] = "8,16,9,15".split( splitreg ); p++;
pieces[ p ] = "8,16,12,13".split( splitreg ); p++;
pieces[ p ] = "8,16,15,17".split( splitreg ); p++;
pieces[ p ] = "8,17,12,13".split( splitreg ); p++;
pieces[ p ] = "8,17,15,9".split( splitreg ); p++;
pieces[ p ] = "8,17,18,13".split( splitreg ); p++;
pieces[ p ] = "8,18,15,11".split( splitreg ); p++;
pieces[ p ] = "8,18,18,13".split( splitreg ); p++;
pieces[ p ] = "8,18,18,17".split( splitreg ); p++;
pieces[ p ] = "9,9,12,16".split( splitreg ); p++;
pieces[ p ] = "9,9,12,19".split( splitreg ); p++;
pieces[ p ] = "9,10,10,16".split( splitreg ); p++;
pieces[ p ] = "9,10,15,11".split( splitreg ); p++;
pieces[ p ] = "9,10,17,11".split( splitreg ); p++;
pieces[ p ] = "9,10,18,19".split( splitreg ); p++;
pieces[ p ] = "9,11,12,15".split( splitreg ); p++;
pieces[ p ] = "9,11,15,19".split( splitreg ); p++;
pieces[ p ] = "9,12,17,19".split( splitreg ); p++;
pieces[ p ] = "9,14,11,11".split( splitreg ); p++;
pieces[ p ] = "9,14,11,13".split( splitreg ); p++;
pieces[ p ] = "9,14,13,19".split( splitreg ); p++;
pieces[ p ] = "9,14,15,13".split( splitreg ); p++;
pieces[ p ] = "9,15,12,14".split( splitreg ); p++;
pieces[ p ] = "9,16,13,13".split( splitreg ); p++;
pieces[ p ] = "9,16,19,12".split( splitreg ); p++;
pieces[ p ] = "9,17,18,16".split( splitreg ); p++;
pieces[ p ] = "9,18,19,13".split( splitreg ); p++;
pieces[ p ] = "10,11,10,18".split( splitreg ); p++;
pieces[ p ] = "10,13,11,16".split( splitreg ); p++;
pieces[ p ] = "10,14,16,19".split( splitreg ); p++;
pieces[ p ] = "10,15,15,13".split( splitreg ); p++;
pieces[ p ] = "10,15,19,13".split( splitreg ); p++;
pieces[ p ] = "10,19,14,15".split( splitreg ); p++;
pieces[ p ] = "11,12,12,17".split( splitreg ); p++;
pieces[ p ] = "11,13,13,18".split( splitreg ); p++;
pieces[ p ] = "11,14,17,12".split( splitreg ); p++;
pieces[ p ] = "11,15,15,12".split( splitreg ); p++;
pieces[ p ] = "11,16,12,12".split( splitreg ); p++;
pieces[ p ] = "11,16,12,18".split( splitreg ); p++;
pieces[ p ] = "11,16,13,14".split( splitreg ); p++;
pieces[ p ] = "11,16,16,13".split( splitreg ); p++;
pieces[ p ] = "11,18,19,16".split( splitreg ); p++;
pieces[ p ] = "11,18,19,17".split( splitreg ); p++;
pieces[ p ] = "12,13,17,19".split( splitreg ); p++;
pieces[ p ] = "12,14,18,14".split( splitreg ); p++;
pieces[ p ] = "12,16,14,14".split( splitreg ); p++;
pieces[ p ] = "12,19,13,13".split( splitreg ); p++;
pieces[ p ] = "13,17,15,14".split( splitreg ); p++;
pieces[ p ] = "13,17,16,14".split( splitreg ); p++;
pieces[ p ] = "13,19,16,17".split( splitreg ); p++;
pieces[ p ] = "14,15,14,17".split( splitreg ); p++;
pieces[ p ] = "14,16,15,15".split( splitreg ); p++;
pieces[ p ] = "14,17,17,16".split( splitreg ); p++;
pieces[ p ] = "15,15,18,19".split( splitreg ); p++;
pieces[ p ] = "16,17,18,19".split( splitreg ); p++;
pieces[ p ] = "16,19,18,19".split( splitreg ); p++;
pieces[ p ] = "17,17,18,19".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

