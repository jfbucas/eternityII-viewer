
puzzles[ nb_puzzles ] = "brendan/pieces_19x14.txt.js,Brendan 19x14".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_19x14.txt.js" ) {

board_w = 19;
board_h = 14;


pieces[ p ] = "0,0,1,5".split( splitreg ); p++;
pieces[ p ] = "0,0,3,4".split( splitreg ); p++;
pieces[ p ] = "0,0,4,5".split( splitreg ); p++;
pieces[ p ] = "0,0,5,2".split( splitreg ); p++;
pieces[ p ] = "0,1,6,5".split( splitreg ); p++;
pieces[ p ] = "0,1,7,4".split( splitreg ); p++;
pieces[ p ] = "0,1,10,2".split( splitreg ); p++;
pieces[ p ] = "0,1,13,1".split( splitreg ); p++;
pieces[ p ] = "0,1,13,4".split( splitreg ); p++;
pieces[ p ] = "0,1,15,5".split( splitreg ); p++;
pieces[ p ] = "0,1,16,3".split( splitreg ); p++;
pieces[ p ] = "0,1,16,5".split( splitreg ); p++;
pieces[ p ] = "0,1,17,1".split( splitreg ); p++;
pieces[ p ] = "0,1,20,5".split( splitreg ); p++;
pieces[ p ] = "0,1,21,4".split( splitreg ); p++;
pieces[ p ] = "0,1,22,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,1".split( splitreg ); p++;
pieces[ p ] = "0,2,8,4".split( splitreg ); p++;
pieces[ p ] = "0,2,8,5".split( splitreg ); p++;
pieces[ p ] = "0,2,9,4".split( splitreg ); p++;
pieces[ p ] = "0,2,9,5".split( splitreg ); p++;
pieces[ p ] = "0,2,10,2".split( splitreg ); p++;
pieces[ p ] = "0,2,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,14,4".split( splitreg ); p++;
pieces[ p ] = "0,2,15,4".split( splitreg ); p++;
pieces[ p ] = "0,2,17,3".split( splitreg ); p++;
pieces[ p ] = "0,2,18,1".split( splitreg ); p++;
pieces[ p ] = "0,2,19,2".split( splitreg ); p++;
pieces[ p ] = "0,2,20,4".split( splitreg ); p++;
pieces[ p ] = "0,3,8,3".split( splitreg ); p++;
pieces[ p ] = "0,3,8,4".split( splitreg ); p++;
pieces[ p ] = "0,3,11,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,1".split( splitreg ); p++;
pieces[ p ] = "0,3,14,5".split( splitreg ); p++;
pieces[ p ] = "0,3,15,2".split( splitreg ); p++;
pieces[ p ] = "0,3,17,1".split( splitreg ); p++;
pieces[ p ] = "0,3,18,5".split( splitreg ); p++;
pieces[ p ] = "0,3,20,1".split( splitreg ); p++;
pieces[ p ] = "0,3,21,3".split( splitreg ); p++;
pieces[ p ] = "0,3,21,5".split( splitreg ); p++;
pieces[ p ] = "0,4,10,3".split( splitreg ); p++;
pieces[ p ] = "0,4,11,2".split( splitreg ); p++;
pieces[ p ] = "0,4,11,3".split( splitreg ); p++;
pieces[ p ] = "0,4,11,5".split( splitreg ); p++;
pieces[ p ] = "0,4,12,2".split( splitreg ); p++;
pieces[ p ] = "0,4,12,4".split( splitreg ); p++;
pieces[ p ] = "0,4,14,4".split( splitreg ); p++;
pieces[ p ] = "0,4,16,3".split( splitreg ); p++;
pieces[ p ] = "0,4,18,1".split( splitreg ); p++;
pieces[ p ] = "0,4,20,1".split( splitreg ); p++;
pieces[ p ] = "0,4,20,3".split( splitreg ); p++;
pieces[ p ] = "0,5,6,1".split( splitreg ); p++;
pieces[ p ] = "0,5,6,2".split( splitreg ); p++;
pieces[ p ] = "0,5,7,3".split( splitreg ); p++;
pieces[ p ] = "0,5,11,1".split( splitreg ); p++;
pieces[ p ] = "0,5,16,1".split( splitreg ); p++;
pieces[ p ] = "0,5,16,3".split( splitreg ); p++;
pieces[ p ] = "0,5,17,2".split( splitreg ); p++;
pieces[ p ] = "0,5,18,1".split( splitreg ); p++;
pieces[ p ] = "0,5,18,2".split( splitreg ); p++;
pieces[ p ] = "0,5,20,2".split( splitreg ); p++;
pieces[ p ] = "0,5,20,3".split( splitreg ); p++;
pieces[ p ] = "6,6,7,14".split( splitreg ); p++;
pieces[ p ] = "6,6,20,8".split( splitreg ); p++;
pieces[ p ] = "6,6,20,16".split( splitreg ); p++;
pieces[ p ] = "6,7,12,19".split( splitreg ); p++;
pieces[ p ] = "6,7,13,7".split( splitreg ); p++;
pieces[ p ] = "6,7,13,9".split( splitreg ); p++;
pieces[ p ] = "6,7,16,16".split( splitreg ); p++;
pieces[ p ] = "6,7,20,7".split( splitreg ); p++;
pieces[ p ] = "6,8,6,12".split( splitreg ); p++;
pieces[ p ] = "6,8,7,11".split( splitreg ); p++;
pieces[ p ] = "6,8,8,8".split( splitreg ); p++;
pieces[ p ] = "6,8,12,13".split( splitreg ); p++;
pieces[ p ] = "6,9,10,22".split( splitreg ); p++;
pieces[ p ] = "6,9,12,9".split( splitreg ); p++;
pieces[ p ] = "6,9,16,19".split( splitreg ); p++;
pieces[ p ] = "6,10,11,19".split( splitreg ); p++;
pieces[ p ] = "6,10,13,14".split( splitreg ); p++;
pieces[ p ] = "6,11,18,19".split( splitreg ); p++;
pieces[ p ] = "6,11,19,12".split( splitreg ); p++;
pieces[ p ] = "6,12,6,20".split( splitreg ); p++;
pieces[ p ] = "6,12,8,9".split( splitreg ); p++;
pieces[ p ] = "6,12,20,14".split( splitreg ); p++;
pieces[ p ] = "6,12,21,11".split( splitreg ); p++;
pieces[ p ] = "6,13,7,11".split( splitreg ); p++;
pieces[ p ] = "6,13,11,14".split( splitreg ); p++;
pieces[ p ] = "6,13,14,13".split( splitreg ); p++;
pieces[ p ] = "6,13,18,22".split( splitreg ); p++;
pieces[ p ] = "6,14,9,10".split( splitreg ); p++;
pieces[ p ] = "6,15,18,22".split( splitreg ); p++;
pieces[ p ] = "6,16,7,13".split( splitreg ); p++;
pieces[ p ] = "6,17,9,9".split( splitreg ); p++;
pieces[ p ] = "6,17,15,15".split( splitreg ); p++;
pieces[ p ] = "6,17,21,7".split( splitreg ); p++;
pieces[ p ] = "6,17,21,22".split( splitreg ); p++;
pieces[ p ] = "6,19,19,19".split( splitreg ); p++;
pieces[ p ] = "6,20,8,16".split( splitreg ); p++;
pieces[ p ] = "6,20,9,13".split( splitreg ); p++;
pieces[ p ] = "6,20,12,13".split( splitreg ); p++;
pieces[ p ] = "6,21,16,7".split( splitreg ); p++;
pieces[ p ] = "6,22,9,10".split( splitreg ); p++;
pieces[ p ] = "6,22,11,21".split( splitreg ); p++;
pieces[ p ] = "6,22,13,17".split( splitreg ); p++;
pieces[ p ] = "6,22,17,13".split( splitreg ); p++;
pieces[ p ] = "6,22,19,20".split( splitreg ); p++;
pieces[ p ] = "7,7,21,13".split( splitreg ); p++;
pieces[ p ] = "7,9,8,17".split( splitreg ); p++;
pieces[ p ] = "7,9,15,10".split( splitreg ); p++;
pieces[ p ] = "7,9,21,18".split( splitreg ); p++;
pieces[ p ] = "7,10,7,16".split( splitreg ); p++;
pieces[ p ] = "7,10,13,8".split( splitreg ); p++;
pieces[ p ] = "7,10,22,8".split( splitreg ); p++;
pieces[ p ] = "7,11,10,12".split( splitreg ); p++;
pieces[ p ] = "7,11,16,9".split( splitreg ); p++;
pieces[ p ] = "7,11,20,17".split( splitreg ); p++;
pieces[ p ] = "7,12,14,22".split( splitreg ); p++;
pieces[ p ] = "7,12,16,11".split( splitreg ); p++;
pieces[ p ] = "7,12,16,14".split( splitreg ); p++;
pieces[ p ] = "7,12,18,11".split( splitreg ); p++;
pieces[ p ] = "7,13,15,14".split( splitreg ); p++;
pieces[ p ] = "7,14,17,22".split( splitreg ); p++;
pieces[ p ] = "7,14,19,21".split( splitreg ); p++;
pieces[ p ] = "7,15,11,15".split( splitreg ); p++;
pieces[ p ] = "7,15,17,8".split( splitreg ); p++;
pieces[ p ] = "7,15,20,15".split( splitreg ); p++;
pieces[ p ] = "7,16,13,8".split( splitreg ); p++;
pieces[ p ] = "7,16,22,19".split( splitreg ); p++;
pieces[ p ] = "7,17,22,14".split( splitreg ); p++;
pieces[ p ] = "7,18,17,10".split( splitreg ); p++;
pieces[ p ] = "7,18,20,13".split( splitreg ); p++;
pieces[ p ] = "7,19,14,17".split( splitreg ); p++;
pieces[ p ] = "7,20,17,17".split( splitreg ); p++;
pieces[ p ] = "7,21,9,12".split( splitreg ); p++;
pieces[ p ] = "7,21,10,13".split( splitreg ); p++;
pieces[ p ] = "7,21,14,21".split( splitreg ); p++;
pieces[ p ] = "7,21,16,19".split( splitreg ); p++;
pieces[ p ] = "7,22,17,11".split( splitreg ); p++;
pieces[ p ] = "7,22,21,12".split( splitreg ); p++;
pieces[ p ] = "7,22,21,20".split( splitreg ); p++;
pieces[ p ] = "8,9,9,12".split( splitreg ); p++;
pieces[ p ] = "8,9,12,17".split( splitreg ); p++;
pieces[ p ] = "8,9,20,15".split( splitreg ); p++;
pieces[ p ] = "8,9,22,16".split( splitreg ); p++;
pieces[ p ] = "8,10,10,10".split( splitreg ); p++;
pieces[ p ] = "8,10,10,22".split( splitreg ); p++;
pieces[ p ] = "8,10,19,18".split( splitreg ); p++;
pieces[ p ] = "8,10,22,21".split( splitreg ); p++;
pieces[ p ] = "8,11,12,13".split( splitreg ); p++;
pieces[ p ] = "8,12,11,22".split( splitreg ); p++;
pieces[ p ] = "8,12,13,17".split( splitreg ); p++;
pieces[ p ] = "8,13,21,19".split( splitreg ); p++;
pieces[ p ] = "8,14,8,22".split( splitreg ); p++;
pieces[ p ] = "8,14,10,20".split( splitreg ); p++;
pieces[ p ] = "8,14,14,19".split( splitreg ); p++;
pieces[ p ] = "8,15,11,10".split( splitreg ); p++;
pieces[ p ] = "8,16,18,18".split( splitreg ); p++;
pieces[ p ] = "8,17,10,13".split( splitreg ); p++;
pieces[ p ] = "8,17,10,15".split( splitreg ); p++;
pieces[ p ] = "8,17,16,10".split( splitreg ); p++;
pieces[ p ] = "8,18,16,18".split( splitreg ); p++;
pieces[ p ] = "8,18,21,14".split( splitreg ); p++;
pieces[ p ] = "8,19,22,21".split( splitreg ); p++;
pieces[ p ] = "8,20,15,15".split( splitreg ); p++;
pieces[ p ] = "8,20,15,16".split( splitreg ); p++;
pieces[ p ] = "8,20,17,19".split( splitreg ); p++;
pieces[ p ] = "8,20,19,13".split( splitreg ); p++;
pieces[ p ] = "8,21,12,20".split( splitreg ); p++;
pieces[ p ] = "8,21,17,17".split( splitreg ); p++;
pieces[ p ] = "8,21,22,11".split( splitreg ); p++;
pieces[ p ] = "8,22,10,9".split( splitreg ); p++;
pieces[ p ] = "8,22,10,20".split( splitreg ); p++;
pieces[ p ] = "8,22,13,15".split( splitreg ); p++;
pieces[ p ] = "9,10,9,14".split( splitreg ); p++;
pieces[ p ] = "9,10,11,11".split( splitreg ); p++;
pieces[ p ] = "9,10,11,20".split( splitreg ); p++;
pieces[ p ] = "9,10,16,15".split( splitreg ); p++;
pieces[ p ] = "9,11,12,20".split( splitreg ); p++;
pieces[ p ] = "9,11,13,18".split( splitreg ); p++;
pieces[ p ] = "9,11,15,17".split( splitreg ); p++;
pieces[ p ] = "9,12,18,15".split( splitreg ); p++;
pieces[ p ] = "9,13,17,21".split( splitreg ); p++;
pieces[ p ] = "9,13,20,17".split( splitreg ); p++;
pieces[ p ] = "9,14,19,18".split( splitreg ); p++;
pieces[ p ] = "9,15,14,21".split( splitreg ); p++;
pieces[ p ] = "9,15,22,18".split( splitreg ); p++;
pieces[ p ] = "9,16,10,10".split( splitreg ); p++;
pieces[ p ] = "9,16,12,10".split( splitreg ); p++;
pieces[ p ] = "9,16,22,10".split( splitreg ); p++;
pieces[ p ] = "9,17,15,13".split( splitreg ); p++;
pieces[ p ] = "9,17,15,19".split( splitreg ); p++;
pieces[ p ] = "9,17,21,21".split( splitreg ); p++;
pieces[ p ] = "9,18,12,20".split( splitreg ); p++;
pieces[ p ] = "9,18,13,21".split( splitreg ); p++;
pieces[ p ] = "9,18,16,11".split( splitreg ); p++;
pieces[ p ] = "9,18,19,17".split( splitreg ); p++;
pieces[ p ] = "9,19,12,19".split( splitreg ); p++;
pieces[ p ] = "9,20,17,11".split( splitreg ); p++;
pieces[ p ] = "9,21,19,19".split( splitreg ); p++;
pieces[ p ] = "9,22,21,22".split( splitreg ); p++;
pieces[ p ] = "10,12,15,12".split( splitreg ); p++;
pieces[ p ] = "10,13,22,21".split( splitreg ); p++;
pieces[ p ] = "10,16,15,13".split( splitreg ); p++;
pieces[ p ] = "10,16,19,19".split( splitreg ); p++;
pieces[ p ] = "10,16,21,19".split( splitreg ); p++;
pieces[ p ] = "10,17,10,20".split( splitreg ); p++;
pieces[ p ] = "10,17,13,21".split( splitreg ); p++;
pieces[ p ] = "10,19,20,13".split( splitreg ); p++;
pieces[ p ] = "10,20,12,22".split( splitreg ); p++;
pieces[ p ] = "10,21,18,15".split( splitreg ); p++;
pieces[ p ] = "10,22,12,17".split( splitreg ); p++;
pieces[ p ] = "10,22,18,22".split( splitreg ); p++;
pieces[ p ] = "10,22,19,16".split( splitreg ); p++;
pieces[ p ] = "10,22,21,16".split( splitreg ); p++;
pieces[ p ] = "11,11,11,17".split( splitreg ); p++;
pieces[ p ] = "11,11,14,16".split( splitreg ); p++;
pieces[ p ] = "11,11,15,18".split( splitreg ); p++;
pieces[ p ] = "11,11,17,15".split( splitreg ); p++;
pieces[ p ] = "11,12,17,18".split( splitreg ); p++;
pieces[ p ] = "11,13,17,20".split( splitreg ); p++;
pieces[ p ] = "11,13,18,14".split( splitreg ); p++;
pieces[ p ] = "11,15,18,19".split( splitreg ); p++;
pieces[ p ] = "11,15,22,14".split( splitreg ); p++;
pieces[ p ] = "11,16,16,18".split( splitreg ); p++;
pieces[ p ] = "11,18,16,19".split( splitreg ); p++;
pieces[ p ] = "11,18,21,18".split( splitreg ); p++;
pieces[ p ] = "11,18,21,19".split( splitreg ); p++;
pieces[ p ] = "11,19,20,18".split( splitreg ); p++;
pieces[ p ] = "11,20,22,22".split( splitreg ); p++;
pieces[ p ] = "12,12,15,18".split( splitreg ); p++;
pieces[ p ] = "12,12,19,22".split( splitreg ); p++;
pieces[ p ] = "12,14,15,14".split( splitreg ); p++;
pieces[ p ] = "12,15,14,15".split( splitreg ); p++;
pieces[ p ] = "12,15,19,20".split( splitreg ); p++;
pieces[ p ] = "12,15,20,16".split( splitreg ); p++;
pieces[ p ] = "12,16,15,15".split( splitreg ); p++;
pieces[ p ] = "12,17,21,13".split( splitreg ); p++;
pieces[ p ] = "12,18,14,13".split( splitreg ); p++;
pieces[ p ] = "12,19,13,14".split( splitreg ); p++;
pieces[ p ] = "12,19,15,14".split( splitreg ); p++;
pieces[ p ] = "12,20,15,14".split( splitreg ); p++;
pieces[ p ] = "12,20,19,16".split( splitreg ); p++;
pieces[ p ] = "12,21,15,20".split( splitreg ); p++;
pieces[ p ] = "12,22,14,17".split( splitreg ); p++;
pieces[ p ] = "13,13,14,14".split( splitreg ); p++;
pieces[ p ] = "13,14,15,22".split( splitreg ); p++;
pieces[ p ] = "13,18,13,21".split( splitreg ); p++;
pieces[ p ] = "13,18,19,15".split( splitreg ); p++;
pieces[ p ] = "13,21,20,16".split( splitreg ); p++;
pieces[ p ] = "13,22,14,14".split( splitreg ); p++;
pieces[ p ] = "13,22,21,17".split( splitreg ); p++;
pieces[ p ] = "14,14,18,15".split( splitreg ); p++;
pieces[ p ] = "14,16,15,15".split( splitreg ); p++;
pieces[ p ] = "14,16,17,17".split( splitreg ); p++;
pieces[ p ] = "14,17,14,19".split( splitreg ); p++;
pieces[ p ] = "14,17,16,22".split( splitreg ); p++;
pieces[ p ] = "14,19,17,20".split( splitreg ); p++;
pieces[ p ] = "14,20,18,16".split( splitreg ); p++;
pieces[ p ] = "14,21,17,19".split( splitreg ); p++;
pieces[ p ] = "15,16,19,20".split( splitreg ); p++;
pieces[ p ] = "15,19,22,16".split( splitreg ); p++;
pieces[ p ] = "16,16,19,21".split( splitreg ); p++;
pieces[ p ] = "16,19,16,21".split( splitreg ); p++;
pieces[ p ] = "18,18,18,22".split( splitreg ); p++;
pieces[ p ] = "18,18,20,21".split( splitreg ); p++;
pieces[ p ] = "18,19,21,21".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

