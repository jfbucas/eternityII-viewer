
puzzles[ nb_puzzles ] = "brendan/pieces_18x07.txt.js,Brendan 18x07".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_18x07.txt.js" ) {

board_w = 18;
board_h = 7;


pieces[ p ] = "0,0,2,1".split( splitreg ); p++;
pieces[ p ] = "0,0,3,3".split( splitreg ); p++;
pieces[ p ] = "0,0,3,5".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,1,8,1".split( splitreg ); p++;
pieces[ p ] = "0,1,8,3".split( splitreg ); p++;
pieces[ p ] = "0,1,9,1".split( splitreg ); p++;
pieces[ p ] = "0,1,11,1".split( splitreg ); p++;
pieces[ p ] = "0,1,11,4".split( splitreg ); p++;
pieces[ p ] = "0,1,12,3".split( splitreg ); p++;
pieces[ p ] = "0,1,13,2".split( splitreg ); p++;
pieces[ p ] = "0,1,14,2".split( splitreg ); p++;
pieces[ p ] = "0,1,14,5".split( splitreg ); p++;
pieces[ p ] = "0,1,16,5".split( splitreg ); p++;
pieces[ p ] = "0,2,7,4".split( splitreg ); p++;
pieces[ p ] = "0,2,9,3".split( splitreg ); p++;
pieces[ p ] = "0,2,10,4".split( splitreg ); p++;
pieces[ p ] = "0,2,11,5".split( splitreg ); p++;
pieces[ p ] = "0,2,12,1".split( splitreg ); p++;
pieces[ p ] = "0,2,12,4".split( splitreg ); p++;
pieces[ p ] = "0,2,13,1".split( splitreg ); p++;
pieces[ p ] = "0,2,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,6,3".split( splitreg ); p++;
pieces[ p ] = "0,3,7,2".split( splitreg ); p++;
pieces[ p ] = "0,3,9,1".split( splitreg ); p++;
pieces[ p ] = "0,3,11,2".split( splitreg ); p++;
pieces[ p ] = "0,3,11,5".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,16,3".split( splitreg ); p++;
pieces[ p ] = "0,4,6,5".split( splitreg ); p++;
pieces[ p ] = "0,4,7,1".split( splitreg ); p++;
pieces[ p ] = "0,4,9,4".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,5".split( splitreg ); p++;
pieces[ p ] = "0,4,11,3".split( splitreg ); p++;
pieces[ p ] = "0,4,15,4".split( splitreg ); p++;
pieces[ p ] = "0,4,16,5".split( splitreg ); p++;
pieces[ p ] = "0,5,6,2".split( splitreg ); p++;
pieces[ p ] = "0,5,8,1".split( splitreg ); p++;
pieces[ p ] = "0,5,8,3".split( splitreg ); p++;
pieces[ p ] = "0,5,8,4".split( splitreg ); p++;
pieces[ p ] = "0,5,9,1".split( splitreg ); p++;
pieces[ p ] = "0,5,10,5".split( splitreg ); p++;
pieces[ p ] = "0,5,11,4".split( splitreg ); p++;
pieces[ p ] = "0,5,13,4".split( splitreg ); p++;
pieces[ p ] = "0,5,14,3".split( splitreg ); p++;
pieces[ p ] = "6,6,8,16".split( splitreg ); p++;
pieces[ p ] = "6,6,11,7".split( splitreg ); p++;
pieces[ p ] = "6,6,14,7".split( splitreg ); p++;
pieces[ p ] = "6,7,11,11".split( splitreg ); p++;
pieces[ p ] = "6,8,16,9".split( splitreg ); p++;
pieces[ p ] = "6,9,9,15".split( splitreg ); p++;
pieces[ p ] = "6,9,14,12".split( splitreg ); p++;
pieces[ p ] = "6,9,15,7".split( splitreg ); p++;
pieces[ p ] = "6,10,13,13".split( splitreg ); p++;
pieces[ p ] = "6,10,14,16".split( splitreg ); p++;
pieces[ p ] = "6,10,15,8".split( splitreg ); p++;
pieces[ p ] = "6,10,15,12".split( splitreg ); p++;
pieces[ p ] = "6,11,6,16".split( splitreg ); p++;
pieces[ p ] = "6,11,7,16".split( splitreg ); p++;
pieces[ p ] = "6,11,13,8".split( splitreg ); p++;
pieces[ p ] = "6,11,13,9".split( splitreg ); p++;
pieces[ p ] = "6,11,15,7".split( splitreg ); p++;
pieces[ p ] = "6,12,8,8".split( splitreg ); p++;
pieces[ p ] = "6,12,8,16".split( splitreg ); p++;
pieces[ p ] = "6,12,12,10".split( splitreg ); p++;
pieces[ p ] = "6,12,12,15".split( splitreg ); p++;
pieces[ p ] = "6,13,10,7".split( splitreg ); p++;
pieces[ p ] = "6,13,14,11".split( splitreg ); p++;
pieces[ p ] = "6,14,15,12".split( splitreg ); p++;
pieces[ p ] = "6,15,16,7".split( splitreg ); p++;
pieces[ p ] = "6,16,10,11".split( splitreg ); p++;
pieces[ p ] = "6,16,12,16".split( splitreg ); p++;
pieces[ p ] = "7,7,7,13".split( splitreg ); p++;
pieces[ p ] = "7,7,11,12".split( splitreg ); p++;
pieces[ p ] = "7,7,13,9".split( splitreg ); p++;
pieces[ p ] = "7,8,10,14".split( splitreg ); p++;
pieces[ p ] = "7,8,13,11".split( splitreg ); p++;
pieces[ p ] = "7,8,13,13".split( splitreg ); p++;
pieces[ p ] = "7,8,14,10".split( splitreg ); p++;
pieces[ p ] = "7,9,13,15".split( splitreg ); p++;
pieces[ p ] = "7,10,9,15".split( splitreg ); p++;
pieces[ p ] = "7,10,11,12".split( splitreg ); p++;
pieces[ p ] = "7,11,15,15".split( splitreg ); p++;
pieces[ p ] = "7,11,16,10".split( splitreg ); p++;
pieces[ p ] = "7,13,8,12".split( splitreg ); p++;
pieces[ p ] = "7,14,10,12".split( splitreg ); p++;
pieces[ p ] = "7,14,12,9".split( splitreg ); p++;
pieces[ p ] = "7,15,8,8".split( splitreg ); p++;
pieces[ p ] = "7,16,8,9".split( splitreg ); p++;
pieces[ p ] = "7,16,8,13".split( splitreg ); p++;
pieces[ p ] = "7,16,9,16".split( splitreg ); p++;
pieces[ p ] = "8,8,9,15".split( splitreg ); p++;
pieces[ p ] = "8,10,8,15".split( splitreg ); p++;
pieces[ p ] = "8,10,12,12".split( splitreg ); p++;
pieces[ p ] = "8,11,14,9".split( splitreg ); p++;
pieces[ p ] = "8,11,14,16".split( splitreg ); p++;
pieces[ p ] = "8,12,12,16".split( splitreg ); p++;
pieces[ p ] = "8,12,15,9".split( splitreg ); p++;
pieces[ p ] = "8,13,11,15".split( splitreg ); p++;
pieces[ p ] = "8,14,10,10".split( splitreg ); p++;
pieces[ p ] = "8,14,10,15".split( splitreg ); p++;
pieces[ p ] = "8,15,13,16".split( splitreg ); p++;
pieces[ p ] = "9,9,9,16".split( splitreg ); p++;
pieces[ p ] = "9,9,10,14".split( splitreg ); p++;
pieces[ p ] = "9,9,12,11".split( splitreg ); p++;
pieces[ p ] = "9,9,13,11".split( splitreg ); p++;
pieces[ p ] = "9,10,14,12".split( splitreg ); p++;
pieces[ p ] = "9,13,11,11".split( splitreg ); p++;
pieces[ p ] = "9,13,16,12".split( splitreg ); p++;
pieces[ p ] = "9,14,9,16".split( splitreg ); p++;
pieces[ p ] = "10,11,10,13".split( splitreg ); p++;
pieces[ p ] = "10,13,15,16".split( splitreg ); p++;
pieces[ p ] = "10,14,12,12".split( splitreg ); p++;
pieces[ p ] = "10,14,13,13".split( splitreg ); p++;
pieces[ p ] = "10,14,15,11".split( splitreg ); p++;
pieces[ p ] = "10,15,14,15".split( splitreg ); p++;
pieces[ p ] = "10,15,15,13".split( splitreg ); p++;
pieces[ p ] = "10,16,15,15".split( splitreg ); p++;
pieces[ p ] = "10,16,16,11".split( splitreg ); p++;
pieces[ p ] = "12,13,14,13".split( splitreg ); p++;
pieces[ p ] = "12,13,14,14".split( splitreg ); p++;
pieces[ p ] = "12,14,16,13".split( splitreg ); p++;
pieces[ p ] = "12,14,16,15".split( splitreg ); p++;
pieces[ p ] = "13,14,15,16".split( splitreg ); p++;
pieces[ p ] = "14,16,15,15".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

