
puzzles[ nb_puzzles ] = "brendan/pieces_20x10.txt.js,Brendan 20x10".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_20x10.txt.js" ) {

board_w = 20;
board_h = 10;


pieces[ p ] = "0,0,2,5".split( splitreg ); p++;
pieces[ p ] = "0,0,3,3".split( splitreg ); p++;
pieces[ p ] = "0,0,5,4".split( splitreg ); p++;
pieces[ p ] = "0,0,5,5".split( splitreg ); p++;
pieces[ p ] = "0,1,7,1".split( splitreg ); p++;
pieces[ p ] = "0,1,7,2".split( splitreg ); p++;
pieces[ p ] = "0,1,7,4".split( splitreg ); p++;
pieces[ p ] = "0,1,9,5".split( splitreg ); p++;
pieces[ p ] = "0,1,10,1".split( splitreg ); p++;
pieces[ p ] = "0,1,11,2".split( splitreg ); p++;
pieces[ p ] = "0,1,12,2".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,16,3".split( splitreg ); p++;
pieces[ p ] = "0,1,16,5".split( splitreg ); p++;
pieces[ p ] = "0,1,18,4".split( splitreg ); p++;
pieces[ p ] = "0,1,20,5".split( splitreg ); p++;
pieces[ p ] = "0,2,6,1".split( splitreg ); p++;
pieces[ p ] = "0,2,9,3".split( splitreg ); p++;
pieces[ p ] = "0,2,10,1".split( splitreg ); p++;
pieces[ p ] = "0,2,10,5".split( splitreg ); p++;
pieces[ p ] = "0,2,11,2".split( splitreg ); p++;
pieces[ p ] = "0,2,14,5".split( splitreg ); p++;
pieces[ p ] = "0,2,15,3".split( splitreg ); p++;
pieces[ p ] = "0,2,18,2".split( splitreg ); p++;
pieces[ p ] = "0,2,18,3".split( splitreg ); p++;
pieces[ p ] = "0,2,19,2".split( splitreg ); p++;
pieces[ p ] = "0,3,6,3".split( splitreg ); p++;
pieces[ p ] = "0,3,10,3".split( splitreg ); p++;
pieces[ p ] = "0,3,12,1".split( splitreg ); p++;
pieces[ p ] = "0,3,13,4".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,17,4".split( splitreg ); p++;
pieces[ p ] = "0,3,18,5".split( splitreg ); p++;
pieces[ p ] = "0,3,19,5".split( splitreg ); p++;
pieces[ p ] = "0,3,20,1".split( splitreg ); p++;
pieces[ p ] = "0,4,6,1".split( splitreg ); p++;
pieces[ p ] = "0,4,12,3".split( splitreg ); p++;
pieces[ p ] = "0,4,13,2".split( splitreg ); p++;
pieces[ p ] = "0,4,13,5".split( splitreg ); p++;
pieces[ p ] = "0,4,15,4".split( splitreg ); p++;
pieces[ p ] = "0,4,16,1".split( splitreg ); p++;
pieces[ p ] = "0,4,16,3".split( splitreg ); p++;
pieces[ p ] = "0,4,18,1".split( splitreg ); p++;
pieces[ p ] = "0,4,18,2".split( splitreg ); p++;
pieces[ p ] = "0,4,19,1".split( splitreg ); p++;
pieces[ p ] = "0,4,20,2".split( splitreg ); p++;
pieces[ p ] = "0,5,6,4".split( splitreg ); p++;
pieces[ p ] = "0,5,7,2".split( splitreg ); p++;
pieces[ p ] = "0,5,8,4".split( splitreg ); p++;
pieces[ p ] = "0,5,10,1".split( splitreg ); p++;
pieces[ p ] = "0,5,11,4".split( splitreg ); p++;
pieces[ p ] = "0,5,12,3".split( splitreg ); p++;
pieces[ p ] = "0,5,17,4".split( splitreg ); p++;
pieces[ p ] = "0,5,19,1".split( splitreg ); p++;
pieces[ p ] = "0,5,20,5".split( splitreg ); p++;
pieces[ p ] = "6,6,20,8".split( splitreg ); p++;
pieces[ p ] = "6,6,20,16".split( splitreg ); p++;
pieces[ p ] = "6,8,7,11".split( splitreg ); p++;
pieces[ p ] = "6,8,11,10".split( splitreg ); p++;
pieces[ p ] = "6,9,9,11".split( splitreg ); p++;
pieces[ p ] = "6,9,11,9".split( splitreg ); p++;
pieces[ p ] = "6,9,13,8".split( splitreg ); p++;
pieces[ p ] = "6,9,13,13".split( splitreg ); p++;
pieces[ p ] = "6,9,14,9".split( splitreg ); p++;
pieces[ p ] = "6,10,8,9".split( splitreg ); p++;
pieces[ p ] = "6,10,14,7".split( splitreg ); p++;
pieces[ p ] = "6,11,10,10".split( splitreg ); p++;
pieces[ p ] = "6,12,12,20".split( splitreg ); p++;
pieces[ p ] = "6,12,13,16".split( splitreg ); p++;
pieces[ p ] = "6,12,19,17".split( splitreg ); p++;
pieces[ p ] = "6,13,7,12".split( splitreg ); p++;
pieces[ p ] = "6,13,14,15".split( splitreg ); p++;
pieces[ p ] = "6,13,14,16".split( splitreg ); p++;
pieces[ p ] = "6,13,16,16".split( splitreg ); p++;
pieces[ p ] = "6,14,14,14".split( splitreg ); p++;
pieces[ p ] = "6,15,10,15".split( splitreg ); p++;
pieces[ p ] = "6,15,11,7".split( splitreg ); p++;
pieces[ p ] = "6,15,11,20".split( splitreg ); p++;
pieces[ p ] = "6,15,14,17".split( splitreg ); p++;
pieces[ p ] = "6,15,15,13".split( splitreg ); p++;
pieces[ p ] = "6,15,19,15".split( splitreg ); p++;
pieces[ p ] = "6,16,13,20".split( splitreg ); p++;
pieces[ p ] = "6,17,10,14".split( splitreg ); p++;
pieces[ p ] = "6,17,16,19".split( splitreg ); p++;
pieces[ p ] = "6,17,18,14".split( splitreg ); p++;
pieces[ p ] = "6,18,8,14".split( splitreg ); p++;
pieces[ p ] = "6,19,9,11".split( splitreg ); p++;
pieces[ p ] = "6,19,12,14".split( splitreg ); p++;
pieces[ p ] = "6,19,15,8".split( splitreg ); p++;
pieces[ p ] = "6,20,7,7".split( splitreg ); p++;
pieces[ p ] = "6,20,20,10".split( splitreg ); p++;
pieces[ p ] = "7,8,14,10".split( splitreg ); p++;
pieces[ p ] = "7,8,17,13".split( splitreg ); p++;
pieces[ p ] = "7,8,19,16".split( splitreg ); p++;
pieces[ p ] = "7,8,20,15".split( splitreg ); p++;
pieces[ p ] = "7,9,16,8".split( splitreg ); p++;
pieces[ p ] = "7,9,19,11".split( splitreg ); p++;
pieces[ p ] = "7,10,9,10".split( splitreg ); p++;
pieces[ p ] = "7,10,14,8".split( splitreg ); p++;
pieces[ p ] = "7,10,17,9".split( splitreg ); p++;
pieces[ p ] = "7,11,13,17".split( splitreg ); p++;
pieces[ p ] = "7,11,16,15".split( splitreg ); p++;
pieces[ p ] = "7,11,17,19".split( splitreg ); p++;
pieces[ p ] = "7,12,16,19".split( splitreg ); p++;
pieces[ p ] = "7,12,17,18".split( splitreg ); p++;
pieces[ p ] = "7,12,19,9".split( splitreg ); p++;
pieces[ p ] = "7,13,12,18".split( splitreg ); p++;
pieces[ p ] = "7,13,17,17".split( splitreg ); p++;
pieces[ p ] = "7,14,11,14".split( splitreg ); p++;
pieces[ p ] = "7,14,14,11".split( splitreg ); p++;
pieces[ p ] = "7,15,14,20".split( splitreg ); p++;
pieces[ p ] = "7,15,20,17".split( splitreg ); p++;
pieces[ p ] = "7,16,15,17".split( splitreg ); p++;
pieces[ p ] = "7,16,17,8".split( splitreg ); p++;
pieces[ p ] = "7,17,12,9".split( splitreg ); p++;
pieces[ p ] = "7,17,14,19".split( splitreg ); p++;
pieces[ p ] = "7,17,18,19".split( splitreg ); p++;
pieces[ p ] = "7,18,9,9".split( splitreg ); p++;
pieces[ p ] = "7,19,8,12".split( splitreg ); p++;
pieces[ p ] = "7,19,9,11".split( splitreg ); p++;
pieces[ p ] = "7,19,11,17".split( splitreg ); p++;
pieces[ p ] = "7,20,16,20".split( splitreg ); p++;
pieces[ p ] = "7,20,17,19".split( splitreg ); p++;
pieces[ p ] = "8,8,8,18".split( splitreg ); p++;
pieces[ p ] = "8,8,9,20".split( splitreg ); p++;
pieces[ p ] = "8,8,18,15".split( splitreg ); p++;
pieces[ p ] = "8,10,11,18".split( splitreg ); p++;
pieces[ p ] = "8,11,16,13".split( splitreg ); p++;
pieces[ p ] = "8,11,18,17".split( splitreg ); p++;
pieces[ p ] = "8,12,12,9".split( splitreg ); p++;
pieces[ p ] = "8,12,17,16".split( splitreg ); p++;
pieces[ p ] = "8,13,13,13".split( splitreg ); p++;
pieces[ p ] = "8,14,12,20".split( splitreg ); p++;
pieces[ p ] = "8,14,18,17".split( splitreg ); p++;
pieces[ p ] = "8,14,19,13".split( splitreg ); p++;
pieces[ p ] = "8,15,9,15".split( splitreg ); p++;
pieces[ p ] = "8,15,17,16".split( splitreg ); p++;
pieces[ p ] = "8,15,20,14".split( splitreg ); p++;
pieces[ p ] = "8,16,9,19".split( splitreg ); p++;
pieces[ p ] = "8,16,12,16".split( splitreg ); p++;
pieces[ p ] = "8,17,19,11".split( splitreg ); p++;
pieces[ p ] = "8,18,9,14".split( splitreg ); p++;
pieces[ p ] = "8,18,19,9".split( splitreg ); p++;
pieces[ p ] = "8,20,12,20".split( splitreg ); p++;
pieces[ p ] = "8,20,14,15".split( splitreg ); p++;
pieces[ p ] = "9,9,14,13".split( splitreg ); p++;
pieces[ p ] = "9,10,13,17".split( splitreg ); p++;
pieces[ p ] = "9,10,15,12".split( splitreg ); p++;
pieces[ p ] = "9,11,15,13".split( splitreg ); p++;
pieces[ p ] = "9,11,15,15".split( splitreg ); p++;
pieces[ p ] = "9,11,19,11".split( splitreg ); p++;
pieces[ p ] = "9,12,9,20".split( splitreg ); p++;
pieces[ p ] = "9,13,16,11".split( splitreg ); p++;
pieces[ p ] = "9,17,12,11".split( splitreg ); p++;
pieces[ p ] = "9,18,19,10".split( splitreg ); p++;
pieces[ p ] = "9,19,17,16".split( splitreg ); p++;
pieces[ p ] = "9,19,18,19".split( splitreg ); p++;
pieces[ p ] = "9,20,12,15".split( splitreg ); p++;
pieces[ p ] = "10,10,16,11".split( splitreg ); p++;
pieces[ p ] = "10,10,17,11".split( splitreg ); p++;
pieces[ p ] = "10,10,18,12".split( splitreg ); p++;
pieces[ p ] = "10,11,13,12".split( splitreg ); p++;
pieces[ p ] = "10,11,15,15".split( splitreg ); p++;
pieces[ p ] = "10,13,10,18".split( splitreg ); p++;
pieces[ p ] = "10,13,11,18".split( splitreg ); p++;
pieces[ p ] = "10,13,12,16".split( splitreg ); p++;
pieces[ p ] = "10,14,10,18".split( splitreg ); p++;
pieces[ p ] = "10,14,12,12".split( splitreg ); p++;
pieces[ p ] = "10,14,15,19".split( splitreg ); p++;
pieces[ p ] = "10,14,18,12".split( splitreg ); p++;
pieces[ p ] = "10,16,13,12".split( splitreg ); p++;
pieces[ p ] = "10,18,16,12".split( splitreg ); p++;
pieces[ p ] = "10,20,20,20".split( splitreg ); p++;
pieces[ p ] = "11,12,18,12".split( splitreg ); p++;
pieces[ p ] = "11,13,16,18".split( splitreg ); p++;
pieces[ p ] = "11,13,18,19".split( splitreg ); p++;
pieces[ p ] = "11,15,13,13".split( splitreg ); p++;
pieces[ p ] = "11,19,13,18".split( splitreg ); p++;
pieces[ p ] = "11,20,12,15".split( splitreg ); p++;
pieces[ p ] = "11,20,18,12".split( splitreg ); p++;
pieces[ p ] = "11,20,20,19".split( splitreg ); p++;
pieces[ p ] = "12,16,13,20".split( splitreg ); p++;
pieces[ p ] = "12,18,17,14".split( splitreg ); p++;
pieces[ p ] = "12,19,17,16".split( splitreg ); p++;
pieces[ p ] = "12,20,14,16".split( splitreg ); p++;
pieces[ p ] = "13,13,20,18".split( splitreg ); p++;
pieces[ p ] = "13,15,17,15".split( splitreg ); p++;
pieces[ p ] = "13,16,20,16".split( splitreg ); p++;
pieces[ p ] = "14,15,18,15".split( splitreg ); p++;
pieces[ p ] = "14,17,18,18".split( splitreg ); p++;
pieces[ p ] = "14,18,18,19".split( splitreg ); p++;
pieces[ p ] = "14,19,16,19".split( splitreg ); p++;
pieces[ p ] = "14,19,20,17".split( splitreg ); p++;
pieces[ p ] = "14,20,16,15".split( splitreg ); p++;
pieces[ p ] = "15,16,19,16".split( splitreg ); p++;
pieces[ p ] = "15,17,17,19".split( splitreg ); p++;
pieces[ p ] = "15,18,17,18".split( splitreg ); p++;
pieces[ p ] = "16,17,19,18".split( splitreg ); p++;
pieces[ p ] = "16,17,20,17".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

