
puzzles[ nb_puzzles ] = "brendan/pieces_12x11.txt.js,Brendan 12x11".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_12x11.txt.js" ) {

board_w = 12;
board_h = 11;


pieces[ p ] = "0,0,1,2".split( splitreg ); p++;
pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,0,4,1".split( splitreg ); p++;
pieces[ p ] = "0,1,5,3".split( splitreg ); p++;
pieces[ p ] = "0,1,6,2".split( splitreg ); p++;
pieces[ p ] = "0,1,6,4".split( splitreg ); p++;
pieces[ p ] = "0,1,7,4".split( splitreg ); p++;
pieces[ p ] = "0,1,11,1".split( splitreg ); p++;
pieces[ p ] = "0,1,12,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,1".split( splitreg ); p++;
pieces[ p ] = "0,1,15,2".split( splitreg ); p++;
pieces[ p ] = "0,1,15,3".split( splitreg ); p++;
pieces[ p ] = "0,1,15,4".split( splitreg ); p++;
pieces[ p ] = "0,2,5,1".split( splitreg ); p++;
pieces[ p ] = "0,2,6,1".split( splitreg ); p++;
pieces[ p ] = "0,2,7,4".split( splitreg ); p++;
pieces[ p ] = "0,2,8,3".split( splitreg ); p++;
pieces[ p ] = "0,2,11,3".split( splitreg ); p++;
pieces[ p ] = "0,2,11,4".split( splitreg ); p++;
pieces[ p ] = "0,2,12,4".split( splitreg ); p++;
pieces[ p ] = "0,2,13,1".split( splitreg ); p++;
pieces[ p ] = "0,2,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,7,4".split( splitreg ); p++;
pieces[ p ] = "0,3,8,4".split( splitreg ); p++;
pieces[ p ] = "0,3,10,2".split( splitreg ); p++;
pieces[ p ] = "0,3,10,4".split( splitreg ); p++;
pieces[ p ] = "0,3,11,1".split( splitreg ); p++;
pieces[ p ] = "0,3,11,4".split( splitreg ); p++;
pieces[ p ] = "0,3,13,1".split( splitreg ); p++;
pieces[ p ] = "0,3,16,1".split( splitreg ); p++;
pieces[ p ] = "0,3,16,3".split( splitreg ); p++;
pieces[ p ] = "0,4,5,2".split( splitreg ); p++;
pieces[ p ] = "0,4,7,3".split( splitreg ); p++;
pieces[ p ] = "0,4,8,2".split( splitreg ); p++;
pieces[ p ] = "0,4,8,3".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,12,2".split( splitreg ); p++;
pieces[ p ] = "0,4,13,2".split( splitreg ); p++;
pieces[ p ] = "0,4,13,3".split( splitreg ); p++;
pieces[ p ] = "0,4,14,1".split( splitreg ); p++;
pieces[ p ] = "5,5,8,7".split( splitreg ); p++;
pieces[ p ] = "5,5,12,7".split( splitreg ); p++;
pieces[ p ] = "5,6,7,11".split( splitreg ); p++;
pieces[ p ] = "5,6,7,15".split( splitreg ); p++;
pieces[ p ] = "5,6,14,13".split( splitreg ); p++;
pieces[ p ] = "5,7,5,9".split( splitreg ); p++;
pieces[ p ] = "5,7,6,15".split( splitreg ); p++;
pieces[ p ] = "5,8,9,16".split( splitreg ); p++;
pieces[ p ] = "5,9,9,13".split( splitreg ); p++;
pieces[ p ] = "5,9,9,15".split( splitreg ); p++;
pieces[ p ] = "5,10,9,15".split( splitreg ); p++;
pieces[ p ] = "5,10,12,14".split( splitreg ); p++;
pieces[ p ] = "5,10,15,11".split( splitreg ); p++;
pieces[ p ] = "5,10,16,16".split( splitreg ); p++;
pieces[ p ] = "5,11,11,7".split( splitreg ); p++;
pieces[ p ] = "5,12,8,15".split( splitreg ); p++;
pieces[ p ] = "5,12,11,13".split( splitreg ); p++;
pieces[ p ] = "5,13,11,6".split( splitreg ); p++;
pieces[ p ] = "5,13,12,9".split( splitreg ); p++;
pieces[ p ] = "5,13,14,10".split( splitreg ); p++;
pieces[ p ] = "5,14,7,8".split( splitreg ); p++;
pieces[ p ] = "5,14,8,12".split( splitreg ); p++;
pieces[ p ] = "5,14,16,9".split( splitreg ); p++;
pieces[ p ] = "5,15,11,14".split( splitreg ); p++;
pieces[ p ] = "5,16,6,14".split( splitreg ); p++;
pieces[ p ] = "5,16,7,14".split( splitreg ); p++;
pieces[ p ] = "5,16,9,11".split( splitreg ); p++;
pieces[ p ] = "5,16,15,11".split( splitreg ); p++;
pieces[ p ] = "6,6,9,14".split( splitreg ); p++;
pieces[ p ] = "6,7,6,16".split( splitreg ); p++;
pieces[ p ] = "6,7,9,14".split( splitreg ); p++;
pieces[ p ] = "6,8,6,13".split( splitreg ); p++;
pieces[ p ] = "6,8,10,7".split( splitreg ); p++;
pieces[ p ] = "6,8,15,10".split( splitreg ); p++;
pieces[ p ] = "6,10,6,11".split( splitreg ); p++;
pieces[ p ] = "6,10,8,7".split( splitreg ); p++;
pieces[ p ] = "6,12,9,10".split( splitreg ); p++;
pieces[ p ] = "6,13,12,9".split( splitreg ); p++;
pieces[ p ] = "6,14,9,9".split( splitreg ); p++;
pieces[ p ] = "6,14,13,16".split( splitreg ); p++;
pieces[ p ] = "6,15,10,12".split( splitreg ); p++;
pieces[ p ] = "6,15,12,10".split( splitreg ); p++;
pieces[ p ] = "6,15,13,10".split( splitreg ); p++;
pieces[ p ] = "6,15,15,14".split( splitreg ); p++;
pieces[ p ] = "6,16,10,8".split( splitreg ); p++;
pieces[ p ] = "6,16,11,14".split( splitreg ); p++;
pieces[ p ] = "6,16,11,15".split( splitreg ); p++;
pieces[ p ] = "6,16,13,12".split( splitreg ); p++;
pieces[ p ] = "7,7,13,8".split( splitreg ); p++;
pieces[ p ] = "7,7,16,10".split( splitreg ); p++;
pieces[ p ] = "7,8,12,10".split( splitreg ); p++;
pieces[ p ] = "7,9,9,11".split( splitreg ); p++;
pieces[ p ] = "7,9,16,13".split( splitreg ); p++;
pieces[ p ] = "7,10,9,8".split( splitreg ); p++;
pieces[ p ] = "7,10,14,10".split( splitreg ); p++;
pieces[ p ] = "7,10,15,8".split( splitreg ); p++;
pieces[ p ] = "7,11,12,15".split( splitreg ); p++;
pieces[ p ] = "7,12,8,12".split( splitreg ); p++;
pieces[ p ] = "7,12,10,9".split( splitreg ); p++;
pieces[ p ] = "7,12,15,15".split( splitreg ); p++;
pieces[ p ] = "7,13,11,16".split( splitreg ); p++;
pieces[ p ] = "7,14,11,10".split( splitreg ); p++;
pieces[ p ] = "7,15,16,15".split( splitreg ); p++;
pieces[ p ] = "8,8,13,11".split( splitreg ); p++;
pieces[ p ] = "8,8,14,15".split( splitreg ); p++;
pieces[ p ] = "8,8,16,12".split( splitreg ); p++;
pieces[ p ] = "8,9,12,9".split( splitreg ); p++;
pieces[ p ] = "8,9,12,14".split( splitreg ); p++;
pieces[ p ] = "8,10,11,13".split( splitreg ); p++;
pieces[ p ] = "8,10,16,10".split( splitreg ); p++;
pieces[ p ] = "8,12,13,11".split( splitreg ); p++;
pieces[ p ] = "8,12,13,14".split( splitreg ); p++;
pieces[ p ] = "8,14,10,9".split( splitreg ); p++;
pieces[ p ] = "8,14,14,13".split( splitreg ); p++;
pieces[ p ] = "8,16,16,11".split( splitreg ); p++;
pieces[ p ] = "9,9,11,16".split( splitreg ); p++;
pieces[ p ] = "9,11,13,11".split( splitreg ); p++;
pieces[ p ] = "9,12,12,13".split( splitreg ); p++;
pieces[ p ] = "9,12,14,16".split( splitreg ); p++;
pieces[ p ] = "9,13,16,11".split( splitreg ); p++;
pieces[ p ] = "9,14,10,12".split( splitreg ); p++;
pieces[ p ] = "9,15,13,11".split( splitreg ); p++;
pieces[ p ] = "9,16,10,15".split( splitreg ); p++;
pieces[ p ] = "10,11,13,14".split( splitreg ); p++;
pieces[ p ] = "10,12,12,14".split( splitreg ); p++;
pieces[ p ] = "10,15,13,14".split( splitreg ); p++;
pieces[ p ] = "11,13,15,13".split( splitreg ); p++;
pieces[ p ] = "11,15,15,12".split( splitreg ); p++;
pieces[ p ] = "11,16,13,16".split( splitreg ); p++;
pieces[ p ] = "14,16,15,16".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

