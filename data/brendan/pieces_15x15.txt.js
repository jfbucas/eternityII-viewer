
puzzles[ nb_puzzles ] = "brendan/pieces_15x15.txt.js,Brendan 15x15".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_15x15.txt.js" ) {

board_w = 15;
board_h = 15;


pieces[ p ] = "0,0,1,1".split( splitreg ); p++;
pieces[ p ] = "0,0,4,1".split( splitreg ); p++;
pieces[ p ] = "0,0,4,5".split( splitreg ); p++;
pieces[ p ] = "0,0,5,2".split( splitreg ); p++;
pieces[ p ] = "0,1,7,4".split( splitreg ); p++;
pieces[ p ] = "0,1,9,2".split( splitreg ); p++;
pieces[ p ] = "0,1,11,4".split( splitreg ); p++;
pieces[ p ] = "0,1,12,3".split( splitreg ); p++;
pieces[ p ] = "0,1,13,1".split( splitreg ); p++;
pieces[ p ] = "0,1,15,3".split( splitreg ); p++;
pieces[ p ] = "0,1,17,1".split( splitreg ); p++;
pieces[ p ] = "0,1,18,4".split( splitreg ); p++;
pieces[ p ] = "0,1,19,5".split( splitreg ); p++;
pieces[ p ] = "0,1,20,2".split( splitreg ); p++;
pieces[ p ] = "0,1,20,4".split( splitreg ); p++;
pieces[ p ] = "0,2,6,2".split( splitreg ); p++;
pieces[ p ] = "0,2,6,5".split( splitreg ); p++;
pieces[ p ] = "0,2,8,1".split( splitreg ); p++;
pieces[ p ] = "0,2,8,4".split( splitreg ); p++;
pieces[ p ] = "0,2,9,3".split( splitreg ); p++;
pieces[ p ] = "0,2,13,4".split( splitreg ); p++;
pieces[ p ] = "0,2,15,2".split( splitreg ); p++;
pieces[ p ] = "0,2,17,1".split( splitreg ); p++;
pieces[ p ] = "0,2,18,3".split( splitreg ); p++;
pieces[ p ] = "0,2,20,1".split( splitreg ); p++;
pieces[ p ] = "0,2,21,4".split( splitreg ); p++;
pieces[ p ] = "0,3,6,2".split( splitreg ); p++;
pieces[ p ] = "0,3,6,3".split( splitreg ); p++;
pieces[ p ] = "0,3,9,3".split( splitreg ); p++;
pieces[ p ] = "0,3,12,1".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,15,5".split( splitreg ); p++;
pieces[ p ] = "0,3,16,2".split( splitreg ); p++;
pieces[ p ] = "0,3,18,5".split( splitreg ); p++;
pieces[ p ] = "0,3,20,5".split( splitreg ); p++;
pieces[ p ] = "0,3,21,3".split( splitreg ); p++;
pieces[ p ] = "0,4,6,1".split( splitreg ); p++;
pieces[ p ] = "0,4,8,5".split( splitreg ); p++;
pieces[ p ] = "0,4,9,3".split( splitreg ); p++;
pieces[ p ] = "0,4,10,3".split( splitreg ); p++;
pieces[ p ] = "0,4,10,4".split( splitreg ); p++;
pieces[ p ] = "0,4,12,5".split( splitreg ); p++;
pieces[ p ] = "0,4,14,2".split( splitreg ); p++;
pieces[ p ] = "0,4,20,1".split( splitreg ); p++;
pieces[ p ] = "0,4,21,2".split( splitreg ); p++;
pieces[ p ] = "0,5,6,4".split( splitreg ); p++;
pieces[ p ] = "0,5,11,5".split( splitreg ); p++;
pieces[ p ] = "0,5,12,5".split( splitreg ); p++;
pieces[ p ] = "0,5,13,4".split( splitreg ); p++;
pieces[ p ] = "0,5,16,3".split( splitreg ); p++;
pieces[ p ] = "0,5,17,1".split( splitreg ); p++;
pieces[ p ] = "0,5,17,2".split( splitreg ); p++;
pieces[ p ] = "0,5,19,1".split( splitreg ); p++;
pieces[ p ] = "0,5,19,3".split( splitreg ); p++;
pieces[ p ] = "0,5,21,5".split( splitreg ); p++;
pieces[ p ] = "6,7,9,8".split( splitreg ); p++;
pieces[ p ] = "6,8,7,17".split( splitreg ); p++;
pieces[ p ] = "6,8,10,17".split( splitreg ); p++;
pieces[ p ] = "6,8,11,11".split( splitreg ); p++;
pieces[ p ] = "6,8,14,19".split( splitreg ); p++;
pieces[ p ] = "6,8,21,11".split( splitreg ); p++;
pieces[ p ] = "6,9,13,8".split( splitreg ); p++;
pieces[ p ] = "6,10,6,13".split( splitreg ); p++;
pieces[ p ] = "6,10,7,17".split( splitreg ); p++;
pieces[ p ] = "6,10,19,9".split( splitreg ); p++;
pieces[ p ] = "6,10,19,14".split( splitreg ); p++;
pieces[ p ] = "6,11,11,9".split( splitreg ); p++;
pieces[ p ] = "6,11,13,8".split( splitreg ); p++;
pieces[ p ] = "6,11,14,21".split( splitreg ); p++;
pieces[ p ] = "6,11,15,7".split( splitreg ); p++;
pieces[ p ] = "6,11,15,20".split( splitreg ); p++;
pieces[ p ] = "6,11,21,12".split( splitreg ); p++;
pieces[ p ] = "6,12,20,13".split( splitreg ); p++;
pieces[ p ] = "6,13,7,8".split( splitreg ); p++;
pieces[ p ] = "6,13,8,19".split( splitreg ); p++;
pieces[ p ] = "6,14,9,10".split( splitreg ); p++;
pieces[ p ] = "6,14,11,15".split( splitreg ); p++;
pieces[ p ] = "6,14,19,12".split( splitreg ); p++;
pieces[ p ] = "6,15,12,10".split( splitreg ); p++;
pieces[ p ] = "6,16,8,16".split( splitreg ); p++;
pieces[ p ] = "6,17,13,18".split( splitreg ); p++;
pieces[ p ] = "6,17,14,10".split( splitreg ); p++;
pieces[ p ] = "6,18,8,8".split( splitreg ); p++;
pieces[ p ] = "6,18,9,10".split( splitreg ); p++;
pieces[ p ] = "6,18,11,19".split( splitreg ); p++;
pieces[ p ] = "6,18,11,20".split( splitreg ); p++;
pieces[ p ] = "6,19,17,14".split( splitreg ); p++;
pieces[ p ] = "6,19,20,8".split( splitreg ); p++;
pieces[ p ] = "6,20,11,20".split( splitreg ); p++;
pieces[ p ] = "6,20,12,20".split( splitreg ); p++;
pieces[ p ] = "6,21,10,19".split( splitreg ); p++;
pieces[ p ] = "6,21,13,10".split( splitreg ); p++;
pieces[ p ] = "6,21,13,14".split( splitreg ); p++;
pieces[ p ] = "6,21,18,8".split( splitreg ); p++;
pieces[ p ] = "7,7,8,15".split( splitreg ); p++;
pieces[ p ] = "7,7,17,12".split( splitreg ); p++;
pieces[ p ] = "7,7,18,10".split( splitreg ); p++;
pieces[ p ] = "7,8,16,10".split( splitreg ); p++;
pieces[ p ] = "7,9,11,14".split( splitreg ); p++;
pieces[ p ] = "7,9,13,17".split( splitreg ); p++;
pieces[ p ] = "7,9,15,8".split( splitreg ); p++;
pieces[ p ] = "7,9,17,8".split( splitreg ); p++;
pieces[ p ] = "7,9,19,12".split( splitreg ); p++;
pieces[ p ] = "7,9,20,11".split( splitreg ); p++;
pieces[ p ] = "7,10,9,9".split( splitreg ); p++;
pieces[ p ] = "7,10,12,10".split( splitreg ); p++;
pieces[ p ] = "7,10,17,20".split( splitreg ); p++;
pieces[ p ] = "7,11,12,14".split( splitreg ); p++;
pieces[ p ] = "7,11,15,13".split( splitreg ); p++;
pieces[ p ] = "7,12,8,9".split( splitreg ); p++;
pieces[ p ] = "7,12,8,16".split( splitreg ); p++;
pieces[ p ] = "7,13,8,11".split( splitreg ); p++;
pieces[ p ] = "7,14,17,21".split( splitreg ); p++;
pieces[ p ] = "7,15,15,18".split( splitreg ); p++;
pieces[ p ] = "7,15,15,20".split( splitreg ); p++;
pieces[ p ] = "7,15,17,16".split( splitreg ); p++;
pieces[ p ] = "7,15,20,13".split( splitreg ); p++;
pieces[ p ] = "7,15,21,16".split( splitreg ); p++;
pieces[ p ] = "7,16,10,16".split( splitreg ); p++;
pieces[ p ] = "7,16,18,13".split( splitreg ); p++;
pieces[ p ] = "7,17,12,15".split( splitreg ); p++;
pieces[ p ] = "7,17,12,19".split( splitreg ); p++;
pieces[ p ] = "7,18,16,15".split( splitreg ); p++;
pieces[ p ] = "7,18,18,17".split( splitreg ); p++;
pieces[ p ] = "7,19,10,19".split( splitreg ); p++;
pieces[ p ] = "7,20,9,21".split( splitreg ); p++;
pieces[ p ] = "7,20,12,10".split( splitreg ); p++;
pieces[ p ] = "7,21,18,16".split( splitreg ); p++;
pieces[ p ] = "7,21,20,16".split( splitreg ); p++;
pieces[ p ] = "7,21,20,17".split( splitreg ); p++;
pieces[ p ] = "7,21,20,18".split( splitreg ); p++;
pieces[ p ] = "8,9,12,14".split( splitreg ); p++;
pieces[ p ] = "8,9,17,9".split( splitreg ); p++;
pieces[ p ] = "8,10,20,13".split( splitreg ); p++;
pieces[ p ] = "8,11,15,20".split( splitreg ); p++;
pieces[ p ] = "8,14,10,10".split( splitreg ); p++;
pieces[ p ] = "8,15,10,13".split( splitreg ); p++;
pieces[ p ] = "8,15,12,15".split( splitreg ); p++;
pieces[ p ] = "8,15,13,14".split( splitreg ); p++;
pieces[ p ] = "8,15,14,21".split( splitreg ); p++;
pieces[ p ] = "8,15,18,14".split( splitreg ); p++;
pieces[ p ] = "8,16,13,18".split( splitreg ); p++;
pieces[ p ] = "8,16,16,15".split( splitreg ); p++;
pieces[ p ] = "8,16,20,16".split( splitreg ); p++;
pieces[ p ] = "8,17,17,18".split( splitreg ); p++;
pieces[ p ] = "8,18,12,10".split( splitreg ); p++;
pieces[ p ] = "8,18,19,18".split( splitreg ); p++;
pieces[ p ] = "8,19,11,15".split( splitreg ); p++;
pieces[ p ] = "8,19,11,16".split( splitreg ); p++;
pieces[ p ] = "8,20,8,21".split( splitreg ); p++;
pieces[ p ] = "8,20,16,12".split( splitreg ); p++;
pieces[ p ] = "9,9,17,13".split( splitreg ); p++;
pieces[ p ] = "9,10,9,17".split( splitreg ); p++;
pieces[ p ] = "9,10,12,13".split( splitreg ); p++;
pieces[ p ] = "9,11,11,12".split( splitreg ); p++;
pieces[ p ] = "9,11,14,17".split( splitreg ); p++;
pieces[ p ] = "9,12,10,21".split( splitreg ); p++;
pieces[ p ] = "9,12,13,10".split( splitreg ); p++;
pieces[ p ] = "9,14,13,12".split( splitreg ); p++;
pieces[ p ] = "9,14,18,15".split( splitreg ); p++;
pieces[ p ] = "9,15,14,14".split( splitreg ); p++;
pieces[ p ] = "9,15,19,13".split( splitreg ); p++;
pieces[ p ] = "9,16,13,19".split( splitreg ); p++;
pieces[ p ] = "9,16,15,13".split( splitreg ); p++;
pieces[ p ] = "9,16,18,16".split( splitreg ); p++;
pieces[ p ] = "9,16,19,11".split( splitreg ); p++;
pieces[ p ] = "9,17,20,11".split( splitreg ); p++;
pieces[ p ] = "9,18,13,17".split( splitreg ); p++;
pieces[ p ] = "9,20,12,19".split( splitreg ); p++;
pieces[ p ] = "9,21,11,12".split( splitreg ); p++;
pieces[ p ] = "9,21,12,13".split( splitreg ); p++;
pieces[ p ] = "9,21,20,12".split( splitreg ); p++;
pieces[ p ] = "10,12,15,16".split( splitreg ); p++;
pieces[ p ] = "10,13,18,20".split( splitreg ); p++;
pieces[ p ] = "10,13,19,19".split( splitreg ); p++;
pieces[ p ] = "10,14,14,14".split( splitreg ); p++;
pieces[ p ] = "10,14,19,17".split( splitreg ); p++;
pieces[ p ] = "10,16,14,14".split( splitreg ); p++;
pieces[ p ] = "10,16,18,12".split( splitreg ); p++;
pieces[ p ] = "10,17,14,11".split( splitreg ); p++;
pieces[ p ] = "10,17,14,13".split( splitreg ); p++;
pieces[ p ] = "10,17,20,15".split( splitreg ); p++;
pieces[ p ] = "10,19,11,12".split( splitreg ); p++;
pieces[ p ] = "10,20,13,13".split( splitreg ); p++;
pieces[ p ] = "10,20,20,14".split( splitreg ); p++;
pieces[ p ] = "10,21,15,12".split( splitreg ); p++;
pieces[ p ] = "10,21,21,11".split( splitreg ); p++;
pieces[ p ] = "11,12,11,21".split( splitreg ); p++;
pieces[ p ] = "11,12,17,15".split( splitreg ); p++;
pieces[ p ] = "11,14,19,20".split( splitreg ); p++;
pieces[ p ] = "11,15,19,21".split( splitreg ); p++;
pieces[ p ] = "11,16,13,14".split( splitreg ); p++;
pieces[ p ] = "11,16,16,19".split( splitreg ); p++;
pieces[ p ] = "11,16,21,18".split( splitreg ); p++;
pieces[ p ] = "11,17,17,21".split( splitreg ); p++;
pieces[ p ] = "11,17,21,21".split( splitreg ); p++;
pieces[ p ] = "11,18,12,13".split( splitreg ); p++;
pieces[ p ] = "11,20,15,14".split( splitreg ); p++;
pieces[ p ] = "11,21,21,15".split( splitreg ); p++;
pieces[ p ] = "12,12,16,13".split( splitreg ); p++;
pieces[ p ] = "12,17,13,20".split( splitreg ); p++;
pieces[ p ] = "12,18,17,16".split( splitreg ); p++;
pieces[ p ] = "12,18,20,20".split( splitreg ); p++;
pieces[ p ] = "12,19,16,16".split( splitreg ); p++;
pieces[ p ] = "12,19,19,14".split( splitreg ); p++;
pieces[ p ] = "12,20,15,19".split( splitreg ); p++;
pieces[ p ] = "13,14,13,18".split( splitreg ); p++;
pieces[ p ] = "13,15,21,18".split( splitreg ); p++;
pieces[ p ] = "13,16,19,16".split( splitreg ); p++;
pieces[ p ] = "13,17,16,16".split( splitreg ); p++;
pieces[ p ] = "13,19,21,14".split( splitreg ); p++;
pieces[ p ] = "13,21,19,16".split( splitreg ); p++;
pieces[ p ] = "14,14,21,20".split( splitreg ); p++;
pieces[ p ] = "14,17,15,17".split( splitreg ); p++;
pieces[ p ] = "14,18,21,15".split( splitreg ); p++;
pieces[ p ] = "14,21,18,20".split( splitreg ); p++;
pieces[ p ] = "14,21,20,18".split( splitreg ); p++;
pieces[ p ] = "15,17,18,18".split( splitreg ); p++;
pieces[ p ] = "15,17,19,21".split( splitreg ); p++;
pieces[ p ] = "15,19,17,16".split( splitreg ); p++;
pieces[ p ] = "16,16,18,17".split( splitreg ); p++;
pieces[ p ] = "16,17,19,21".split( splitreg ); p++;
pieces[ p ] = "18,18,18,19".split( splitreg ); p++;
pieces[ p ] = "18,19,19,19".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

