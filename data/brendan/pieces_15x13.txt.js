
puzzles[ nb_puzzles ] = "brendan/pieces_15x13.txt.js,Brendan 15x13".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_15x13.txt.js" ) {

board_w = 15;
board_h = 13;


pieces[ p ] = "0,0,1,2".split( splitreg ); p++;
pieces[ p ] = "0,0,2,4".split( splitreg ); p++;
pieces[ p ] = "0,0,3,3".split( splitreg ); p++;
pieces[ p ] = "0,0,5,4".split( splitreg ); p++;
pieces[ p ] = "0,1,9,2".split( splitreg ); p++;
pieces[ p ] = "0,1,9,5".split( splitreg ); p++;
pieces[ p ] = "0,1,10,4".split( splitreg ); p++;
pieces[ p ] = "0,1,12,1".split( splitreg ); p++;
pieces[ p ] = "0,1,15,1".split( splitreg ); p++;
pieces[ p ] = "0,1,15,3".split( splitreg ); p++;
pieces[ p ] = "0,1,18,4".split( splitreg ); p++;
pieces[ p ] = "0,1,19,1".split( splitreg ); p++;
pieces[ p ] = "0,1,20,2".split( splitreg ); p++;
pieces[ p ] = "0,1,20,5".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,8,1".split( splitreg ); p++;
pieces[ p ] = "0,2,9,4".split( splitreg ); p++;
pieces[ p ] = "0,2,10,5".split( splitreg ); p++;
pieces[ p ] = "0,2,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,13,5".split( splitreg ); p++;
pieces[ p ] = "0,2,14,1".split( splitreg ); p++;
pieces[ p ] = "0,2,15,3".split( splitreg ); p++;
pieces[ p ] = "0,2,16,2".split( splitreg ); p++;
pieces[ p ] = "0,2,17,2".split( splitreg ); p++;
pieces[ p ] = "0,3,6,2".split( splitreg ); p++;
pieces[ p ] = "0,3,9,1".split( splitreg ); p++;
pieces[ p ] = "0,3,13,1".split( splitreg ); p++;
pieces[ p ] = "0,3,13,4".split( splitreg ); p++;
pieces[ p ] = "0,3,14,5".split( splitreg ); p++;
pieces[ p ] = "0,3,16,1".split( splitreg ); p++;
pieces[ p ] = "0,3,16,4".split( splitreg ); p++;
pieces[ p ] = "0,3,18,2".split( splitreg ); p++;
pieces[ p ] = "0,3,18,5".split( splitreg ); p++;
pieces[ p ] = "0,4,6,2".split( splitreg ); p++;
pieces[ p ] = "0,4,6,5".split( splitreg ); p++;
pieces[ p ] = "0,4,8,3".split( splitreg ); p++;
pieces[ p ] = "0,4,8,5".split( splitreg ); p++;
pieces[ p ] = "0,4,13,4".split( splitreg ); p++;
pieces[ p ] = "0,4,14,3".split( splitreg ); p++;
pieces[ p ] = "0,4,15,3".split( splitreg ); p++;
pieces[ p ] = "0,4,18,2".split( splitreg ); p++;
pieces[ p ] = "0,4,18,4".split( splitreg ); p++;
pieces[ p ] = "0,4,20,1".split( splitreg ); p++;
pieces[ p ] = "0,5,7,3".split( splitreg ); p++;
pieces[ p ] = "0,5,8,5".split( splitreg ); p++;
pieces[ p ] = "0,5,10,5".split( splitreg ); p++;
pieces[ p ] = "0,5,12,1".split( splitreg ); p++;
pieces[ p ] = "0,5,14,2".split( splitreg ); p++;
pieces[ p ] = "0,5,16,4".split( splitreg ); p++;
pieces[ p ] = "0,5,17,1".split( splitreg ); p++;
pieces[ p ] = "0,5,18,2".split( splitreg ); p++;
pieces[ p ] = "0,5,20,3".split( splitreg ); p++;
pieces[ p ] = "6,6,12,8".split( splitreg ); p++;
pieces[ p ] = "6,6,14,11".split( splitreg ); p++;
pieces[ p ] = "6,6,17,12".split( splitreg ); p++;
pieces[ p ] = "6,6,18,11".split( splitreg ); p++;
pieces[ p ] = "6,7,12,19".split( splitreg ); p++;
pieces[ p ] = "6,7,12,20".split( splitreg ); p++;
pieces[ p ] = "6,7,14,10".split( splitreg ); p++;
pieces[ p ] = "6,7,15,10".split( splitreg ); p++;
pieces[ p ] = "6,8,11,16".split( splitreg ); p++;
pieces[ p ] = "6,8,12,15".split( splitreg ); p++;
pieces[ p ] = "6,8,14,8".split( splitreg ); p++;
pieces[ p ] = "6,9,8,19".split( splitreg ); p++;
pieces[ p ] = "6,9,17,19".split( splitreg ); p++;
pieces[ p ] = "6,10,10,19".split( splitreg ); p++;
pieces[ p ] = "6,10,12,8".split( splitreg ); p++;
pieces[ p ] = "6,10,15,15".split( splitreg ); p++;
pieces[ p ] = "6,11,11,11".split( splitreg ); p++;
pieces[ p ] = "6,11,13,18".split( splitreg ); p++;
pieces[ p ] = "6,11,15,11".split( splitreg ); p++;
pieces[ p ] = "6,11,18,19".split( splitreg ); p++;
pieces[ p ] = "6,11,20,11".split( splitreg ); p++;
pieces[ p ] = "6,12,15,9".split( splitreg ); p++;
pieces[ p ] = "6,13,12,16".split( splitreg ); p++;
pieces[ p ] = "6,14,9,9".split( splitreg ); p++;
pieces[ p ] = "6,15,10,13".split( splitreg ); p++;
pieces[ p ] = "6,15,18,18".split( splitreg ); p++;
pieces[ p ] = "6,17,8,14".split( splitreg ); p++;
pieces[ p ] = "6,17,10,17".split( splitreg ); p++;
pieces[ p ] = "6,17,12,17".split( splitreg ); p++;
pieces[ p ] = "6,17,19,15".split( splitreg ); p++;
pieces[ p ] = "6,18,18,9".split( splitreg ); p++;
pieces[ p ] = "6,19,9,7".split( splitreg ); p++;
pieces[ p ] = "6,19,12,15".split( splitreg ); p++;
pieces[ p ] = "6,19,19,14".split( splitreg ); p++;
pieces[ p ] = "6,20,8,14".split( splitreg ); p++;
pieces[ p ] = "7,7,10,19".split( splitreg ); p++;
pieces[ p ] = "7,7,17,15".split( splitreg ); p++;
pieces[ p ] = "7,8,17,8".split( splitreg ); p++;
pieces[ p ] = "7,8,17,15".split( splitreg ); p++;
pieces[ p ] = "7,8,18,13".split( splitreg ); p++;
pieces[ p ] = "7,9,12,8".split( splitreg ); p++;
pieces[ p ] = "7,9,13,11".split( splitreg ); p++;
pieces[ p ] = "7,9,16,9".split( splitreg ); p++;
pieces[ p ] = "7,10,15,17".split( splitreg ); p++;
pieces[ p ] = "7,10,16,12".split( splitreg ); p++;
pieces[ p ] = "7,10,16,18".split( splitreg ); p++;
pieces[ p ] = "7,10,19,8".split( splitreg ); p++;
pieces[ p ] = "7,11,20,15".split( splitreg ); p++;
pieces[ p ] = "7,12,7,20".split( splitreg ); p++;
pieces[ p ] = "7,12,11,13".split( splitreg ); p++;
pieces[ p ] = "7,12,16,11".split( splitreg ); p++;
pieces[ p ] = "7,12,18,20".split( splitreg ); p++;
pieces[ p ] = "7,13,13,10".split( splitreg ); p++;
pieces[ p ] = "7,13,19,19".split( splitreg ); p++;
pieces[ p ] = "7,14,10,16".split( splitreg ); p++;
pieces[ p ] = "7,14,14,10".split( splitreg ); p++;
pieces[ p ] = "7,15,8,9".split( splitreg ); p++;
pieces[ p ] = "7,15,13,13".split( splitreg ); p++;
pieces[ p ] = "7,15,18,20".split( splitreg ); p++;
pieces[ p ] = "7,15,20,20".split( splitreg ); p++;
pieces[ p ] = "7,17,13,20".split( splitreg ); p++;
pieces[ p ] = "7,18,14,17".split( splitreg ); p++;
pieces[ p ] = "7,18,17,13".split( splitreg ); p++;
pieces[ p ] = "7,19,14,9".split( splitreg ); p++;
pieces[ p ] = "7,19,16,14".split( splitreg ); p++;
pieces[ p ] = "7,20,10,14".split( splitreg ); p++;
pieces[ p ] = "7,20,20,18".split( splitreg ); p++;
pieces[ p ] = "8,8,11,18".split( splitreg ); p++;
pieces[ p ] = "8,8,20,13".split( splitreg ); p++;
pieces[ p ] = "8,9,17,11".split( splitreg ); p++;
pieces[ p ] = "8,10,12,13".split( splitreg ); p++;
pieces[ p ] = "8,10,12,14".split( splitreg ); p++;
pieces[ p ] = "8,10,14,19".split( splitreg ); p++;
pieces[ p ] = "8,12,11,20".split( splitreg ); p++;
pieces[ p ] = "8,12,12,13".split( splitreg ); p++;
pieces[ p ] = "8,13,10,16".split( splitreg ); p++;
pieces[ p ] = "8,13,17,19".split( splitreg ); p++;
pieces[ p ] = "8,14,17,19".split( splitreg ); p++;
pieces[ p ] = "8,15,16,18".split( splitreg ); p++;
pieces[ p ] = "8,15,19,12".split( splitreg ); p++;
pieces[ p ] = "8,15,20,12".split( splitreg ); p++;
pieces[ p ] = "8,16,9,19".split( splitreg ); p++;
pieces[ p ] = "8,17,17,11".split( splitreg ); p++;
pieces[ p ] = "8,17,17,16".split( splitreg ); p++;
pieces[ p ] = "8,18,14,9".split( splitreg ); p++;
pieces[ p ] = "8,19,9,18".split( splitreg ); p++;
pieces[ p ] = "8,19,10,19".split( splitreg ); p++;
pieces[ p ] = "9,9,17,10".split( splitreg ); p++;
pieces[ p ] = "9,9,17,18".split( splitreg ); p++;
pieces[ p ] = "9,10,17,13".split( splitreg ); p++;
pieces[ p ] = "9,10,17,18".split( splitreg ); p++;
pieces[ p ] = "9,12,13,11".split( splitreg ); p++;
pieces[ p ] = "9,12,13,17".split( splitreg ); p++;
pieces[ p ] = "9,13,11,15".split( splitreg ); p++;
pieces[ p ] = "9,13,16,18".split( splitreg ); p++;
pieces[ p ] = "9,14,18,11".split( splitreg ); p++;
pieces[ p ] = "9,15,16,14".split( splitreg ); p++;
pieces[ p ] = "9,15,18,11".split( splitreg ); p++;
pieces[ p ] = "9,15,18,12".split( splitreg ); p++;
pieces[ p ] = "9,16,10,13".split( splitreg ); p++;
pieces[ p ] = "9,16,17,18".split( splitreg ); p++;
pieces[ p ] = "9,17,15,11".split( splitreg ); p++;
pieces[ p ] = "9,18,12,18".split( splitreg ); p++;
pieces[ p ] = "9,18,15,13".split( splitreg ); p++;
pieces[ p ] = "9,19,19,17".split( splitreg ); p++;
pieces[ p ] = "9,20,11,14".split( splitreg ); p++;
pieces[ p ] = "10,11,15,17".split( splitreg ); p++;
pieces[ p ] = "10,11,18,12".split( splitreg ); p++;
pieces[ p ] = "10,12,12,12".split( splitreg ); p++;
pieces[ p ] = "10,13,11,15".split( splitreg ); p++;
pieces[ p ] = "10,13,14,11".split( splitreg ); p++;
pieces[ p ] = "10,14,10,20".split( splitreg ); p++;
pieces[ p ] = "10,14,19,11".split( splitreg ); p++;
pieces[ p ] = "10,16,20,14".split( splitreg ); p++;
pieces[ p ] = "10,17,13,19".split( splitreg ); p++;
pieces[ p ] = "10,19,20,15".split( splitreg ); p++;
pieces[ p ] = "10,20,13,12".split( splitreg ); p++;
pieces[ p ] = "10,20,13,18".split( splitreg ); p++;
pieces[ p ] = "11,14,11,16".split( splitreg ); p++;
pieces[ p ] = "11,14,12,20".split( splitreg ); p++;
pieces[ p ] = "11,14,16,19".split( splitreg ); p++;
pieces[ p ] = "11,14,19,19".split( splitreg ); p++;
pieces[ p ] = "11,15,14,13".split( splitreg ); p++;
pieces[ p ] = "11,16,16,19".split( splitreg ); p++;
pieces[ p ] = "11,17,16,17".split( splitreg ); p++;
pieces[ p ] = "11,19,11,20".split( splitreg ); p++;
pieces[ p ] = "11,19,15,16".split( splitreg ); p++;
pieces[ p ] = "12,15,12,16".split( splitreg ); p++;
pieces[ p ] = "12,15,12,20".split( splitreg ); p++;
pieces[ p ] = "12,17,16,13".split( splitreg ); p++;
pieces[ p ] = "12,18,16,19".split( splitreg ); p++;
pieces[ p ] = "12,20,17,15".split( splitreg ); p++;
pieces[ p ] = "13,13,16,20".split( splitreg ); p++;
pieces[ p ] = "13,15,19,20".split( splitreg ); p++;
pieces[ p ] = "13,20,14,19".split( splitreg ); p++;
pieces[ p ] = "13,20,20,20".split( splitreg ); p++;
pieces[ p ] = "14,14,20,20".split( splitreg ); p++;
pieces[ p ] = "14,15,16,16".split( splitreg ); p++;
pieces[ p ] = "14,16,15,20".split( splitreg ); p++;
pieces[ p ] = "14,16,18,16".split( splitreg ); p++;
pieces[ p ] = "14,16,20,18".split( splitreg ); p++;
pieces[ p ] = "14,19,16,18".split( splitreg ); p++;
pieces[ p ] = "16,16,17,17".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

