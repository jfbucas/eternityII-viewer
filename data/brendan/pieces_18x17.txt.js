
puzzles[ nb_puzzles ] = "brendan/pieces_18x17.txt.js,Brendan 18x17".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_18x17.txt.js" ) {

board_w = 18;
board_h = 17;


pieces[ p ] = "0,0,1,4".split( splitreg ); p++;
pieces[ p ] = "0,0,2,5".split( splitreg ); p++;
pieces[ p ] = "0,0,3,2".split( splitreg ); p++;
pieces[ p ] = "0,0,5,2".split( splitreg ); p++;
pieces[ p ] = "0,1,6,1".split( splitreg ); p++;
pieces[ p ] = "0,1,10,5".split( splitreg ); p++;
pieces[ p ] = "0,1,12,2".split( splitreg ); p++;
pieces[ p ] = "0,1,13,1".split( splitreg ); p++;
pieces[ p ] = "0,1,13,2".split( splitreg ); p++;
pieces[ p ] = "0,1,14,2".split( splitreg ); p++;
pieces[ p ] = "0,1,15,3".split( splitreg ); p++;
pieces[ p ] = "0,1,16,4".split( splitreg ); p++;
pieces[ p ] = "0,1,17,1".split( splitreg ); p++;
pieces[ p ] = "0,1,17,4".split( splitreg ); p++;
pieces[ p ] = "0,1,18,4".split( splitreg ); p++;
pieces[ p ] = "0,1,22,5".split( splitreg ); p++;
pieces[ p ] = "0,1,24,3".split( splitreg ); p++;
pieces[ p ] = "0,2,6,3".split( splitreg ); p++;
pieces[ p ] = "0,2,8,1".split( splitreg ); p++;
pieces[ p ] = "0,2,8,4".split( splitreg ); p++;
pieces[ p ] = "0,2,9,2".split( splitreg ); p++;
pieces[ p ] = "0,2,13,1".split( splitreg ); p++;
pieces[ p ] = "0,2,14,5".split( splitreg ); p++;
pieces[ p ] = "0,2,15,3".split( splitreg ); p++;
pieces[ p ] = "0,2,19,1".split( splitreg ); p++;
pieces[ p ] = "0,2,21,3".split( splitreg ); p++;
pieces[ p ] = "0,2,22,1".split( splitreg ); p++;
pieces[ p ] = "0,2,23,3".split( splitreg ); p++;
pieces[ p ] = "0,2,24,4".split( splitreg ); p++;
pieces[ p ] = "0,3,7,2".split( splitreg ); p++;
pieces[ p ] = "0,3,7,4".split( splitreg ); p++;
pieces[ p ] = "0,3,9,5".split( splitreg ); p++;
pieces[ p ] = "0,3,10,5".split( splitreg ); p++;
pieces[ p ] = "0,3,11,1".split( splitreg ); p++;
pieces[ p ] = "0,3,12,1".split( splitreg ); p++;
pieces[ p ] = "0,3,12,5".split( splitreg ); p++;
pieces[ p ] = "0,3,15,2".split( splitreg ); p++;
pieces[ p ] = "0,3,20,3".split( splitreg ); p++;
pieces[ p ] = "0,3,21,3".split( splitreg ); p++;
pieces[ p ] = "0,3,23,3".split( splitreg ); p++;
pieces[ p ] = "0,3,24,3".split( splitreg ); p++;
pieces[ p ] = "0,4,7,1".split( splitreg ); p++;
pieces[ p ] = "0,4,8,1".split( splitreg ); p++;
pieces[ p ] = "0,4,8,5".split( splitreg ); p++;
pieces[ p ] = "0,4,9,5".split( splitreg ); p++;
pieces[ p ] = "0,4,12,4".split( splitreg ); p++;
pieces[ p ] = "0,4,18,5".split( splitreg ); p++;
pieces[ p ] = "0,4,19,3".split( splitreg ); p++;
pieces[ p ] = "0,4,19,4".split( splitreg ); p++;
pieces[ p ] = "0,4,20,1".split( splitreg ); p++;
pieces[ p ] = "0,4,21,2".split( splitreg ); p++;
pieces[ p ] = "0,4,22,1".split( splitreg ); p++;
pieces[ p ] = "0,4,23,2".split( splitreg ); p++;
pieces[ p ] = "0,4,24,3".split( splitreg ); p++;
pieces[ p ] = "0,5,7,3".split( splitreg ); p++;
pieces[ p ] = "0,5,8,2".split( splitreg ); p++;
pieces[ p ] = "0,5,10,4".split( splitreg ); p++;
pieces[ p ] = "0,5,12,5".split( splitreg ); p++;
pieces[ p ] = "0,5,14,4".split( splitreg ); p++;
pieces[ p ] = "0,5,15,5".split( splitreg ); p++;
pieces[ p ] = "0,5,16,1".split( splitreg ); p++;
pieces[ p ] = "0,5,18,2".split( splitreg ); p++;
pieces[ p ] = "0,5,23,4".split( splitreg ); p++;
pieces[ p ] = "0,5,23,5".split( splitreg ); p++;
pieces[ p ] = "0,5,24,2".split( splitreg ); p++;
pieces[ p ] = "0,5,24,4".split( splitreg ); p++;
pieces[ p ] = "6,6,7,17".split( splitreg ); p++;
pieces[ p ] = "6,6,12,23".split( splitreg ); p++;
pieces[ p ] = "6,6,14,7".split( splitreg ); p++;
pieces[ p ] = "6,6,23,16".split( splitreg ); p++;
pieces[ p ] = "6,7,11,21".split( splitreg ); p++;
pieces[ p ] = "6,8,13,22".split( splitreg ); p++;
pieces[ p ] = "6,9,8,7".split( splitreg ); p++;
pieces[ p ] = "6,9,8,16".split( splitreg ); p++;
pieces[ p ] = "6,9,9,18".split( splitreg ); p++;
pieces[ p ] = "6,9,11,23".split( splitreg ); p++;
pieces[ p ] = "6,9,17,17".split( splitreg ); p++;
pieces[ p ] = "6,9,23,22".split( splitreg ); p++;
pieces[ p ] = "6,10,6,18".split( splitreg ); p++;
pieces[ p ] = "6,10,7,21".split( splitreg ); p++;
pieces[ p ] = "6,10,9,16".split( splitreg ); p++;
pieces[ p ] = "6,10,9,17".split( splitreg ); p++;
pieces[ p ] = "6,10,11,8".split( splitreg ); p++;
pieces[ p ] = "6,10,13,15".split( splitreg ); p++;
pieces[ p ] = "6,11,9,13".split( splitreg ); p++;
pieces[ p ] = "6,11,16,24".split( splitreg ); p++;
pieces[ p ] = "6,11,18,11".split( splitreg ); p++;
pieces[ p ] = "6,11,22,14".split( splitreg ); p++;
pieces[ p ] = "6,12,15,24".split( splitreg ); p++;
pieces[ p ] = "6,12,23,17".split( splitreg ); p++;
pieces[ p ] = "6,13,8,22".split( splitreg ); p++;
pieces[ p ] = "6,13,14,14".split( splitreg ); p++;
pieces[ p ] = "6,13,16,15".split( splitreg ); p++;
pieces[ p ] = "6,14,7,11".split( splitreg ); p++;
pieces[ p ] = "6,14,14,21".split( splitreg ); p++;
pieces[ p ] = "6,14,16,23".split( splitreg ); p++;
pieces[ p ] = "6,14,21,23".split( splitreg ); p++;
pieces[ p ] = "6,14,22,22".split( splitreg ); p++;
pieces[ p ] = "6,16,9,23".split( splitreg ); p++;
pieces[ p ] = "6,16,17,24".split( splitreg ); p++;
pieces[ p ] = "6,17,18,14".split( splitreg ); p++;
pieces[ p ] = "6,18,6,21".split( splitreg ); p++;
pieces[ p ] = "6,18,16,20".split( splitreg ); p++;
pieces[ p ] = "6,19,21,20".split( splitreg ); p++;
pieces[ p ] = "6,20,18,19".split( splitreg ); p++;
pieces[ p ] = "6,20,19,12".split( splitreg ); p++;
pieces[ p ] = "6,20,21,19".split( splitreg ); p++;
pieces[ p ] = "6,21,11,24".split( splitreg ); p++;
pieces[ p ] = "6,21,17,12".split( splitreg ); p++;
pieces[ p ] = "6,23,22,20".split( splitreg ); p++;
pieces[ p ] = "6,23,22,21".split( splitreg ); p++;
pieces[ p ] = "6,24,20,10".split( splitreg ); p++;
pieces[ p ] = "7,7,14,23".split( splitreg ); p++;
pieces[ p ] = "7,7,15,8".split( splitreg ); p++;
pieces[ p ] = "7,7,15,22".split( splitreg ); p++;
pieces[ p ] = "7,7,24,17".split( splitreg ); p++;
pieces[ p ] = "7,9,9,24".split( splitreg ); p++;
pieces[ p ] = "7,9,13,8".split( splitreg ); p++;
pieces[ p ] = "7,9,15,20".split( splitreg ); p++;
pieces[ p ] = "7,9,15,23".split( splitreg ); p++;
pieces[ p ] = "7,9,23,22".split( splitreg ); p++;
pieces[ p ] = "7,11,8,13".split( splitreg ); p++;
pieces[ p ] = "7,11,14,10".split( splitreg ); p++;
pieces[ p ] = "7,11,22,21".split( splitreg ); p++;
pieces[ p ] = "7,13,16,18".split( splitreg ); p++;
pieces[ p ] = "7,13,22,9".split( splitreg ); p++;
pieces[ p ] = "7,14,7,24".split( splitreg ); p++;
pieces[ p ] = "7,15,7,23".split( splitreg ); p++;
pieces[ p ] = "7,15,14,21".split( splitreg ); p++;
pieces[ p ] = "7,15,17,21".split( splitreg ); p++;
pieces[ p ] = "7,15,20,16".split( splitreg ); p++;
pieces[ p ] = "7,16,11,9".split( splitreg ); p++;
pieces[ p ] = "7,16,12,18".split( splitreg ); p++;
pieces[ p ] = "7,16,15,19".split( splitreg ); p++;
pieces[ p ] = "7,16,20,15".split( splitreg ); p++;
pieces[ p ] = "7,16,23,15".split( splitreg ); p++;
pieces[ p ] = "7,17,12,24".split( splitreg ); p++;
pieces[ p ] = "7,17,19,17".split( splitreg ); p++;
pieces[ p ] = "7,17,20,16".split( splitreg ); p++;
pieces[ p ] = "7,17,23,8".split( splitreg ); p++;
pieces[ p ] = "7,18,13,8".split( splitreg ); p++;
pieces[ p ] = "7,18,23,21".split( splitreg ); p++;
pieces[ p ] = "7,19,22,8".split( splitreg ); p++;
pieces[ p ] = "7,20,13,12".split( splitreg ); p++;
pieces[ p ] = "7,20,17,9".split( splitreg ); p++;
pieces[ p ] = "7,20,19,19".split( splitreg ); p++;
pieces[ p ] = "7,21,10,21".split( splitreg ); p++;
pieces[ p ] = "7,21,14,11".split( splitreg ); p++;
pieces[ p ] = "7,23,23,19".split( splitreg ); p++;
pieces[ p ] = "7,24,10,22".split( splitreg ); p++;
pieces[ p ] = "8,8,21,21".split( splitreg ); p++;
pieces[ p ] = "8,8,24,10".split( splitreg ); p++;
pieces[ p ] = "8,9,12,15".split( splitreg ); p++;
pieces[ p ] = "8,9,17,20".split( splitreg ); p++;
pieces[ p ] = "8,9,22,16".split( splitreg ); p++;
pieces[ p ] = "8,10,16,10".split( splitreg ); p++;
pieces[ p ] = "8,10,18,13".split( splitreg ); p++;
pieces[ p ] = "8,10,23,14".split( splitreg ); p++;
pieces[ p ] = "8,11,9,18".split( splitreg ); p++;
pieces[ p ] = "8,11,11,16".split( splitreg ); p++;
pieces[ p ] = "8,12,14,23".split( splitreg ); p++;
pieces[ p ] = "8,12,18,12".split( splitreg ); p++;
pieces[ p ] = "8,14,22,17".split( splitreg ); p++;
pieces[ p ] = "8,14,24,11".split( splitreg ); p++;
pieces[ p ] = "8,15,18,23".split( splitreg ); p++;
pieces[ p ] = "8,15,19,21".split( splitreg ); p++;
pieces[ p ] = "8,16,10,11".split( splitreg ); p++;
pieces[ p ] = "8,16,22,18".split( splitreg ); p++;
pieces[ p ] = "8,17,23,24".split( splitreg ); p++;
pieces[ p ] = "8,18,15,16".split( splitreg ); p++;
pieces[ p ] = "8,18,20,11".split( splitreg ); p++;
pieces[ p ] = "8,18,23,19".split( splitreg ); p++;
pieces[ p ] = "8,19,8,24".split( splitreg ); p++;
pieces[ p ] = "8,20,12,13".split( splitreg ); p++;
pieces[ p ] = "8,20,21,17".split( splitreg ); p++;
pieces[ p ] = "8,21,12,24".split( splitreg ); p++;
pieces[ p ] = "8,21,19,21".split( splitreg ); p++;
pieces[ p ] = "8,21,24,19".split( splitreg ); p++;
pieces[ p ] = "8,22,10,16".split( splitreg ); p++;
pieces[ p ] = "8,22,13,20".split( splitreg ); p++;
pieces[ p ] = "8,23,14,14".split( splitreg ); p++;
pieces[ p ] = "8,23,18,17".split( splitreg ); p++;
pieces[ p ] = "8,23,18,19".split( splitreg ); p++;
pieces[ p ] = "8,24,20,17".split( splitreg ); p++;
pieces[ p ] = "8,24,24,12".split( splitreg ); p++;
pieces[ p ] = "9,9,17,12".split( splitreg ); p++;
pieces[ p ] = "9,10,14,24".split( splitreg ); p++;
pieces[ p ] = "9,10,23,17".split( splitreg ); p++;
pieces[ p ] = "9,11,18,17".split( splitreg ); p++;
pieces[ p ] = "9,12,24,16".split( splitreg ); p++;
pieces[ p ] = "9,13,13,21".split( splitreg ); p++;
pieces[ p ] = "9,13,16,22".split( splitreg ); p++;
pieces[ p ] = "9,14,19,22".split( splitreg ); p++;
pieces[ p ] = "9,15,16,14".split( splitreg ); p++;
pieces[ p ] = "9,15,20,16".split( splitreg ); p++;
pieces[ p ] = "9,16,10,20".split( splitreg ); p++;
pieces[ p ] = "9,16,15,11".split( splitreg ); p++;
pieces[ p ] = "9,16,22,13".split( splitreg ); p++;
pieces[ p ] = "9,17,13,14".split( splitreg ); p++;
pieces[ p ] = "9,17,15,21".split( splitreg ); p++;
pieces[ p ] = "9,18,21,24".split( splitreg ); p++;
pieces[ p ] = "9,19,10,20".split( splitreg ); p++;
pieces[ p ] = "9,19,15,23".split( splitreg ); p++;
pieces[ p ] = "9,19,22,15".split( splitreg ); p++;
pieces[ p ] = "9,20,14,23".split( splitreg ); p++;
pieces[ p ] = "9,21,12,21".split( splitreg ); p++;
pieces[ p ] = "9,21,16,18".split( splitreg ); p++;
pieces[ p ] = "9,21,20,11".split( splitreg ); p++;
pieces[ p ] = "9,22,22,22".split( splitreg ); p++;
pieces[ p ] = "9,23,15,22".split( splitreg ); p++;
pieces[ p ] = "9,24,23,14".split( splitreg ); p++;
pieces[ p ] = "10,10,12,24".split( splitreg ); p++;
pieces[ p ] = "10,10,15,15".split( splitreg ); p++;
pieces[ p ] = "10,10,15,21".split( splitreg ); p++;
pieces[ p ] = "10,10,18,15".split( splitreg ); p++;
pieces[ p ] = "10,10,20,20".split( splitreg ); p++;
pieces[ p ] = "10,11,18,23".split( splitreg ); p++;
pieces[ p ] = "10,12,17,11".split( splitreg ); p++;
pieces[ p ] = "10,13,16,13".split( splitreg ); p++;
pieces[ p ] = "10,13,20,12".split( splitreg ); p++;
pieces[ p ] = "10,13,20,14".split( splitreg ); p++;
pieces[ p ] = "10,14,21,13".split( splitreg ); p++;
pieces[ p ] = "10,15,19,11".split( splitreg ); p++;
pieces[ p ] = "10,15,20,18".split( splitreg ); p++;
pieces[ p ] = "10,16,14,14".split( splitreg ); p++;
pieces[ p ] = "10,16,14,17".split( splitreg ); p++;
pieces[ p ] = "10,18,11,12".split( splitreg ); p++;
pieces[ p ] = "10,18,18,15".split( splitreg ); p++;
pieces[ p ] = "10,19,17,24".split( splitreg ); p++;
pieces[ p ] = "10,19,18,17".split( splitreg ); p++;
pieces[ p ] = "10,20,17,13".split( splitreg ); p++;
pieces[ p ] = "10,20,17,22".split( splitreg ); p++;
pieces[ p ] = "10,21,19,19".split( splitreg ); p++;
pieces[ p ] = "10,23,19,18".split( splitreg ); p++;
pieces[ p ] = "10,23,24,13".split( splitreg ); p++;
pieces[ p ] = "10,24,19,11".split( splitreg ); p++;
pieces[ p ] = "11,11,20,20".split( splitreg ); p++;
pieces[ p ] = "11,12,17,19".split( splitreg ); p++;
pieces[ p ] = "11,12,17,24".split( splitreg ); p++;
pieces[ p ] = "11,12,18,12".split( splitreg ); p++;
pieces[ p ] = "11,13,13,23".split( splitreg ); p++;
pieces[ p ] = "11,14,16,16".split( splitreg ); p++;
pieces[ p ] = "11,14,21,17".split( splitreg ); p++;
pieces[ p ] = "11,15,13,24".split( splitreg ); p++;
pieces[ p ] = "11,15,16,13".split( splitreg ); p++;
pieces[ p ] = "11,15,18,23".split( splitreg ); p++;
pieces[ p ] = "11,15,24,19".split( splitreg ); p++;
pieces[ p ] = "11,16,20,22".split( splitreg ); p++;
pieces[ p ] = "11,17,24,20".split( splitreg ); p++;
pieces[ p ] = "11,18,13,19".split( splitreg ); p++;
pieces[ p ] = "11,18,23,18".split( splitreg ); p++;
pieces[ p ] = "11,19,20,14".split( splitreg ); p++;
pieces[ p ] = "11,19,20,17".split( splitreg ); p++;
pieces[ p ] = "11,20,11,22".split( splitreg ); p++;
pieces[ p ] = "11,20,19,15".split( splitreg ); p++;
pieces[ p ] = "11,21,13,19".split( splitreg ); p++;
pieces[ p ] = "11,22,18,13".split( splitreg ); p++;
pieces[ p ] = "11,23,13,22".split( splitreg ); p++;
pieces[ p ] = "12,12,15,20".split( splitreg ); p++;
pieces[ p ] = "12,12,22,14".split( splitreg ); p++;
pieces[ p ] = "12,12,23,16".split( splitreg ); p++;
pieces[ p ] = "12,13,21,17".split( splitreg ); p++;
pieces[ p ] = "12,14,19,18".split( splitreg ); p++;
pieces[ p ] = "12,14,20,13".split( splitreg ); p++;
pieces[ p ] = "12,15,16,13".split( splitreg ); p++;
pieces[ p ] = "12,15,21,23".split( splitreg ); p++;
pieces[ p ] = "12,17,14,23".split( splitreg ); p++;
pieces[ p ] = "12,18,20,21".split( splitreg ); p++;
pieces[ p ] = "12,18,22,17".split( splitreg ); p++;
pieces[ p ] = "12,19,15,14".split( splitreg ); p++;
pieces[ p ] = "12,19,20,17".split( splitreg ); p++;
pieces[ p ] = "12,20,18,13".split( splitreg ); p++;
pieces[ p ] = "12,20,22,18".split( splitreg ); p++;
pieces[ p ] = "12,22,14,15".split( splitreg ); p++;
pieces[ p ] = "12,22,17,13".split( splitreg ); p++;
pieces[ p ] = "12,22,24,19".split( splitreg ); p++;
pieces[ p ] = "12,23,23,16".split( splitreg ); p++;
pieces[ p ] = "12,24,18,14".split( splitreg ); p++;
pieces[ p ] = "13,13,16,14".split( splitreg ); p++;
pieces[ p ] = "13,16,17,16".split( splitreg ); p++;
pieces[ p ] = "13,16,24,21".split( splitreg ); p++;
pieces[ p ] = "13,17,18,14".split( splitreg ); p++;
pieces[ p ] = "13,18,17,24".split( splitreg ); p++;
pieces[ p ] = "13,18,24,22".split( splitreg ); p++;
pieces[ p ] = "13,19,15,18".split( splitreg ); p++;
pieces[ p ] = "13,19,17,19".split( splitreg ); p++;
pieces[ p ] = "13,20,22,20".split( splitreg ); p++;
pieces[ p ] = "13,22,23,21".split( splitreg ); p++;
pieces[ p ] = "14,16,24,24".split( splitreg ); p++;
pieces[ p ] = "14,18,22,23".split( splitreg ); p++;
pieces[ p ] = "14,19,19,19".split( splitreg ); p++;
pieces[ p ] = "14,20,24,21".split( splitreg ); p++;
pieces[ p ] = "14,21,21,19".split( splitreg ); p++;
pieces[ p ] = "14,22,19,16".split( splitreg ); p++;
pieces[ p ] = "15,17,24,18".split( splitreg ); p++;
pieces[ p ] = "15,19,15,22".split( splitreg ); p++;
pieces[ p ] = "15,20,15,24".split( splitreg ); p++;
pieces[ p ] = "15,20,21,21".split( splitreg ); p++;
pieces[ p ] = "15,24,21,22".split( splitreg ); p++;
pieces[ p ] = "16,17,24,22".split( splitreg ); p++;
pieces[ p ] = "16,20,19,17".split( splitreg ); p++;
pieces[ p ] = "16,21,24,23".split( splitreg ); p++;
pieces[ p ] = "16,24,21,19".split( splitreg ); p++;
pieces[ p ] = "17,18,19,22".split( splitreg ); p++;
pieces[ p ] = "17,19,22,22".split( splitreg ); p++;
pieces[ p ] = "21,22,22,24".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

