
puzzles[ nb_puzzles ] = "brendan/pieces_19x06.txt.js,Brendan 19x06".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_19x06.txt.js" ) {

board_w = 19;
board_h = 6;


pieces[ p ] = "0,0,1,1".split( splitreg ); p++;
pieces[ p ] = "0,0,3,2".split( splitreg ); p++;
pieces[ p ] = "0,0,5,1".split( splitreg ); p++;
pieces[ p ] = "0,0,5,4".split( splitreg ); p++;
pieces[ p ] = "0,1,6,2".split( splitreg ); p++;
pieces[ p ] = "0,1,8,4".split( splitreg ); p++;
pieces[ p ] = "0,1,9,4".split( splitreg ); p++;
pieces[ p ] = "0,1,10,4".split( splitreg ); p++;
pieces[ p ] = "0,1,11,3".split( splitreg ); p++;
pieces[ p ] = "0,1,13,1".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,15,4".split( splitreg ); p++;
pieces[ p ] = "0,1,15,5".split( splitreg ); p++;
pieces[ p ] = "0,2,7,1".split( splitreg ); p++;
pieces[ p ] = "0,2,7,4".split( splitreg ); p++;
pieces[ p ] = "0,2,7,5".split( splitreg ); p++;
pieces[ p ] = "0,2,8,2".split( splitreg ); p++;
pieces[ p ] = "0,2,9,5".split( splitreg ); p++;
pieces[ p ] = "0,2,10,3".split( splitreg ); p++;
pieces[ p ] = "0,2,11,1".split( splitreg ); p++;
pieces[ p ] = "0,2,13,1".split( splitreg ); p++;
pieces[ p ] = "0,2,15,1".split( splitreg ); p++;
pieces[ p ] = "0,3,8,1".split( splitreg ); p++;
pieces[ p ] = "0,3,9,5".split( splitreg ); p++;
pieces[ p ] = "0,3,10,2".split( splitreg ); p++;
pieces[ p ] = "0,3,11,2".split( splitreg ); p++;
pieces[ p ] = "0,3,11,5".split( splitreg ); p++;
pieces[ p ] = "0,3,13,1".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,15,5".split( splitreg ); p++;
pieces[ p ] = "0,4,8,3".split( splitreg ); p++;
pieces[ p ] = "0,4,8,4".split( splitreg ); p++;
pieces[ p ] = "0,4,9,3".split( splitreg ); p++;
pieces[ p ] = "0,4,9,5".split( splitreg ); p++;
pieces[ p ] = "0,4,11,2".split( splitreg ); p++;
pieces[ p ] = "0,4,12,3".split( splitreg ); p++;
pieces[ p ] = "0,4,13,2".split( splitreg ); p++;
pieces[ p ] = "0,4,14,3".split( splitreg ); p++;
pieces[ p ] = "0,4,15,4".split( splitreg ); p++;
pieces[ p ] = "0,5,6,4".split( splitreg ); p++;
pieces[ p ] = "0,5,7,1".split( splitreg ); p++;
pieces[ p ] = "0,5,8,3".split( splitreg ); p++;
pieces[ p ] = "0,5,9,5".split( splitreg ); p++;
pieces[ p ] = "0,5,11,5".split( splitreg ); p++;
pieces[ p ] = "0,5,12,3".split( splitreg ); p++;
pieces[ p ] = "0,5,15,2".split( splitreg ); p++;
pieces[ p ] = "6,6,6,7".split( splitreg ); p++;
pieces[ p ] = "6,6,13,13".split( splitreg ); p++;
pieces[ p ] = "6,6,15,8".split( splitreg ); p++;
pieces[ p ] = "6,6,15,15".split( splitreg ); p++;
pieces[ p ] = "6,7,7,7".split( splitreg ); p++;
pieces[ p ] = "6,7,15,14".split( splitreg ); p++;
pieces[ p ] = "6,8,11,15".split( splitreg ); p++;
pieces[ p ] = "6,8,14,8".split( splitreg ); p++;
pieces[ p ] = "6,8,14,11".split( splitreg ); p++;
pieces[ p ] = "6,9,11,12".split( splitreg ); p++;
pieces[ p ] = "6,9,12,10".split( splitreg ); p++;
pieces[ p ] = "6,9,14,7".split( splitreg ); p++;
pieces[ p ] = "6,10,7,14".split( splitreg ); p++;
pieces[ p ] = "6,10,12,12".split( splitreg ); p++;
pieces[ p ] = "6,10,13,14".split( splitreg ); p++;
pieces[ p ] = "6,11,14,10".split( splitreg ); p++;
pieces[ p ] = "6,11,14,12".split( splitreg ); p++;
pieces[ p ] = "6,12,6,13".split( splitreg ); p++;
pieces[ p ] = "6,12,12,10".split( splitreg ); p++;
pieces[ p ] = "6,12,12,12".split( splitreg ); p++;
pieces[ p ] = "6,12,12,15".split( splitreg ); p++;
pieces[ p ] = "6,12,15,15".split( splitreg ); p++;
pieces[ p ] = "6,13,7,14".split( splitreg ); p++;
pieces[ p ] = "6,14,14,10".split( splitreg ); p++;
pieces[ p ] = "7,7,13,12".split( splitreg ); p++;
pieces[ p ] = "7,8,8,9".split( splitreg ); p++;
pieces[ p ] = "7,8,8,15".split( splitreg ); p++;
pieces[ p ] = "7,8,14,12".split( splitreg ); p++;
pieces[ p ] = "7,9,13,8".split( splitreg ); p++;
pieces[ p ] = "7,9,15,9".split( splitreg ); p++;
pieces[ p ] = "7,10,10,14".split( splitreg ); p++;
pieces[ p ] = "7,10,11,9".split( splitreg ); p++;
pieces[ p ] = "7,10,12,15".split( splitreg ); p++;
pieces[ p ] = "7,11,8,13".split( splitreg ); p++;
pieces[ p ] = "7,11,12,10".split( splitreg ); p++;
pieces[ p ] = "7,12,10,8".split( splitreg ); p++;
pieces[ p ] = "7,12,14,9".split( splitreg ); p++;
pieces[ p ] = "7,12,15,14".split( splitreg ); p++;
pieces[ p ] = "7,13,8,14".split( splitreg ); p++;
pieces[ p ] = "7,13,10,9".split( splitreg ); p++;
pieces[ p ] = "7,14,13,9".split( splitreg ); p++;
pieces[ p ] = "7,15,10,10".split( splitreg ); p++;
pieces[ p ] = "7,15,12,9".split( splitreg ); p++;
pieces[ p ] = "8,8,8,15".split( splitreg ); p++;
pieces[ p ] = "8,8,15,9".split( splitreg ); p++;
pieces[ p ] = "8,9,9,15".split( splitreg ); p++;
pieces[ p ] = "8,10,10,9".split( splitreg ); p++;
pieces[ p ] = "8,10,10,12".split( splitreg ); p++;
pieces[ p ] = "8,10,15,15".split( splitreg ); p++;
pieces[ p ] = "8,12,14,11".split( splitreg ); p++;
pieces[ p ] = "8,13,12,9".split( splitreg ); p++;
pieces[ p ] = "8,13,13,11".split( splitreg ); p++;
pieces[ p ] = "9,9,11,12".split( splitreg ); p++;
pieces[ p ] = "9,10,11,12".split( splitreg ); p++;
pieces[ p ] = "9,11,13,13".split( splitreg ); p++;
pieces[ p ] = "9,13,10,12".split( splitreg ); p++;
pieces[ p ] = "9,14,10,12".split( splitreg ); p++;
pieces[ p ] = "9,14,11,15".split( splitreg ); p++;
pieces[ p ] = "9,14,13,10".split( splitreg ); p++;
pieces[ p ] = "9,14,14,14".split( splitreg ); p++;
pieces[ p ] = "10,11,13,11".split( splitreg ); p++;
pieces[ p ] = "10,11,13,13".split( splitreg ); p++;
pieces[ p ] = "10,13,11,12".split( splitreg ); p++;
pieces[ p ] = "10,14,13,14".split( splitreg ); p++;
pieces[ p ] = "11,11,11,13".split( splitreg ); p++;
pieces[ p ] = "11,11,11,15".split( splitreg ); p++;
pieces[ p ] = "11,11,15,14".split( splitreg ); p++;
pieces[ p ] = "13,15,15,14".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

