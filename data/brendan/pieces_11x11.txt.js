
puzzles[ nb_puzzles ] = "brendan/pieces_11x11.txt.js,Brendan 11x11".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_11x11.txt.js" ) {

board_w = 11;
board_h = 11;


pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,0,3,1".split( splitreg ); p++;
pieces[ p ] = "0,0,3,4".split( splitreg ); p++;
pieces[ p ] = "0,1,5,3".split( splitreg ); p++;
pieces[ p ] = "0,1,6,2".split( splitreg ); p++;
pieces[ p ] = "0,1,6,4".split( splitreg ); p++;
pieces[ p ] = "0,1,7,2".split( splitreg ); p++;
pieces[ p ] = "0,1,9,3".split( splitreg ); p++;
pieces[ p ] = "0,1,12,2".split( splitreg ); p++;
pieces[ p ] = "0,1,12,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,4".split( splitreg ); p++;
pieces[ p ] = "0,2,5,3".split( splitreg ); p++;
pieces[ p ] = "0,2,5,4".split( splitreg ); p++;
pieces[ p ] = "0,2,7,1".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,8,1".split( splitreg ); p++;
pieces[ p ] = "0,2,8,2".split( splitreg ); p++;
pieces[ p ] = "0,2,10,4".split( splitreg ); p++;
pieces[ p ] = "0,2,13,2".split( splitreg ); p++;
pieces[ p ] = "0,2,15,1".split( splitreg ); p++;
pieces[ p ] = "0,3,5,1".split( splitreg ); p++;
pieces[ p ] = "0,3,7,2".split( splitreg ); p++;
pieces[ p ] = "0,3,7,4".split( splitreg ); p++;
pieces[ p ] = "0,3,9,2".split( splitreg ); p++;
pieces[ p ] = "0,3,10,4".split( splitreg ); p++;
pieces[ p ] = "0,3,11,1".split( splitreg ); p++;
pieces[ p ] = "0,3,12,1".split( splitreg ); p++;
pieces[ p ] = "0,3,15,2".split( splitreg ); p++;
pieces[ p ] = "0,4,7,3".split( splitreg ); p++;
pieces[ p ] = "0,4,8,1".split( splitreg ); p++;
pieces[ p ] = "0,4,9,1".split( splitreg ); p++;
pieces[ p ] = "0,4,9,2".split( splitreg ); p++;
pieces[ p ] = "0,4,9,3".split( splitreg ); p++;
pieces[ p ] = "0,4,9,4".split( splitreg ); p++;
pieces[ p ] = "0,4,10,1".split( splitreg ); p++;
pieces[ p ] = "0,4,11,4".split( splitreg ); p++;
pieces[ p ] = "0,4,15,2".split( splitreg ); p++;
pieces[ p ] = "0,4,15,4".split( splitreg ); p++;
pieces[ p ] = "5,5,8,13".split( splitreg ); p++;
pieces[ p ] = "5,5,8,14".split( splitreg ); p++;
pieces[ p ] = "5,6,7,9".split( splitreg ); p++;
pieces[ p ] = "5,6,8,10".split( splitreg ); p++;
pieces[ p ] = "5,6,11,9".split( splitreg ); p++;
pieces[ p ] = "5,6,11,15".split( splitreg ); p++;
pieces[ p ] = "5,6,12,11".split( splitreg ); p++;
pieces[ p ] = "5,6,13,10".split( splitreg ); p++;
pieces[ p ] = "5,6,15,12".split( splitreg ); p++;
pieces[ p ] = "5,7,8,8".split( splitreg ); p++;
pieces[ p ] = "5,7,9,11".split( splitreg ); p++;
pieces[ p ] = "5,7,11,11".split( splitreg ); p++;
pieces[ p ] = "5,7,11,14".split( splitreg ); p++;
pieces[ p ] = "5,7,14,7".split( splitreg ); p++;
pieces[ p ] = "5,7,15,10".split( splitreg ); p++;
pieces[ p ] = "5,8,6,8".split( splitreg ); p++;
pieces[ p ] = "5,8,12,6".split( splitreg ); p++;
pieces[ p ] = "5,9,11,13".split( splitreg ); p++;
pieces[ p ] = "5,10,6,11".split( splitreg ); p++;
pieces[ p ] = "5,10,9,8".split( splitreg ); p++;
pieces[ p ] = "5,11,14,8".split( splitreg ); p++;
pieces[ p ] = "5,12,14,10".split( splitreg ); p++;
pieces[ p ] = "5,13,8,6".split( splitreg ); p++;
pieces[ p ] = "5,13,10,15".split( splitreg ); p++;
pieces[ p ] = "5,13,11,14".split( splitreg ); p++;
pieces[ p ] = "5,14,9,15".split( splitreg ); p++;
pieces[ p ] = "5,15,6,9".split( splitreg ); p++;
pieces[ p ] = "5,15,8,13".split( splitreg ); p++;
pieces[ p ] = "6,6,12,15".split( splitreg ); p++;
pieces[ p ] = "6,6,13,7".split( splitreg ); p++;
pieces[ p ] = "6,6,14,11".split( splitreg ); p++;
pieces[ p ] = "6,7,13,8".split( splitreg ); p++;
pieces[ p ] = "6,8,9,10".split( splitreg ); p++;
pieces[ p ] = "6,9,13,12".split( splitreg ); p++;
pieces[ p ] = "6,10,11,15".split( splitreg ); p++;
pieces[ p ] = "6,11,11,15".split( splitreg ); p++;
pieces[ p ] = "6,11,13,12".split( splitreg ); p++;
pieces[ p ] = "6,12,7,8".split( splitreg ); p++;
pieces[ p ] = "6,12,13,9".split( splitreg ); p++;
pieces[ p ] = "6,13,14,8".split( splitreg ); p++;
pieces[ p ] = "6,14,7,15".split( splitreg ); p++;
pieces[ p ] = "6,14,15,10".split( splitreg ); p++;
pieces[ p ] = "6,15,7,10".split( splitreg ); p++;
pieces[ p ] = "6,15,8,14".split( splitreg ); p++;
pieces[ p ] = "6,15,12,8".split( splitreg ); p++;
pieces[ p ] = "7,7,9,13".split( splitreg ); p++;
pieces[ p ] = "7,8,10,10".split( splitreg ); p++;
pieces[ p ] = "7,8,10,14".split( splitreg ); p++;
pieces[ p ] = "7,9,10,12".split( splitreg ); p++;
pieces[ p ] = "7,9,11,9".split( splitreg ); p++;
pieces[ p ] = "7,9,12,14".split( splitreg ); p++;
pieces[ p ] = "7,11,15,12".split( splitreg ); p++;
pieces[ p ] = "7,12,11,14".split( splitreg ); p++;
pieces[ p ] = "7,12,15,11".split( splitreg ); p++;
pieces[ p ] = "7,13,9,13".split( splitreg ); p++;
pieces[ p ] = "7,13,12,14".split( splitreg ); p++;
pieces[ p ] = "7,14,8,11".split( splitreg ); p++;
pieces[ p ] = "7,14,9,10".split( splitreg ); p++;
pieces[ p ] = "7,15,12,14".split( splitreg ); p++;
pieces[ p ] = "8,8,8,10".split( splitreg ); p++;
pieces[ p ] = "8,11,15,12".split( splitreg ); p++;
pieces[ p ] = "8,12,14,12".split( splitreg ); p++;
pieces[ p ] = "8,13,14,15".split( splitreg ); p++;
pieces[ p ] = "8,13,15,13".split( splitreg ); p++;
pieces[ p ] = "8,14,11,12".split( splitreg ); p++;
pieces[ p ] = "8,14,11,14".split( splitreg ); p++;
pieces[ p ] = "8,15,10,10".split( splitreg ); p++;
pieces[ p ] = "9,9,9,15".split( splitreg ); p++;
pieces[ p ] = "9,9,13,12".split( splitreg ); p++;
pieces[ p ] = "9,11,14,15".split( splitreg ); p++;
pieces[ p ] = "9,12,11,15".split( splitreg ); p++;
pieces[ p ] = "9,13,10,12".split( splitreg ); p++;
pieces[ p ] = "9,14,15,10".split( splitreg ); p++;
pieces[ p ] = "10,10,10,11".split( splitreg ); p++;
pieces[ p ] = "10,11,14,11".split( splitreg ); p++;
pieces[ p ] = "10,12,13,13".split( splitreg ); p++;
pieces[ p ] = "10,13,13,14".split( splitreg ); p++;
pieces[ p ] = "10,14,13,12".split( splitreg ); p++;
pieces[ p ] = "10,15,12,13".split( splitreg ); p++;
pieces[ p ] = "11,15,12,13".split( splitreg ); p++;
pieces[ p ] = "12,13,14,13".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

