
puzzles[ nb_puzzles ] = "brendan/pieces_14x09.txt.js,Brendan 14x09".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_14x09.txt.js" ) {

board_w = 14;
board_h = 9;


pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,1,4".split( splitreg ); p++;
pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,0,3,1".split( splitreg ); p++;
pieces[ p ] = "0,1,6,1".split( splitreg ); p++;
pieces[ p ] = "0,1,6,3".split( splitreg ); p++;
pieces[ p ] = "0,1,7,1".split( splitreg ); p++;
pieces[ p ] = "0,1,9,3".split( splitreg ); p++;
pieces[ p ] = "0,1,10,4".split( splitreg ); p++;
pieces[ p ] = "0,1,12,4".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,4".split( splitreg ); p++;
pieces[ p ] = "0,1,15,3".split( splitreg ); p++;
pieces[ p ] = "0,2,5,4".split( splitreg ); p++;
pieces[ p ] = "0,2,7,1".split( splitreg ); p++;
pieces[ p ] = "0,2,7,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,8,1".split( splitreg ); p++;
pieces[ p ] = "0,2,9,1".split( splitreg ); p++;
pieces[ p ] = "0,2,11,1".split( splitreg ); p++;
pieces[ p ] = "0,2,11,2".split( splitreg ); p++;
pieces[ p ] = "0,2,11,3".split( splitreg ); p++;
pieces[ p ] = "0,2,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,8,4".split( splitreg ); p++;
pieces[ p ] = "0,3,9,1".split( splitreg ); p++;
pieces[ p ] = "0,3,9,3".split( splitreg ); p++;
pieces[ p ] = "0,3,9,4".split( splitreg ); p++;
pieces[ p ] = "0,3,10,2".split( splitreg ); p++;
pieces[ p ] = "0,3,13,2".split( splitreg ); p++;
pieces[ p ] = "0,3,13,4".split( splitreg ); p++;
pieces[ p ] = "0,3,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,5,4".split( splitreg ); p++;
pieces[ p ] = "0,4,7,2".split( splitreg ); p++;
pieces[ p ] = "0,4,7,4".split( splitreg ); p++;
pieces[ p ] = "0,4,8,1".split( splitreg ); p++;
pieces[ p ] = "0,4,8,2".split( splitreg ); p++;
pieces[ p ] = "0,4,9,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,3".split( splitreg ); p++;
pieces[ p ] = "0,4,13,2".split( splitreg ); p++;
pieces[ p ] = "0,4,15,2".split( splitreg ); p++;
pieces[ p ] = "5,5,6,6".split( splitreg ); p++;
pieces[ p ] = "5,5,13,12".split( splitreg ); p++;
pieces[ p ] = "5,5,14,6".split( splitreg ); p++;
pieces[ p ] = "5,5,14,12".split( splitreg ); p++;
pieces[ p ] = "5,5,15,14".split( splitreg ); p++;
pieces[ p ] = "5,7,5,12".split( splitreg ); p++;
pieces[ p ] = "5,7,6,15".split( splitreg ); p++;
pieces[ p ] = "5,7,9,9".split( splitreg ); p++;
pieces[ p ] = "5,7,14,12".split( splitreg ); p++;
pieces[ p ] = "5,8,11,8".split( splitreg ); p++;
pieces[ p ] = "5,8,11,9".split( splitreg ); p++;
pieces[ p ] = "5,8,13,7".split( splitreg ); p++;
pieces[ p ] = "5,9,6,15".split( splitreg ); p++;
pieces[ p ] = "5,10,8,7".split( splitreg ); p++;
pieces[ p ] = "5,10,8,14".split( splitreg ); p++;
pieces[ p ] = "5,10,12,7".split( splitreg ); p++;
pieces[ p ] = "5,10,13,12".split( splitreg ); p++;
pieces[ p ] = "5,11,9,12".split( splitreg ); p++;
pieces[ p ] = "5,11,11,10".split( splitreg ); p++;
pieces[ p ] = "5,12,10,12".split( splitreg ); p++;
pieces[ p ] = "5,13,10,6".split( splitreg ); p++;
pieces[ p ] = "5,13,11,7".split( splitreg ); p++;
pieces[ p ] = "5,14,6,6".split( splitreg ); p++;
pieces[ p ] = "5,14,10,11".split( splitreg ); p++;
pieces[ p ] = "5,15,9,13".split( splitreg ); p++;
pieces[ p ] = "5,15,14,6".split( splitreg ); p++;
pieces[ p ] = "6,6,12,10".split( splitreg ); p++;
pieces[ p ] = "6,7,9,9".split( splitreg ); p++;
pieces[ p ] = "6,7,10,12".split( splitreg ); p++;
pieces[ p ] = "6,7,11,15".split( splitreg ); p++;
pieces[ p ] = "6,7,13,11".split( splitreg ); p++;
pieces[ p ] = "6,8,6,13".split( splitreg ); p++;
pieces[ p ] = "6,8,12,7".split( splitreg ); p++;
pieces[ p ] = "6,8,12,8".split( splitreg ); p++;
pieces[ p ] = "6,9,11,10".split( splitreg ); p++;
pieces[ p ] = "6,10,8,9".split( splitreg ); p++;
pieces[ p ] = "6,10,10,15".split( splitreg ); p++;
pieces[ p ] = "6,11,10,9".split( splitreg ); p++;
pieces[ p ] = "6,11,11,10".split( splitreg ); p++;
pieces[ p ] = "6,12,8,12".split( splitreg ); p++;
pieces[ p ] = "6,13,11,12".split( splitreg ); p++;
pieces[ p ] = "6,13,13,11".split( splitreg ); p++;
pieces[ p ] = "6,14,12,15".split( splitreg ); p++;
pieces[ p ] = "6,14,14,10".split( splitreg ); p++;
pieces[ p ] = "6,14,15,7".split( splitreg ); p++;
pieces[ p ] = "6,15,11,12".split( splitreg ); p++;
pieces[ p ] = "7,7,12,9".split( splitreg ); p++;
pieces[ p ] = "7,8,9,13".split( splitreg ); p++;
pieces[ p ] = "7,8,12,15".split( splitreg ); p++;
pieces[ p ] = "7,8,15,14".split( splitreg ); p++;
pieces[ p ] = "7,9,9,14".split( splitreg ); p++;
pieces[ p ] = "7,9,14,9".split( splitreg ); p++;
pieces[ p ] = "7,10,8,8".split( splitreg ); p++;
pieces[ p ] = "7,10,11,9".split( splitreg ); p++;
pieces[ p ] = "7,13,13,15".split( splitreg ); p++;
pieces[ p ] = "7,14,11,13".split( splitreg ); p++;
pieces[ p ] = "7,14,12,11".split( splitreg ); p++;
pieces[ p ] = "7,14,14,15".split( splitreg ); p++;
pieces[ p ] = "7,15,9,15".split( splitreg ); p++;
pieces[ p ] = "8,10,8,11".split( splitreg ); p++;
pieces[ p ] = "8,11,13,10".split( splitreg ); p++;
pieces[ p ] = "8,11,13,14".split( splitreg ); p++;
pieces[ p ] = "8,12,12,11".split( splitreg ); p++;
pieces[ p ] = "8,12,14,13".split( splitreg ); p++;
pieces[ p ] = "8,13,10,12".split( splitreg ); p++;
pieces[ p ] = "8,14,9,12".split( splitreg ); p++;
pieces[ p ] = "8,14,10,9".split( splitreg ); p++;
pieces[ p ] = "8,14,13,15".split( splitreg ); p++;
pieces[ p ] = "8,14,15,11".split( splitreg ); p++;
pieces[ p ] = "8,15,13,9".split( splitreg ); p++;
pieces[ p ] = "8,15,13,12".split( splitreg ); p++;
pieces[ p ] = "9,9,9,10".split( splitreg ); p++;
pieces[ p ] = "9,12,11,10".split( splitreg ); p++;
pieces[ p ] = "9,15,11,15".split( splitreg ); p++;
pieces[ p ] = "9,15,13,13".split( splitreg ); p++;
pieces[ p ] = "10,12,12,13".split( splitreg ); p++;
pieces[ p ] = "10,13,13,15".split( splitreg ); p++;
pieces[ p ] = "10,13,14,15".split( splitreg ); p++;
pieces[ p ] = "10,14,14,12".split( splitreg ); p++;
pieces[ p ] = "10,15,15,13".split( splitreg ); p++;
pieces[ p ] = "11,11,14,12".split( splitreg ); p++;
pieces[ p ] = "11,14,11,15".split( splitreg ); p++;
pieces[ p ] = "11,15,15,13".split( splitreg ); p++;
pieces[ p ] = "12,14,14,15".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

