
puzzles[ nb_puzzles ] = "brendan/pieces_13x13.txt.js,Brendan 13x13".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_13x13.txt.js" ) {

board_w = 13;
board_h = 13;


pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,4,1".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,0,4,3".split( splitreg ); p++;
pieces[ p ] = "0,1,6,3".split( splitreg ); p++;
pieces[ p ] = "0,1,8,4".split( splitreg ); p++;
pieces[ p ] = "0,1,10,4".split( splitreg ); p++;
pieces[ p ] = "0,1,11,1".split( splitreg ); p++;
pieces[ p ] = "0,1,11,3".split( splitreg ); p++;
pieces[ p ] = "0,1,12,4".split( splitreg ); p++;
pieces[ p ] = "0,1,13,4".split( splitreg ); p++;
pieces[ p ] = "0,1,16,1".split( splitreg ); p++;
pieces[ p ] = "0,1,16,3".split( splitreg ); p++;
pieces[ p ] = "0,1,17,3".split( splitreg ); p++;
pieces[ p ] = "0,1,17,4".split( splitreg ); p++;
pieces[ p ] = "0,1,18,1".split( splitreg ); p++;
pieces[ p ] = "0,2,5,2".split( splitreg ); p++;
pieces[ p ] = "0,2,6,3".split( splitreg ); p++;
pieces[ p ] = "0,2,6,4".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,9,1".split( splitreg ); p++;
pieces[ p ] = "0,2,9,2".split( splitreg ); p++;
pieces[ p ] = "0,2,11,3".split( splitreg ); p++;
pieces[ p ] = "0,2,12,4".split( splitreg ); p++;
pieces[ p ] = "0,2,15,1".split( splitreg ); p++;
pieces[ p ] = "0,2,16,2".split( splitreg ); p++;
pieces[ p ] = "0,2,18,1".split( splitreg ); p++;
pieces[ p ] = "0,3,5,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,4".split( splitreg ); p++;
pieces[ p ] = "0,3,7,1".split( splitreg ); p++;
pieces[ p ] = "0,3,7,4".split( splitreg ); p++;
pieces[ p ] = "0,3,8,2".split( splitreg ); p++;
pieces[ p ] = "0,3,12,2".split( splitreg ); p++;
pieces[ p ] = "0,3,12,4".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,15,1".split( splitreg ); p++;
pieces[ p ] = "0,3,15,3".split( splitreg ); p++;
pieces[ p ] = "0,3,16,2".split( splitreg ); p++;
pieces[ p ] = "0,3,17,4".split( splitreg ); p++;
pieces[ p ] = "0,4,5,4".split( splitreg ); p++;
pieces[ p ] = "0,4,10,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,13,2".split( splitreg ); p++;
pieces[ p ] = "0,4,14,3".split( splitreg ); p++;
pieces[ p ] = "0,4,16,2".split( splitreg ); p++;
pieces[ p ] = "0,4,16,3".split( splitreg ); p++;
pieces[ p ] = "0,4,18,1".split( splitreg ); p++;
pieces[ p ] = "0,4,18,3".split( splitreg ); p++;
pieces[ p ] = "5,5,14,18".split( splitreg ); p++;
pieces[ p ] = "5,6,6,14".split( splitreg ); p++;
pieces[ p ] = "5,6,7,9".split( splitreg ); p++;
pieces[ p ] = "5,6,7,11".split( splitreg ); p++;
pieces[ p ] = "5,6,11,13".split( splitreg ); p++;
pieces[ p ] = "5,6,17,8".split( splitreg ); p++;
pieces[ p ] = "5,6,17,13".split( splitreg ); p++;
pieces[ p ] = "5,7,7,13".split( splitreg ); p++;
pieces[ p ] = "5,8,5,12".split( splitreg ); p++;
pieces[ p ] = "5,8,10,11".split( splitreg ); p++;
pieces[ p ] = "5,9,7,16".split( splitreg ); p++;
pieces[ p ] = "5,9,11,18".split( splitreg ); p++;
pieces[ p ] = "5,9,16,10".split( splitreg ); p++;
pieces[ p ] = "5,9,17,13".split( splitreg ); p++;
pieces[ p ] = "5,10,7,7".split( splitreg ); p++;
pieces[ p ] = "5,10,10,17".split( splitreg ); p++;
pieces[ p ] = "5,10,17,18".split( splitreg ); p++;
pieces[ p ] = "5,11,14,15".split( splitreg ); p++;
pieces[ p ] = "5,12,9,18".split( splitreg ); p++;
pieces[ p ] = "5,13,5,17".split( splitreg ); p++;
pieces[ p ] = "5,13,15,18".split( splitreg ); p++;
pieces[ p ] = "5,13,18,9".split( splitreg ); p++;
pieces[ p ] = "5,14,8,17".split( splitreg ); p++;
pieces[ p ] = "5,14,18,8".split( splitreg ); p++;
pieces[ p ] = "5,15,6,13".split( splitreg ); p++;
pieces[ p ] = "5,15,12,16".split( splitreg ); p++;
pieces[ p ] = "5,16,6,14".split( splitreg ); p++;
pieces[ p ] = "5,16,14,12".split( splitreg ); p++;
pieces[ p ] = "5,17,7,6".split( splitreg ); p++;
pieces[ p ] = "5,17,12,18".split( splitreg ); p++;
pieces[ p ] = "5,18,17,14".split( splitreg ); p++;
pieces[ p ] = "5,18,18,12".split( splitreg ); p++;
pieces[ p ] = "6,6,10,11".split( splitreg ); p++;
pieces[ p ] = "6,6,12,13".split( splitreg ); p++;
pieces[ p ] = "6,6,15,8".split( splitreg ); p++;
pieces[ p ] = "6,7,11,16".split( splitreg ); p++;
pieces[ p ] = "6,8,13,9".split( splitreg ); p++;
pieces[ p ] = "6,8,14,11".split( splitreg ); p++;
pieces[ p ] = "6,11,6,13".split( splitreg ); p++;
pieces[ p ] = "6,11,9,7".split( splitreg ); p++;
pieces[ p ] = "6,11,15,9".split( splitreg ); p++;
pieces[ p ] = "6,11,15,10".split( splitreg ); p++;
pieces[ p ] = "6,12,8,15".split( splitreg ); p++;
pieces[ p ] = "6,12,11,10".split( splitreg ); p++;
pieces[ p ] = "6,12,11,17".split( splitreg ); p++;
pieces[ p ] = "6,14,7,8".split( splitreg ); p++;
pieces[ p ] = "6,14,9,10".split( splitreg ); p++;
pieces[ p ] = "6,15,13,16".split( splitreg ); p++;
pieces[ p ] = "6,15,16,14".split( splitreg ); p++;
pieces[ p ] = "6,16,8,12".split( splitreg ); p++;
pieces[ p ] = "6,16,17,18".split( splitreg ); p++;
pieces[ p ] = "6,17,7,14".split( splitreg ); p++;
pieces[ p ] = "7,7,17,9".split( splitreg ); p++;
pieces[ p ] = "7,7,17,11".split( splitreg ); p++;
pieces[ p ] = "7,8,11,13".split( splitreg ); p++;
pieces[ p ] = "7,9,8,17".split( splitreg ); p++;
pieces[ p ] = "7,9,9,12".split( splitreg ); p++;
pieces[ p ] = "7,9,10,15".split( splitreg ); p++;
pieces[ p ] = "7,10,10,15".split( splitreg ); p++;
pieces[ p ] = "7,11,9,11".split( splitreg ); p++;
pieces[ p ] = "7,12,8,12".split( splitreg ); p++;
pieces[ p ] = "7,12,8,17".split( splitreg ); p++;
pieces[ p ] = "7,12,13,15".split( splitreg ); p++;
pieces[ p ] = "7,12,18,8".split( splitreg ); p++;
pieces[ p ] = "7,14,11,10".split( splitreg ); p++;
pieces[ p ] = "7,14,11,13".split( splitreg ); p++;
pieces[ p ] = "7,15,14,8".split( splitreg ); p++;
pieces[ p ] = "7,16,12,9".split( splitreg ); p++;
pieces[ p ] = "7,17,7,18".split( splitreg ); p++;
pieces[ p ] = "7,17,17,9".split( splitreg ); p++;
pieces[ p ] = "7,17,17,14".split( splitreg ); p++;
pieces[ p ] = "7,18,15,14".split( splitreg ); p++;
pieces[ p ] = "8,10,8,17".split( splitreg ); p++;
pieces[ p ] = "8,10,14,9".split( splitreg ); p++;
pieces[ p ] = "8,10,15,13".split( splitreg ); p++;
pieces[ p ] = "8,10,16,15".split( splitreg ); p++;
pieces[ p ] = "8,11,11,18".split( splitreg ); p++;
pieces[ p ] = "8,11,12,16".split( splitreg ); p++;
pieces[ p ] = "8,11,16,9".split( splitreg ); p++;
pieces[ p ] = "8,12,14,12".split( splitreg ); p++;
pieces[ p ] = "8,13,10,17".split( splitreg ); p++;
pieces[ p ] = "8,14,8,15".split( splitreg ); p++;
pieces[ p ] = "8,14,16,11".split( splitreg ); p++;
pieces[ p ] = "8,14,16,15".split( splitreg ); p++;
pieces[ p ] = "8,14,18,9".split( splitreg ); p++;
pieces[ p ] = "8,17,11,10".split( splitreg ); p++;
pieces[ p ] = "8,18,10,15".split( splitreg ); p++;
pieces[ p ] = "8,18,10,16".split( splitreg ); p++;
pieces[ p ] = "8,18,12,13".split( splitreg ); p++;
pieces[ p ] = "9,9,13,16".split( splitreg ); p++;
pieces[ p ] = "9,10,10,11".split( splitreg ); p++;
pieces[ p ] = "9,11,10,15".split( splitreg ); p++;
pieces[ p ] = "9,11,13,16".split( splitreg ); p++;
pieces[ p ] = "9,12,18,13".split( splitreg ); p++;
pieces[ p ] = "9,13,12,17".split( splitreg ); p++;
pieces[ p ] = "9,14,16,12".split( splitreg ); p++;
pieces[ p ] = "9,15,11,17".split( splitreg ); p++;
pieces[ p ] = "9,15,12,14".split( splitreg ); p++;
pieces[ p ] = "9,16,12,18".split( splitreg ); p++;
pieces[ p ] = "9,16,14,16".split( splitreg ); p++;
pieces[ p ] = "9,17,16,14".split( splitreg ); p++;
pieces[ p ] = "9,18,12,13".split( splitreg ); p++;
pieces[ p ] = "10,11,17,14".split( splitreg ); p++;
pieces[ p ] = "10,11,18,13".split( splitreg ); p++;
pieces[ p ] = "10,13,13,17".split( splitreg ); p++;
pieces[ p ] = "10,13,15,16".split( splitreg ); p++;
pieces[ p ] = "10,14,10,15".split( splitreg ); p++;
pieces[ p ] = "10,16,10,18".split( splitreg ); p++;
pieces[ p ] = "10,16,12,15".split( splitreg ); p++;
pieces[ p ] = "10,18,14,15".split( splitreg ); p++;
pieces[ p ] = "11,13,13,13".split( splitreg ); p++;
pieces[ p ] = "11,13,14,14".split( splitreg ); p++;
pieces[ p ] = "11,15,14,16".split( splitreg ); p++;
pieces[ p ] = "12,13,12,16".split( splitreg ); p++;
pieces[ p ] = "12,15,16,13".split( splitreg ); p++;
pieces[ p ] = "12,15,18,15".split( splitreg ); p++;
pieces[ p ] = "12,18,14,15".split( splitreg ); p++;
pieces[ p ] = "13,13,18,17".split( splitreg ); p++;
pieces[ p ] = "13,16,14,15".split( splitreg ); p++;
pieces[ p ] = "15,18,16,18".split( splitreg ); p++;
pieces[ p ] = "15,18,17,17".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

