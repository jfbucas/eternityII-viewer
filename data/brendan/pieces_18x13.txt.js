
puzzles[ nb_puzzles ] = "brendan/pieces_18x13.txt.js,Brendan 18x13".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_18x13.txt.js" ) {

board_w = 18;
board_h = 13;


pieces[ p ] = "0,0,1,1".split( splitreg ); p++;
pieces[ p ] = "0,0,2,1".split( splitreg ); p++;
pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,3,1".split( splitreg ); p++;
pieces[ p ] = "0,1,9,1".split( splitreg ); p++;
pieces[ p ] = "0,1,9,3".split( splitreg ); p++;
pieces[ p ] = "0,1,9,4".split( splitreg ); p++;
pieces[ p ] = "0,1,13,4".split( splitreg ); p++;
pieces[ p ] = "0,1,14,4".split( splitreg ); p++;
pieces[ p ] = "0,1,15,2".split( splitreg ); p++;
pieces[ p ] = "0,1,15,3".split( splitreg ); p++;
pieces[ p ] = "0,1,16,2".split( splitreg ); p++;
pieces[ p ] = "0,1,16,5".split( splitreg ); p++;
pieces[ p ] = "0,1,18,2".split( splitreg ); p++;
pieces[ p ] = "0,1,21,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,1".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,8,2".split( splitreg ); p++;
pieces[ p ] = "0,2,10,3".split( splitreg ); p++;
pieces[ p ] = "0,2,15,5".split( splitreg ); p++;
pieces[ p ] = "0,2,16,5".split( splitreg ); p++;
pieces[ p ] = "0,2,18,1".split( splitreg ); p++;
pieces[ p ] = "0,2,18,5".split( splitreg ); p++;
pieces[ p ] = "0,2,19,5".split( splitreg ); p++;
pieces[ p ] = "0,2,20,4".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,9,1".split( splitreg ); p++;
pieces[ p ] = "0,3,12,5".split( splitreg ); p++;
pieces[ p ] = "0,3,13,3".split( splitreg ); p++;
pieces[ p ] = "0,3,14,3".split( splitreg ); p++;
pieces[ p ] = "0,3,16,2".split( splitreg ); p++;
pieces[ p ] = "0,3,17,5".split( splitreg ); p++;
pieces[ p ] = "0,3,19,1".split( splitreg ); p++;
pieces[ p ] = "0,3,19,3".split( splitreg ); p++;
pieces[ p ] = "0,3,20,1".split( splitreg ); p++;
pieces[ p ] = "0,3,21,2".split( splitreg ); p++;
pieces[ p ] = "0,4,9,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,3".split( splitreg ); p++;
pieces[ p ] = "0,4,12,5".split( splitreg ); p++;
pieces[ p ] = "0,4,14,4".split( splitreg ); p++;
pieces[ p ] = "0,4,14,5".split( splitreg ); p++;
pieces[ p ] = "0,4,15,4".split( splitreg ); p++;
pieces[ p ] = "0,4,16,3".split( splitreg ); p++;
pieces[ p ] = "0,4,16,4".split( splitreg ); p++;
pieces[ p ] = "0,4,16,5".split( splitreg ); p++;
pieces[ p ] = "0,4,17,3".split( splitreg ); p++;
pieces[ p ] = "0,4,21,4".split( splitreg ); p++;
pieces[ p ] = "0,5,6,4".split( splitreg ); p++;
pieces[ p ] = "0,5,10,2".split( splitreg ); p++;
pieces[ p ] = "0,5,10,5".split( splitreg ); p++;
pieces[ p ] = "0,5,12,3".split( splitreg ); p++;
pieces[ p ] = "0,5,12,4".split( splitreg ); p++;
pieces[ p ] = "0,5,19,1".split( splitreg ); p++;
pieces[ p ] = "0,5,20,1".split( splitreg ); p++;
pieces[ p ] = "0,5,20,2".split( splitreg ); p++;
pieces[ p ] = "0,5,20,4".split( splitreg ); p++;
pieces[ p ] = "0,5,21,2".split( splitreg ); p++;
pieces[ p ] = "0,5,21,3".split( splitreg ); p++;
pieces[ p ] = "6,6,6,14".split( splitreg ); p++;
pieces[ p ] = "6,6,6,16".split( splitreg ); p++;
pieces[ p ] = "6,6,8,20".split( splitreg ); p++;
pieces[ p ] = "6,6,15,20".split( splitreg ); p++;
pieces[ p ] = "6,7,11,11".split( splitreg ); p++;
pieces[ p ] = "6,7,20,19".split( splitreg ); p++;
pieces[ p ] = "6,8,6,15".split( splitreg ); p++;
pieces[ p ] = "6,8,11,13".split( splitreg ); p++;
pieces[ p ] = "6,8,13,10".split( splitreg ); p++;
pieces[ p ] = "6,8,18,16".split( splitreg ); p++;
pieces[ p ] = "6,9,6,16".split( splitreg ); p++;
pieces[ p ] = "6,9,8,13".split( splitreg ); p++;
pieces[ p ] = "6,10,16,14".split( splitreg ); p++;
pieces[ p ] = "6,10,16,20".split( splitreg ); p++;
pieces[ p ] = "6,11,12,11".split( splitreg ); p++;
pieces[ p ] = "6,11,14,11".split( splitreg ); p++;
pieces[ p ] = "6,11,16,8".split( splitreg ); p++;
pieces[ p ] = "6,11,19,18".split( splitreg ); p++;
pieces[ p ] = "6,11,20,10".split( splitreg ); p++;
pieces[ p ] = "6,12,14,17".split( splitreg ); p++;
pieces[ p ] = "6,14,14,7".split( splitreg ); p++;
pieces[ p ] = "6,15,13,19".split( splitreg ); p++;
pieces[ p ] = "6,16,7,8".split( splitreg ); p++;
pieces[ p ] = "6,16,10,8".split( splitreg ); p++;
pieces[ p ] = "6,16,21,18".split( splitreg ); p++;
pieces[ p ] = "6,17,7,8".split( splitreg ); p++;
pieces[ p ] = "6,17,7,13".split( splitreg ); p++;
pieces[ p ] = "6,17,9,21".split( splitreg ); p++;
pieces[ p ] = "6,17,11,8".split( splitreg ); p++;
pieces[ p ] = "6,17,13,17".split( splitreg ); p++;
pieces[ p ] = "6,18,14,9".split( splitreg ); p++;
pieces[ p ] = "6,18,14,21".split( splitreg ); p++;
pieces[ p ] = "6,18,18,15".split( splitreg ); p++;
pieces[ p ] = "6,19,14,18".split( splitreg ); p++;
pieces[ p ] = "6,19,15,14".split( splitreg ); p++;
pieces[ p ] = "6,20,9,18".split( splitreg ); p++;
pieces[ p ] = "6,20,17,12".split( splitreg ); p++;
pieces[ p ] = "6,21,9,19".split( splitreg ); p++;
pieces[ p ] = "7,7,11,12".split( splitreg ); p++;
pieces[ p ] = "7,7,12,21".split( splitreg ); p++;
pieces[ p ] = "7,7,14,13".split( splitreg ); p++;
pieces[ p ] = "7,7,14,17".split( splitreg ); p++;
pieces[ p ] = "7,7,21,16".split( splitreg ); p++;
pieces[ p ] = "7,8,9,9".split( splitreg ); p++;
pieces[ p ] = "7,8,12,13".split( splitreg ); p++;
pieces[ p ] = "7,8,13,11".split( splitreg ); p++;
pieces[ p ] = "7,8,13,21".split( splitreg ); p++;
pieces[ p ] = "7,9,8,19".split( splitreg ); p++;
pieces[ p ] = "7,10,8,19".split( splitreg ); p++;
pieces[ p ] = "7,10,10,9".split( splitreg ); p++;
pieces[ p ] = "7,10,10,12".split( splitreg ); p++;
pieces[ p ] = "7,11,12,17".split( splitreg ); p++;
pieces[ p ] = "7,11,13,19".split( splitreg ); p++;
pieces[ p ] = "7,12,10,8".split( splitreg ); p++;
pieces[ p ] = "7,12,10,12".split( splitreg ); p++;
pieces[ p ] = "7,12,18,20".split( splitreg ); p++;
pieces[ p ] = "7,13,16,13".split( splitreg ); p++;
pieces[ p ] = "7,14,14,15".split( splitreg ); p++;
pieces[ p ] = "7,14,19,20".split( splitreg ); p++;
pieces[ p ] = "7,14,21,15".split( splitreg ); p++;
pieces[ p ] = "7,15,11,13".split( splitreg ); p++;
pieces[ p ] = "7,15,16,14".split( splitreg ); p++;
pieces[ p ] = "7,16,8,8".split( splitreg ); p++;
pieces[ p ] = "7,16,14,21".split( splitreg ); p++;
pieces[ p ] = "7,18,9,15".split( splitreg ); p++;
pieces[ p ] = "7,18,16,13".split( splitreg ); p++;
pieces[ p ] = "7,18,20,10".split( splitreg ); p++;
pieces[ p ] = "7,18,21,10".split( splitreg ); p++;
pieces[ p ] = "7,19,9,12".split( splitreg ); p++;
pieces[ p ] = "7,19,10,15".split( splitreg ); p++;
pieces[ p ] = "7,19,19,15".split( splitreg ); p++;
pieces[ p ] = "7,20,10,21".split( splitreg ); p++;
pieces[ p ] = "7,20,16,17".split( splitreg ); p++;
pieces[ p ] = "8,8,12,12".split( splitreg ); p++;
pieces[ p ] = "8,9,8,16".split( splitreg ); p++;
pieces[ p ] = "8,9,21,11".split( splitreg ); p++;
pieces[ p ] = "8,10,13,21".split( splitreg ); p++;
pieces[ p ] = "8,11,13,9".split( splitreg ); p++;
pieces[ p ] = "8,11,16,17".split( splitreg ); p++;
pieces[ p ] = "8,11,20,17".split( splitreg ); p++;
pieces[ p ] = "8,12,19,13".split( splitreg ); p++;
pieces[ p ] = "8,13,12,12".split( splitreg ); p++;
pieces[ p ] = "8,13,17,13".split( splitreg ); p++;
pieces[ p ] = "8,13,19,18".split( splitreg ); p++;
pieces[ p ] = "8,14,9,13".split( splitreg ); p++;
pieces[ p ] = "8,14,12,9".split( splitreg ); p++;
pieces[ p ] = "8,16,13,15".split( splitreg ); p++;
pieces[ p ] = "8,16,18,9".split( splitreg ); p++;
pieces[ p ] = "8,18,11,17".split( splitreg ); p++;
pieces[ p ] = "8,19,20,14".split( splitreg ); p++;
pieces[ p ] = "8,20,15,9".split( splitreg ); p++;
pieces[ p ] = "8,20,15,13".split( splitreg ); p++;
pieces[ p ] = "8,21,9,20".split( splitreg ); p++;
pieces[ p ] = "8,21,11,17".split( splitreg ); p++;
pieces[ p ] = "8,21,11,21".split( splitreg ); p++;
pieces[ p ] = "8,21,13,20".split( splitreg ); p++;
pieces[ p ] = "8,21,16,16".split( splitreg ); p++;
pieces[ p ] = "8,21,20,10".split( splitreg ); p++;
pieces[ p ] = "9,9,9,15".split( splitreg ); p++;
pieces[ p ] = "9,10,12,18".split( splitreg ); p++;
pieces[ p ] = "9,10,15,18".split( splitreg ); p++;
pieces[ p ] = "9,11,10,15".split( splitreg ); p++;
pieces[ p ] = "9,12,10,15".split( splitreg ); p++;
pieces[ p ] = "9,12,17,21".split( splitreg ); p++;
pieces[ p ] = "9,14,11,19".split( splitreg ); p++;
pieces[ p ] = "9,15,20,10".split( splitreg ); p++;
pieces[ p ] = "9,16,17,11".split( splitreg ); p++;
pieces[ p ] = "9,17,10,11".split( splitreg ); p++;
pieces[ p ] = "9,17,15,12".split( splitreg ); p++;
pieces[ p ] = "9,18,14,10".split( splitreg ); p++;
pieces[ p ] = "9,18,15,15".split( splitreg ); p++;
pieces[ p ] = "9,18,17,14".split( splitreg ); p++;
pieces[ p ] = "9,18,20,16".split( splitreg ); p++;
pieces[ p ] = "9,19,11,10".split( splitreg ); p++;
pieces[ p ] = "9,19,18,21".split( splitreg ); p++;
pieces[ p ] = "9,20,11,15".split( splitreg ); p++;
pieces[ p ] = "9,20,13,14".split( splitreg ); p++;
pieces[ p ] = "9,20,21,14".split( splitreg ); p++;
pieces[ p ] = "9,21,18,19".split( splitreg ); p++;
pieces[ p ] = "10,10,11,19".split( splitreg ); p++;
pieces[ p ] = "10,10,17,11".split( splitreg ); p++;
pieces[ p ] = "10,10,17,16".split( splitreg ); p++;
pieces[ p ] = "10,10,18,21".split( splitreg ); p++;
pieces[ p ] = "10,11,12,14".split( splitreg ); p++;
pieces[ p ] = "10,14,15,14".split( splitreg ); p++;
pieces[ p ] = "10,15,13,11".split( splitreg ); p++;
pieces[ p ] = "10,15,18,13".split( splitreg ); p++;
pieces[ p ] = "10,15,21,20".split( splitreg ); p++;
pieces[ p ] = "10,16,18,19".split( splitreg ); p++;
pieces[ p ] = "10,17,13,19".split( splitreg ); p++;
pieces[ p ] = "10,18,10,19".split( splitreg ); p++;
pieces[ p ] = "10,19,13,15".split( splitreg ); p++;
pieces[ p ] = "11,11,14,20".split( splitreg ); p++;
pieces[ p ] = "11,11,17,12".split( splitreg ); p++;
pieces[ p ] = "11,12,15,15".split( splitreg ); p++;
pieces[ p ] = "11,12,19,20".split( splitreg ); p++;
pieces[ p ] = "11,13,12,20".split( splitreg ); p++;
pieces[ p ] = "11,13,20,20".split( splitreg ); p++;
pieces[ p ] = "11,14,16,16".split( splitreg ); p++;
pieces[ p ] = "11,15,17,19".split( splitreg ); p++;
pieces[ p ] = "11,17,13,21".split( splitreg ); p++;
pieces[ p ] = "11,18,18,16".split( splitreg ); p++;
pieces[ p ] = "11,19,15,15".split( splitreg ); p++;
pieces[ p ] = "11,19,21,14".split( splitreg ); p++;
pieces[ p ] = "11,20,19,14".split( splitreg ); p++;
pieces[ p ] = "12,13,16,18".split( splitreg ); p++;
pieces[ p ] = "12,13,21,17".split( splitreg ); p++;
pieces[ p ] = "12,14,15,18".split( splitreg ); p++;
pieces[ p ] = "12,14,20,15".split( splitreg ); p++;
pieces[ p ] = "12,15,19,17".split( splitreg ); p++;
pieces[ p ] = "12,16,18,16".split( splitreg ); p++;
pieces[ p ] = "12,16,20,13".split( splitreg ); p++;
pieces[ p ] = "12,17,12,19".split( splitreg ); p++;
pieces[ p ] = "12,17,13,18".split( splitreg ); p++;
pieces[ p ] = "12,17,14,18".split( splitreg ); p++;
pieces[ p ] = "12,17,19,19".split( splitreg ); p++;
pieces[ p ] = "12,20,19,14".split( splitreg ); p++;
pieces[ p ] = "12,21,14,21".split( splitreg ); p++;
pieces[ p ] = "12,21,16,16".split( splitreg ); p++;
pieces[ p ] = "12,21,18,19".split( splitreg ); p++;
pieces[ p ] = "13,14,18,15".split( splitreg ); p++;
pieces[ p ] = "13,14,20,21".split( splitreg ); p++;
pieces[ p ] = "13,16,14,18".split( splitreg ); p++;
pieces[ p ] = "13,16,21,15".split( splitreg ); p++;
pieces[ p ] = "13,17,21,19".split( splitreg ); p++;
pieces[ p ] = "13,18,14,15".split( splitreg ); p++;
pieces[ p ] = "13,18,16,21".split( splitreg ); p++;
pieces[ p ] = "13,20,20,17".split( splitreg ); p++;
pieces[ p ] = "14,17,17,15".split( splitreg ); p++;
pieces[ p ] = "14,17,21,20".split( splitreg ); p++;
pieces[ p ] = "15,17,17,19".split( splitreg ); p++;
pieces[ p ] = "15,17,20,16".split( splitreg ); p++;
pieces[ p ] = "15,19,18,16".split( splitreg ); p++;
pieces[ p ] = "16,19,17,19".split( splitreg ); p++;
pieces[ p ] = "17,17,21,20".split( splitreg ); p++;
pieces[ p ] = "18,20,21,21".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

