
puzzles[ nb_puzzles ] = "brendan/pieces_20x16.txt.js,Brendan 20x16".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_20x16.txt.js" ) {

board_w = 20;
board_h = 16;


pieces[ p ] = "0,0,4,3".split( splitreg ); p++;
pieces[ p ] = "0,0,5,2".split( splitreg ); p++;
pieces[ p ] = "0,0,5,3".split( splitreg ); p++;
pieces[ p ] = "0,0,5,4".split( splitreg ); p++;
pieces[ p ] = "0,1,6,4".split( splitreg ); p++;
pieces[ p ] = "0,1,11,1".split( splitreg ); p++;
pieces[ p ] = "0,1,12,4".split( splitreg ); p++;
pieces[ p ] = "0,1,12,5".split( splitreg ); p++;
pieces[ p ] = "0,1,13,4".split( splitreg ); p++;
pieces[ p ] = "0,1,16,3".split( splitreg ); p++;
pieces[ p ] = "0,1,17,1".split( splitreg ); p++;
pieces[ p ] = "0,1,19,2".split( splitreg ); p++;
pieces[ p ] = "0,1,20,1".split( splitreg ); p++;
pieces[ p ] = "0,1,20,5".split( splitreg ); p++;
pieces[ p ] = "0,1,22,5".split( splitreg ); p++;
pieces[ p ] = "0,1,23,3".split( splitreg ); p++;
pieces[ p ] = "0,1,24,1".split( splitreg ); p++;
pieces[ p ] = "0,1,24,2".split( splitreg ); p++;
pieces[ p ] = "0,2,6,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,10,2".split( splitreg ); p++;
pieces[ p ] = "0,2,11,4".split( splitreg ); p++;
pieces[ p ] = "0,2,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,14,5".split( splitreg ); p++;
pieces[ p ] = "0,2,16,1".split( splitreg ); p++;
pieces[ p ] = "0,2,16,2".split( splitreg ); p++;
pieces[ p ] = "0,2,18,1".split( splitreg ); p++;
pieces[ p ] = "0,2,18,2".split( splitreg ); p++;
pieces[ p ] = "0,2,19,3".split( splitreg ); p++;
pieces[ p ] = "0,2,22,5".split( splitreg ); p++;
pieces[ p ] = "0,2,24,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,2".split( splitreg ); p++;
pieces[ p ] = "0,3,6,5".split( splitreg ); p++;
pieces[ p ] = "0,3,9,1".split( splitreg ); p++;
pieces[ p ] = "0,3,9,2".split( splitreg ); p++;
pieces[ p ] = "0,3,10,1".split( splitreg ); p++;
pieces[ p ] = "0,3,10,5".split( splitreg ); p++;
pieces[ p ] = "0,3,13,1".split( splitreg ); p++;
pieces[ p ] = "0,3,13,2".split( splitreg ); p++;
pieces[ p ] = "0,3,15,5".split( splitreg ); p++;
pieces[ p ] = "0,3,16,4".split( splitreg ); p++;
pieces[ p ] = "0,3,16,5".split( splitreg ); p++;
pieces[ p ] = "0,3,17,1".split( splitreg ); p++;
pieces[ p ] = "0,3,19,3".split( splitreg ); p++;
pieces[ p ] = "0,3,23,4".split( splitreg ); p++;
pieces[ p ] = "0,4,6,3".split( splitreg ); p++;
pieces[ p ] = "0,4,7,2".split( splitreg ); p++;
pieces[ p ] = "0,4,8,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,3".split( splitreg ); p++;
pieces[ p ] = "0,4,10,5".split( splitreg ); p++;
pieces[ p ] = "0,4,12,1".split( splitreg ); p++;
pieces[ p ] = "0,4,14,4".split( splitreg ); p++;
pieces[ p ] = "0,4,18,4".split( splitreg ); p++;
pieces[ p ] = "0,4,20,5".split( splitreg ); p++;
pieces[ p ] = "0,4,23,2".split( splitreg ); p++;
pieces[ p ] = "0,4,23,3".split( splitreg ); p++;
pieces[ p ] = "0,4,23,4".split( splitreg ); p++;
pieces[ p ] = "0,5,6,4".split( splitreg ); p++;
pieces[ p ] = "0,5,6,5".split( splitreg ); p++;
pieces[ p ] = "0,5,8,4".split( splitreg ); p++;
pieces[ p ] = "0,5,9,1".split( splitreg ); p++;
pieces[ p ] = "0,5,9,3".split( splitreg ); p++;
pieces[ p ] = "0,5,11,3".split( splitreg ); p++;
pieces[ p ] = "0,5,13,4".split( splitreg ); p++;
pieces[ p ] = "0,5,19,1".split( splitreg ); p++;
pieces[ p ] = "0,5,23,2".split( splitreg ); p++;
pieces[ p ] = "0,5,23,5".split( splitreg ); p++;
pieces[ p ] = "6,6,6,24".split( splitreg ); p++;
pieces[ p ] = "6,6,20,12".split( splitreg ); p++;
pieces[ p ] = "6,6,21,23".split( splitreg ); p++;
pieces[ p ] = "6,7,13,13".split( splitreg ); p++;
pieces[ p ] = "6,8,10,8".split( splitreg ); p++;
pieces[ p ] = "6,9,6,14".split( splitreg ); p++;
pieces[ p ] = "6,9,7,19".split( splitreg ); p++;
pieces[ p ] = "6,9,7,21".split( splitreg ); p++;
pieces[ p ] = "6,10,14,12".split( splitreg ); p++;
pieces[ p ] = "6,10,22,16".split( splitreg ); p++;
pieces[ p ] = "6,10,22,20".split( splitreg ); p++;
pieces[ p ] = "6,11,12,19".split( splitreg ); p++;
pieces[ p ] = "6,11,18,13".split( splitreg ); p++;
pieces[ p ] = "6,11,22,7".split( splitreg ); p++;
pieces[ p ] = "6,12,20,7".split( splitreg ); p++;
pieces[ p ] = "6,12,21,19".split( splitreg ); p++;
pieces[ p ] = "6,13,14,17".split( splitreg ); p++;
pieces[ p ] = "6,14,11,9".split( splitreg ); p++;
pieces[ p ] = "6,14,23,12".split( splitreg ); p++;
pieces[ p ] = "6,15,11,21".split( splitreg ); p++;
pieces[ p ] = "6,15,13,22".split( splitreg ); p++;
pieces[ p ] = "6,15,14,21".split( splitreg ); p++;
pieces[ p ] = "6,15,23,24".split( splitreg ); p++;
pieces[ p ] = "6,16,11,15".split( splitreg ); p++;
pieces[ p ] = "6,16,17,20".split( splitreg ); p++;
pieces[ p ] = "6,17,10,19".split( splitreg ); p++;
pieces[ p ] = "6,17,14,17".split( splitreg ); p++;
pieces[ p ] = "6,17,20,19".split( splitreg ); p++;
pieces[ p ] = "6,18,7,18".split( splitreg ); p++;
pieces[ p ] = "6,18,17,13".split( splitreg ); p++;
pieces[ p ] = "6,18,19,12".split( splitreg ); p++;
pieces[ p ] = "6,19,7,14".split( splitreg ); p++;
pieces[ p ] = "6,19,23,18".split( splitreg ); p++;
pieces[ p ] = "6,20,22,20".split( splitreg ); p++;
pieces[ p ] = "6,20,24,9".split( splitreg ); p++;
pieces[ p ] = "6,21,8,17".split( splitreg ); p++;
pieces[ p ] = "6,21,14,18".split( splitreg ); p++;
pieces[ p ] = "6,21,17,21".split( splitreg ); p++;
pieces[ p ] = "6,22,20,12".split( splitreg ); p++;
pieces[ p ] = "6,23,12,16".split( splitreg ); p++;
pieces[ p ] = "6,23,17,23".split( splitreg ); p++;
pieces[ p ] = "6,23,18,14".split( splitreg ); p++;
pieces[ p ] = "6,23,20,20".split( splitreg ); p++;
pieces[ p ] = "6,23,21,24".split( splitreg ); p++;
pieces[ p ] = "6,24,15,16".split( splitreg ); p++;
pieces[ p ] = "6,24,24,24".split( splitreg ); p++;
pieces[ p ] = "7,7,7,20".split( splitreg ); p++;
pieces[ p ] = "7,7,9,12".split( splitreg ); p++;
pieces[ p ] = "7,7,21,12".split( splitreg ); p++;
pieces[ p ] = "7,8,11,20".split( splitreg ); p++;
pieces[ p ] = "7,8,12,16".split( splitreg ); p++;
pieces[ p ] = "7,8,13,20".split( splitreg ); p++;
pieces[ p ] = "7,9,15,14".split( splitreg ); p++;
pieces[ p ] = "7,10,11,17".split( splitreg ); p++;
pieces[ p ] = "7,10,13,8".split( splitreg ); p++;
pieces[ p ] = "7,10,13,21".split( splitreg ); p++;
pieces[ p ] = "7,10,17,22".split( splitreg ); p++;
pieces[ p ] = "7,10,24,23".split( splitreg ); p++;
pieces[ p ] = "7,11,8,12".split( splitreg ); p++;
pieces[ p ] = "7,11,12,11".split( splitreg ); p++;
pieces[ p ] = "7,12,8,19".split( splitreg ); p++;
pieces[ p ] = "7,12,12,23".split( splitreg ); p++;
pieces[ p ] = "7,12,21,23".split( splitreg ); p++;
pieces[ p ] = "7,12,22,8".split( splitreg ); p++;
pieces[ p ] = "7,13,10,11".split( splitreg ); p++;
pieces[ p ] = "7,13,18,20".split( splitreg ); p++;
pieces[ p ] = "7,13,24,15".split( splitreg ); p++;
pieces[ p ] = "7,14,13,22".split( splitreg ); p++;
pieces[ p ] = "7,14,22,8".split( splitreg ); p++;
pieces[ p ] = "7,15,10,20".split( splitreg ); p++;
pieces[ p ] = "7,15,11,12".split( splitreg ); p++;
pieces[ p ] = "7,15,18,19".split( splitreg ); p++;
pieces[ p ] = "7,16,8,8".split( splitreg ); p++;
pieces[ p ] = "7,17,16,18".split( splitreg ); p++;
pieces[ p ] = "7,17,23,9".split( splitreg ); p++;
pieces[ p ] = "7,18,11,17".split( splitreg ); p++;
pieces[ p ] = "7,18,19,10".split( splitreg ); p++;
pieces[ p ] = "7,19,22,15".split( splitreg ); p++;
pieces[ p ] = "7,20,8,13".split( splitreg ); p++;
pieces[ p ] = "7,20,8,15".split( splitreg ); p++;
pieces[ p ] = "7,20,11,11".split( splitreg ); p++;
pieces[ p ] = "7,21,10,22".split( splitreg ); p++;
pieces[ p ] = "7,21,12,20".split( splitreg ); p++;
pieces[ p ] = "7,21,15,20".split( splitreg ); p++;
pieces[ p ] = "7,21,21,18".split( splitreg ); p++;
pieces[ p ] = "7,21,22,12".split( splitreg ); p++;
pieces[ p ] = "7,22,14,22".split( splitreg ); p++;
pieces[ p ] = "7,22,15,8".split( splitreg ); p++;
pieces[ p ] = "7,22,15,22".split( splitreg ); p++;
pieces[ p ] = "7,24,22,19".split( splitreg ); p++;
pieces[ p ] = "8,8,11,17".split( splitreg ); p++;
pieces[ p ] = "8,8,19,22".split( splitreg ); p++;
pieces[ p ] = "8,9,10,19".split( splitreg ); p++;
pieces[ p ] = "8,9,18,20".split( splitreg ); p++;
pieces[ p ] = "8,10,9,20".split( splitreg ); p++;
pieces[ p ] = "8,11,9,24".split( splitreg ); p++;
pieces[ p ] = "8,11,20,23".split( splitreg ); p++;
pieces[ p ] = "8,12,10,18".split( splitreg ); p++;
pieces[ p ] = "8,12,14,13".split( splitreg ); p++;
pieces[ p ] = "8,14,11,12".split( splitreg ); p++;
pieces[ p ] = "8,14,17,9".split( splitreg ); p++;
pieces[ p ] = "8,14,20,14".split( splitreg ); p++;
pieces[ p ] = "8,14,24,10".split( splitreg ); p++;
pieces[ p ] = "8,15,8,16".split( splitreg ); p++;
pieces[ p ] = "8,15,12,13".split( splitreg ); p++;
pieces[ p ] = "8,15,19,17".split( splitreg ); p++;
pieces[ p ] = "8,15,21,15".split( splitreg ); p++;
pieces[ p ] = "8,16,11,22".split( splitreg ); p++;
pieces[ p ] = "8,16,15,16".split( splitreg ); p++;
pieces[ p ] = "8,17,11,18".split( splitreg ); p++;
pieces[ p ] = "8,18,10,18".split( splitreg ); p++;
pieces[ p ] = "8,18,15,10".split( splitreg ); p++;
pieces[ p ] = "8,18,16,11".split( splitreg ); p++;
pieces[ p ] = "8,18,16,16".split( splitreg ); p++;
pieces[ p ] = "8,18,17,19".split( splitreg ); p++;
pieces[ p ] = "8,19,13,9".split( splitreg ); p++;
pieces[ p ] = "8,19,18,11".split( splitreg ); p++;
pieces[ p ] = "8,19,21,24".split( splitreg ); p++;
pieces[ p ] = "8,19,22,12".split( splitreg ); p++;
pieces[ p ] = "8,20,21,20".split( splitreg ); p++;
pieces[ p ] = "8,21,24,22".split( splitreg ); p++;
pieces[ p ] = "8,22,18,10".split( splitreg ); p++;
pieces[ p ] = "8,22,21,9".split( splitreg ); p++;
pieces[ p ] = "8,22,21,21".split( splitreg ); p++;
pieces[ p ] = "8,24,13,13".split( splitreg ); p++;
pieces[ p ] = "8,24,17,12".split( splitreg ); p++;
pieces[ p ] = "8,24,24,19".split( splitreg ); p++;
pieces[ p ] = "9,9,19,10".split( splitreg ); p++;
pieces[ p ] = "9,9,20,12".split( splitreg ); p++;
pieces[ p ] = "9,9,20,22".split( splitreg ); p++;
pieces[ p ] = "9,11,10,22".split( splitreg ); p++;
pieces[ p ] = "9,12,10,12".split( splitreg ); p++;
pieces[ p ] = "9,13,9,16".split( splitreg ); p++;
pieces[ p ] = "9,13,15,17".split( splitreg ); p++;
pieces[ p ] = "9,13,24,22".split( splitreg ); p++;
pieces[ p ] = "9,14,10,21".split( splitreg ); p++;
pieces[ p ] = "9,14,22,21".split( splitreg ); p++;
pieces[ p ] = "9,15,10,21".split( splitreg ); p++;
pieces[ p ] = "9,15,17,15".split( splitreg ); p++;
pieces[ p ] = "9,15,21,15".split( splitreg ); p++;
pieces[ p ] = "9,15,24,24".split( splitreg ); p++;
pieces[ p ] = "9,16,10,10".split( splitreg ); p++;
pieces[ p ] = "9,17,22,18".split( splitreg ); p++;
pieces[ p ] = "9,17,24,23".split( splitreg ); p++;
pieces[ p ] = "9,18,15,23".split( splitreg ); p++;
pieces[ p ] = "9,18,19,13".split( splitreg ); p++;
pieces[ p ] = "9,19,10,12".split( splitreg ); p++;
pieces[ p ] = "9,19,17,13".split( splitreg ); p++;
pieces[ p ] = "9,20,15,19".split( splitreg ); p++;
pieces[ p ] = "9,20,23,11".split( splitreg ); p++;
pieces[ p ] = "9,21,19,24".split( splitreg ); p++;
pieces[ p ] = "9,21,23,11".split( splitreg ); p++;
pieces[ p ] = "9,21,24,13".split( splitreg ); p++;
pieces[ p ] = "9,22,12,10".split( splitreg ); p++;
pieces[ p ] = "9,22,17,24".split( splitreg ); p++;
pieces[ p ] = "9,22,22,16".split( splitreg ); p++;
pieces[ p ] = "9,23,14,10".split( splitreg ); p++;
pieces[ p ] = "9,23,14,23".split( splitreg ); p++;
pieces[ p ] = "9,23,18,22".split( splitreg ); p++;
pieces[ p ] = "9,23,19,15".split( splitreg ); p++;
pieces[ p ] = "9,23,23,21".split( splitreg ); p++;
pieces[ p ] = "9,24,24,14".split( splitreg ); p++;
pieces[ p ] = "10,11,14,20".split( splitreg ); p++;
pieces[ p ] = "10,11,22,14".split( splitreg ); p++;
pieces[ p ] = "10,12,13,23".split( splitreg ); p++;
pieces[ p ] = "10,12,16,15".split( splitreg ); p++;
pieces[ p ] = "10,13,17,19".split( splitreg ); p++;
pieces[ p ] = "10,13,23,12".split( splitreg ); p++;
pieces[ p ] = "10,14,16,19".split( splitreg ); p++;
pieces[ p ] = "10,16,20,13".split( splitreg ); p++;
pieces[ p ] = "10,16,23,14".split( splitreg ); p++;
pieces[ p ] = "10,16,24,13".split( splitreg ); p++;
pieces[ p ] = "10,17,11,24".split( splitreg ); p++;
pieces[ p ] = "10,17,12,15".split( splitreg ); p++;
pieces[ p ] = "10,17,18,13".split( splitreg ); p++;
pieces[ p ] = "10,17,23,18".split( splitreg ); p++;
pieces[ p ] = "10,18,13,21".split( splitreg ); p++;
pieces[ p ] = "10,18,24,20".split( splitreg ); p++;
pieces[ p ] = "10,19,11,14".split( splitreg ); p++;
pieces[ p ] = "10,20,15,21".split( splitreg ); p++;
pieces[ p ] = "10,21,24,22".split( splitreg ); p++;
pieces[ p ] = "10,22,11,19".split( splitreg ); p++;
pieces[ p ] = "11,12,20,19".split( splitreg ); p++;
pieces[ p ] = "11,12,21,13".split( splitreg ); p++;
pieces[ p ] = "11,13,16,20".split( splitreg ); p++;
pieces[ p ] = "11,13,16,21".split( splitreg ); p++;
pieces[ p ] = "11,13,23,19".split( splitreg ); p++;
pieces[ p ] = "11,16,19,19".split( splitreg ); p++;
pieces[ p ] = "11,17,16,16".split( splitreg ); p++;
pieces[ p ] = "11,17,23,17".split( splitreg ); p++;
pieces[ p ] = "11,18,16,22".split( splitreg ); p++;
pieces[ p ] = "11,18,22,14".split( splitreg ); p++;
pieces[ p ] = "11,19,14,14".split( splitreg ); p++;
pieces[ p ] = "11,19,20,15".split( splitreg ); p++;
pieces[ p ] = "11,20,24,14".split( splitreg ); p++;
pieces[ p ] = "11,21,17,12".split( splitreg ); p++;
pieces[ p ] = "11,21,18,20".split( splitreg ); p++;
pieces[ p ] = "11,22,14,13".split( splitreg ); p++;
pieces[ p ] = "11,22,15,14".split( splitreg ); p++;
pieces[ p ] = "11,23,14,16".split( splitreg ); p++;
pieces[ p ] = "11,23,14,20".split( splitreg ); p++;
pieces[ p ] = "11,23,21,14".split( splitreg ); p++;
pieces[ p ] = "11,24,14,22".split( splitreg ); p++;
pieces[ p ] = "12,12,17,24".split( splitreg ); p++;
pieces[ p ] = "12,13,20,18".split( splitreg ); p++;
pieces[ p ] = "12,14,14,24".split( splitreg ); p++;
pieces[ p ] = "12,15,16,17".split( splitreg ); p++;
pieces[ p ] = "12,16,17,24".split( splitreg ); p++;
pieces[ p ] = "12,17,19,13".split( splitreg ); p++;
pieces[ p ] = "12,18,13,23".split( splitreg ); p++;
pieces[ p ] = "12,18,22,17".split( splitreg ); p++;
pieces[ p ] = "12,21,19,15".split( splitreg ); p++;
pieces[ p ] = "12,21,21,17".split( splitreg ); p++;
pieces[ p ] = "12,21,23,17".split( splitreg ); p++;
pieces[ p ] = "12,24,16,18".split( splitreg ); p++;
pieces[ p ] = "13,13,14,16".split( splitreg ); p++;
pieces[ p ] = "13,13,16,20".split( splitreg ); p++;
pieces[ p ] = "13,14,23,14".split( splitreg ); p++;
pieces[ p ] = "13,17,24,18".split( splitreg ); p++;
pieces[ p ] = "13,19,15,19".split( splitreg ); p++;
pieces[ p ] = "13,19,21,18".split( splitreg ); p++;
pieces[ p ] = "13,22,23,20".split( splitreg ); p++;
pieces[ p ] = "13,24,15,24".split( splitreg ); p++;
pieces[ p ] = "13,24,18,14".split( splitreg ); p++;
pieces[ p ] = "14,15,17,18".split( splitreg ); p++;
pieces[ p ] = "14,15,22,16".split( splitreg ); p++;
pieces[ p ] = "14,17,16,21".split( splitreg ); p++;
pieces[ p ] = "14,18,20,17".split( splitreg ); p++;
pieces[ p ] = "14,19,24,21".split( splitreg ); p++;
pieces[ p ] = "14,20,18,18".split( splitreg ); p++;
pieces[ p ] = "14,23,15,16".split( splitreg ); p++;
pieces[ p ] = "14,24,19,15".split( splitreg ); p++;
pieces[ p ] = "15,16,19,19".split( splitreg ); p++;
pieces[ p ] = "15,16,22,19".split( splitreg ); p++;
pieces[ p ] = "15,16,23,21".split( splitreg ); p++;
pieces[ p ] = "15,17,23,17".split( splitreg ); p++;
pieces[ p ] = "15,18,24,16".split( splitreg ); p++;
pieces[ p ] = "15,20,17,21".split( splitreg ); p++;
pieces[ p ] = "15,21,21,24".split( splitreg ); p++;
pieces[ p ] = "15,22,19,22".split( splitreg ); p++;
pieces[ p ] = "15,23,18,16".split( splitreg ); p++;
pieces[ p ] = "16,16,22,17".split( splitreg ); p++;
pieces[ p ] = "16,17,23,17".split( splitreg ); p++;
pieces[ p ] = "16,18,24,18".split( splitreg ); p++;
pieces[ p ] = "16,18,24,22".split( splitreg ); p++;
pieces[ p ] = "16,20,21,17".split( splitreg ); p++;
pieces[ p ] = "16,20,21,24".split( splitreg ); p++;
pieces[ p ] = "16,24,20,19".split( splitreg ); p++;
pieces[ p ] = "18,20,24,23".split( splitreg ); p++;
pieces[ p ] = "19,22,24,23".split( splitreg ); p++;
pieces[ p ] = "20,23,23,23".split( splitreg ); p++;
pieces[ p ] = "20,24,22,21".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

