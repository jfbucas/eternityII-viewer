
puzzles[ nb_puzzles ] = "brendan/pieces_16x09.txt.js,Brendan 16x09".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_16x09.txt.js" ) {

board_w = 16;
board_h = 9;


pieces[ p ] = "0,0,2,1".split( splitreg ); p++;
pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,0,4,4".split( splitreg ); p++;
pieces[ p ] = "0,1,6,3".split( splitreg ); p++;
pieces[ p ] = "0,1,6,4".split( splitreg ); p++;
pieces[ p ] = "0,1,8,4".split( splitreg ); p++;
pieces[ p ] = "0,1,9,2".split( splitreg ); p++;
pieces[ p ] = "0,1,10,3".split( splitreg ); p++;
pieces[ p ] = "0,1,11,4".split( splitreg ); p++;
pieces[ p ] = "0,1,12,3".split( splitreg ); p++;
pieces[ p ] = "0,1,13,4".split( splitreg ); p++;
pieces[ p ] = "0,1,14,1".split( splitreg ); p++;
pieces[ p ] = "0,1,14,2".split( splitreg ); p++;
pieces[ p ] = "0,1,15,4".split( splitreg ); p++;
pieces[ p ] = "0,1,16,2".split( splitreg ); p++;
pieces[ p ] = "0,2,5,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,1".split( splitreg ); p++;
pieces[ p ] = "0,2,10,1".split( splitreg ); p++;
pieces[ p ] = "0,2,11,3".split( splitreg ); p++;
pieces[ p ] = "0,2,11,4".split( splitreg ); p++;
pieces[ p ] = "0,2,13,1".split( splitreg ); p++;
pieces[ p ] = "0,2,14,3".split( splitreg ); p++;
pieces[ p ] = "0,2,15,1".split( splitreg ); p++;
pieces[ p ] = "0,2,15,3".split( splitreg ); p++;
pieces[ p ] = "0,2,16,1".split( splitreg ); p++;
pieces[ p ] = "0,3,7,3".split( splitreg ); p++;
pieces[ p ] = "0,3,8,1".split( splitreg ); p++;
pieces[ p ] = "0,3,8,3".split( splitreg ); p++;
pieces[ p ] = "0,3,8,4".split( splitreg ); p++;
pieces[ p ] = "0,3,9,4".split( splitreg ); p++;
pieces[ p ] = "0,3,10,1".split( splitreg ); p++;
pieces[ p ] = "0,3,10,2".split( splitreg ); p++;
pieces[ p ] = "0,3,11,2".split( splitreg ); p++;
pieces[ p ] = "0,3,12,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,15,3".split( splitreg ); p++;
pieces[ p ] = "0,4,5,1".split( splitreg ); p++;
pieces[ p ] = "0,4,5,2".split( splitreg ); p++;
pieces[ p ] = "0,4,6,3".split( splitreg ); p++;
pieces[ p ] = "0,4,8,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,4".split( splitreg ); p++;
pieces[ p ] = "0,4,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,16,1".split( splitreg ); p++;
pieces[ p ] = "0,4,16,4".split( splitreg ); p++;
pieces[ p ] = "5,5,6,7".split( splitreg ); p++;
pieces[ p ] = "5,5,6,9".split( splitreg ); p++;
pieces[ p ] = "5,5,7,16".split( splitreg ); p++;
pieces[ p ] = "5,5,11,7".split( splitreg ); p++;
pieces[ p ] = "5,5,14,6".split( splitreg ); p++;
pieces[ p ] = "5,8,7,15".split( splitreg ); p++;
pieces[ p ] = "5,8,10,11".split( splitreg ); p++;
pieces[ p ] = "5,8,12,7".split( splitreg ); p++;
pieces[ p ] = "5,9,7,7".split( splitreg ); p++;
pieces[ p ] = "5,9,12,10".split( splitreg ); p++;
pieces[ p ] = "5,10,16,8".split( splitreg ); p++;
pieces[ p ] = "5,11,6,12".split( splitreg ); p++;
pieces[ p ] = "5,11,8,7".split( splitreg ); p++;
pieces[ p ] = "5,11,10,10".split( splitreg ); p++;
pieces[ p ] = "5,12,9,12".split( splitreg ); p++;
pieces[ p ] = "5,12,16,14".split( splitreg ); p++;
pieces[ p ] = "5,13,8,7".split( splitreg ); p++;
pieces[ p ] = "5,13,8,9".split( splitreg ); p++;
pieces[ p ] = "5,13,9,9".split( splitreg ); p++;
pieces[ p ] = "5,13,10,7".split( splitreg ); p++;
pieces[ p ] = "5,13,12,10".split( splitreg ); p++;
pieces[ p ] = "5,13,14,6".split( splitreg ); p++;
pieces[ p ] = "5,13,15,11".split( splitreg ); p++;
pieces[ p ] = "5,14,15,11".split( splitreg ); p++;
pieces[ p ] = "5,15,12,11".split( splitreg ); p++;
pieces[ p ] = "5,15,14,16".split( splitreg ); p++;
pieces[ p ] = "5,15,15,6".split( splitreg ); p++;
pieces[ p ] = "5,15,16,12".split( splitreg ); p++;
pieces[ p ] = "5,16,9,12".split( splitreg ); p++;
pieces[ p ] = "5,16,13,9".split( splitreg ); p++;
pieces[ p ] = "6,6,9,9".split( splitreg ); p++;
pieces[ p ] = "6,6,15,13".split( splitreg ); p++;
pieces[ p ] = "6,7,10,11".split( splitreg ); p++;
pieces[ p ] = "6,8,9,12".split( splitreg ); p++;
pieces[ p ] = "6,9,10,7".split( splitreg ); p++;
pieces[ p ] = "6,9,10,13".split( splitreg ); p++;
pieces[ p ] = "6,9,11,8".split( splitreg ); p++;
pieces[ p ] = "6,9,15,16".split( splitreg ); p++;
pieces[ p ] = "6,10,7,16".split( splitreg ); p++;
pieces[ p ] = "6,10,11,13".split( splitreg ); p++;
pieces[ p ] = "6,10,14,10".split( splitreg ); p++;
pieces[ p ] = "6,11,8,13".split( splitreg ); p++;
pieces[ p ] = "6,13,8,10".split( splitreg ); p++;
pieces[ p ] = "6,13,8,13".split( splitreg ); p++;
pieces[ p ] = "6,13,16,16".split( splitreg ); p++;
pieces[ p ] = "6,14,7,13".split( splitreg ); p++;
pieces[ p ] = "6,14,9,11".split( splitreg ); p++;
pieces[ p ] = "6,14,13,12".split( splitreg ); p++;
pieces[ p ] = "6,14,16,12".split( splitreg ); p++;
pieces[ p ] = "6,15,7,10".split( splitreg ); p++;
pieces[ p ] = "6,15,8,7".split( splitreg ); p++;
pieces[ p ] = "6,15,11,13".split( splitreg ); p++;
pieces[ p ] = "6,16,8,8".split( splitreg ); p++;
pieces[ p ] = "6,16,13,13".split( splitreg ); p++;
pieces[ p ] = "6,16,14,11".split( splitreg ); p++;
pieces[ p ] = "7,7,9,9".split( splitreg ); p++;
pieces[ p ] = "7,7,12,15".split( splitreg ); p++;
pieces[ p ] = "7,7,16,14".split( splitreg ); p++;
pieces[ p ] = "7,9,12,13".split( splitreg ); p++;
pieces[ p ] = "7,9,13,10".split( splitreg ); p++;
pieces[ p ] = "7,10,8,9".split( splitreg ); p++;
pieces[ p ] = "7,10,16,11".split( splitreg ); p++;
pieces[ p ] = "7,11,9,10".split( splitreg ); p++;
pieces[ p ] = "7,11,14,14".split( splitreg ); p++;
pieces[ p ] = "7,12,8,9".split( splitreg ); p++;
pieces[ p ] = "7,12,14,8".split( splitreg ); p++;
pieces[ p ] = "7,14,12,14".split( splitreg ); p++;
pieces[ p ] = "7,15,8,15".split( splitreg ); p++;
pieces[ p ] = "7,16,8,13".split( splitreg ); p++;
pieces[ p ] = "7,16,13,14".split( splitreg ); p++;
pieces[ p ] = "8,8,10,16".split( splitreg ); p++;
pieces[ p ] = "8,8,15,13".split( splitreg ); p++;
pieces[ p ] = "8,9,14,11".split( splitreg ); p++;
pieces[ p ] = "8,10,12,11".split( splitreg ); p++;
pieces[ p ] = "8,11,14,13".split( splitreg ); p++;
pieces[ p ] = "8,15,13,12".split( splitreg ); p++;
pieces[ p ] = "8,15,16,12".split( splitreg ); p++;
pieces[ p ] = "8,16,10,16".split( splitreg ); p++;
pieces[ p ] = "8,16,15,14".split( splitreg ); p++;
pieces[ p ] = "9,10,11,15".split( splitreg ); p++;
pieces[ p ] = "9,11,9,16".split( splitreg ); p++;
pieces[ p ] = "9,11,12,16".split( splitreg ); p++;
pieces[ p ] = "9,12,12,14".split( splitreg ); p++;
pieces[ p ] = "9,14,15,11".split( splitreg ); p++;
pieces[ p ] = "9,15,11,10".split( splitreg ); p++;
pieces[ p ] = "9,15,15,14".split( splitreg ); p++;
pieces[ p ] = "9,16,11,11".split( splitreg ); p++;
pieces[ p ] = "10,10,14,14".split( splitreg ); p++;
pieces[ p ] = "10,11,16,13".split( splitreg ); p++;
pieces[ p ] = "10,12,15,13".split( splitreg ); p++;
pieces[ p ] = "10,13,12,12".split( splitreg ); p++;
pieces[ p ] = "11,13,12,15".split( splitreg ); p++;
pieces[ p ] = "11,14,15,12".split( splitreg ); p++;
pieces[ p ] = "11,16,15,12".split( splitreg ); p++;
pieces[ p ] = "12,12,14,15".split( splitreg ); p++;
pieces[ p ] = "12,13,14,14".split( splitreg ); p++;
pieces[ p ] = "12,15,16,16".split( splitreg ); p++;
pieces[ p ] = "13,14,16,14".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

