
puzzles[ nb_puzzles ] = "brendan/pieces_18x08.txt.js,Brendan 18x08".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_18x08.txt.js" ) {

board_w = 18;
board_h = 8;


pieces[ p ] = "0,0,1,2".split( splitreg ); p++;
pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,5,1".split( splitreg ); p++;
pieces[ p ] = "0,0,5,4".split( splitreg ); p++;
pieces[ p ] = "0,1,6,2".split( splitreg ); p++;
pieces[ p ] = "0,1,7,1".split( splitreg ); p++;
pieces[ p ] = "0,1,7,3".split( splitreg ); p++;
pieces[ p ] = "0,1,12,1".split( splitreg ); p++;
pieces[ p ] = "0,1,12,2".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,13,4".split( splitreg ); p++;
pieces[ p ] = "0,1,17,5".split( splitreg ); p++;
pieces[ p ] = "0,2,6,1".split( splitreg ); p++;
pieces[ p ] = "0,2,6,4".split( splitreg ); p++;
pieces[ p ] = "0,2,7,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,5".split( splitreg ); p++;
pieces[ p ] = "0,2,8,3".split( splitreg ); p++;
pieces[ p ] = "0,2,8,4".split( splitreg ); p++;
pieces[ p ] = "0,2,9,2".split( splitreg ); p++;
pieces[ p ] = "0,2,12,5".split( splitreg ); p++;
pieces[ p ] = "0,2,14,3".split( splitreg ); p++;
pieces[ p ] = "0,2,16,2".split( splitreg ); p++;
pieces[ p ] = "0,3,6,2".split( splitreg ); p++;
pieces[ p ] = "0,3,6,3".split( splitreg ); p++;
pieces[ p ] = "0,3,6,5".split( splitreg ); p++;
pieces[ p ] = "0,3,8,1".split( splitreg ); p++;
pieces[ p ] = "0,3,9,4".split( splitreg ); p++;
pieces[ p ] = "0,3,10,2".split( splitreg ); p++;
pieces[ p ] = "0,3,10,4".split( splitreg ); p++;
pieces[ p ] = "0,3,12,4".split( splitreg ); p++;
pieces[ p ] = "0,3,13,1".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,4,6,1".split( splitreg ); p++;
pieces[ p ] = "0,4,7,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,5".split( splitreg ); p++;
pieces[ p ] = "0,4,11,3".split( splitreg ); p++;
pieces[ p ] = "0,4,13,3".split( splitreg ); p++;
pieces[ p ] = "0,4,15,2".split( splitreg ); p++;
pieces[ p ] = "0,4,16,3".split( splitreg ); p++;
pieces[ p ] = "0,4,16,5".split( splitreg ); p++;
pieces[ p ] = "0,5,7,5".split( splitreg ); p++;
pieces[ p ] = "0,5,8,4".split( splitreg ); p++;
pieces[ p ] = "0,5,11,5".split( splitreg ); p++;
pieces[ p ] = "0,5,14,2".split( splitreg ); p++;
pieces[ p ] = "0,5,15,1".split( splitreg ); p++;
pieces[ p ] = "0,5,15,3".split( splitreg ); p++;
pieces[ p ] = "0,5,17,5".split( splitreg ); p++;
pieces[ p ] = "6,6,9,11".split( splitreg ); p++;
pieces[ p ] = "6,7,8,14".split( splitreg ); p++;
pieces[ p ] = "6,7,13,9".split( splitreg ); p++;
pieces[ p ] = "6,7,16,7".split( splitreg ); p++;
pieces[ p ] = "6,8,10,10".split( splitreg ); p++;
pieces[ p ] = "6,8,13,17".split( splitreg ); p++;
pieces[ p ] = "6,8,14,16".split( splitreg ); p++;
pieces[ p ] = "6,9,9,13".split( splitreg ); p++;
pieces[ p ] = "6,9,17,16".split( splitreg ); p++;
pieces[ p ] = "6,10,12,9".split( splitreg ); p++;
pieces[ p ] = "6,10,15,10".split( splitreg ); p++;
pieces[ p ] = "6,13,9,14".split( splitreg ); p++;
pieces[ p ] = "6,13,13,13".split( splitreg ); p++;
pieces[ p ] = "6,13,15,15".split( splitreg ); p++;
pieces[ p ] = "6,14,6,16".split( splitreg ); p++;
pieces[ p ] = "6,14,7,11".split( splitreg ); p++;
pieces[ p ] = "6,14,7,13".split( splitreg ); p++;
pieces[ p ] = "6,14,8,8".split( splitreg ); p++;
pieces[ p ] = "6,14,10,15".split( splitreg ); p++;
pieces[ p ] = "6,14,13,8".split( splitreg ); p++;
pieces[ p ] = "6,14,15,11".split( splitreg ); p++;
pieces[ p ] = "6,15,9,16".split( splitreg ); p++;
pieces[ p ] = "6,16,12,11".split( splitreg ); p++;
pieces[ p ] = "6,16,17,8".split( splitreg ); p++;
pieces[ p ] = "6,17,7,9".split( splitreg ); p++;
pieces[ p ] = "6,17,11,7".split( splitreg ); p++;
pieces[ p ] = "6,17,15,11".split( splitreg ); p++;
pieces[ p ] = "7,7,11,15".split( splitreg ); p++;
pieces[ p ] = "7,7,14,14".split( splitreg ); p++;
pieces[ p ] = "7,8,11,14".split( splitreg ); p++;
pieces[ p ] = "7,9,8,8".split( splitreg ); p++;
pieces[ p ] = "7,9,12,9".split( splitreg ); p++;
pieces[ p ] = "7,9,17,8".split( splitreg ); p++;
pieces[ p ] = "7,10,11,11".split( splitreg ); p++;
pieces[ p ] = "7,10,16,12".split( splitreg ); p++;
pieces[ p ] = "7,12,11,14".split( splitreg ); p++;
pieces[ p ] = "7,13,16,11".split( splitreg ); p++;
pieces[ p ] = "7,14,12,8".split( splitreg ); p++;
pieces[ p ] = "7,14,13,11".split( splitreg ); p++;
pieces[ p ] = "7,14,16,13".split( splitreg ); p++;
pieces[ p ] = "7,15,13,17".split( splitreg ); p++;
pieces[ p ] = "7,16,8,12".split( splitreg ); p++;
pieces[ p ] = "7,16,9,15".split( splitreg ); p++;
pieces[ p ] = "7,16,12,10".split( splitreg ); p++;
pieces[ p ] = "7,17,10,12".split( splitreg ); p++;
pieces[ p ] = "7,17,15,11".split( splitreg ); p++;
pieces[ p ] = "7,17,15,15".split( splitreg ); p++;
pieces[ p ] = "8,8,15,10".split( splitreg ); p++;
pieces[ p ] = "8,9,10,13".split( splitreg ); p++;
pieces[ p ] = "8,9,16,13".split( splitreg ); p++;
pieces[ p ] = "8,10,12,15".split( splitreg ); p++;
pieces[ p ] = "8,12,9,13".split( splitreg ); p++;
pieces[ p ] = "8,12,10,14".split( splitreg ); p++;
pieces[ p ] = "8,12,12,12".split( splitreg ); p++;
pieces[ p ] = "8,13,10,9".split( splitreg ); p++;
pieces[ p ] = "8,13,11,13".split( splitreg ); p++;
pieces[ p ] = "8,14,9,16".split( splitreg ); p++;
pieces[ p ] = "8,14,17,16".split( splitreg ); p++;
pieces[ p ] = "8,15,12,11".split( splitreg ); p++;
pieces[ p ] = "8,15,13,9".split( splitreg ); p++;
pieces[ p ] = "8,16,13,11".split( splitreg ); p++;
pieces[ p ] = "8,17,12,10".split( splitreg ); p++;
pieces[ p ] = "8,17,16,10".split( splitreg ); p++;
pieces[ p ] = "8,17,17,10".split( splitreg ); p++;
pieces[ p ] = "9,9,17,17".split( splitreg ); p++;
pieces[ p ] = "9,10,10,17".split( splitreg ); p++;
pieces[ p ] = "9,10,15,16".split( splitreg ); p++;
pieces[ p ] = "9,10,17,16".split( splitreg ); p++;
pieces[ p ] = "9,11,13,11".split( splitreg ); p++;
pieces[ p ] = "9,11,14,10".split( splitreg ); p++;
pieces[ p ] = "9,11,14,13".split( splitreg ); p++;
pieces[ p ] = "9,11,17,12".split( splitreg ); p++;
pieces[ p ] = "9,13,15,11".split( splitreg ); p++;
pieces[ p ] = "9,14,14,12".split( splitreg ); p++;
pieces[ p ] = "9,15,11,15".split( splitreg ); p++;
pieces[ p ] = "9,15,16,11".split( splitreg ); p++;
pieces[ p ] = "9,17,17,11".split( splitreg ); p++;
pieces[ p ] = "10,10,17,11".split( splitreg ); p++;
pieces[ p ] = "10,11,14,12".split( splitreg ); p++;
pieces[ p ] = "10,12,12,17".split( splitreg ); p++;
pieces[ p ] = "10,12,13,12".split( splitreg ); p++;
pieces[ p ] = "10,13,17,13".split( splitreg ); p++;
pieces[ p ] = "10,15,12,12".split( splitreg ); p++;
pieces[ p ] = "10,15,13,12".split( splitreg ); p++;
pieces[ p ] = "10,16,15,12".split( splitreg ); p++;
pieces[ p ] = "11,12,16,16".split( splitreg ); p++;
pieces[ p ] = "11,14,11,16".split( splitreg ); p++;
pieces[ p ] = "11,14,16,17".split( splitreg ); p++;
pieces[ p ] = "11,15,12,14".split( splitreg ); p++;
pieces[ p ] = "11,15,16,13".split( splitreg ); p++;
pieces[ p ] = "12,15,13,16".split( splitreg ); p++;
pieces[ p ] = "12,15,14,17".split( splitreg ); p++;
pieces[ p ] = "13,15,17,14".split( splitreg ); p++;
pieces[ p ] = "14,14,16,16".split( splitreg ); p++;
pieces[ p ] = "14,15,15,16".split( splitreg ); p++;
pieces[ p ] = "15,17,17,17".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

