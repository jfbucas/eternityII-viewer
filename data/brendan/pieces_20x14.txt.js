
puzzles[ nb_puzzles ] = "brendan/pieces_20x14.txt.js,Brendan 20x14".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_20x14.txt.js" ) {

board_w = 20;
board_h = 14;


pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,3,2".split( splitreg ); p++;
pieces[ p ] = "0,0,5,1".split( splitreg ); p++;
pieces[ p ] = "0,0,5,4".split( splitreg ); p++;
pieces[ p ] = "0,1,9,4".split( splitreg ); p++;
pieces[ p ] = "0,1,10,2".split( splitreg ); p++;
pieces[ p ] = "0,1,12,3".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,1".split( splitreg ); p++;
pieces[ p ] = "0,1,14,2".split( splitreg ); p++;
pieces[ p ] = "0,1,15,4".split( splitreg ); p++;
pieces[ p ] = "0,1,17,1".split( splitreg ); p++;
pieces[ p ] = "0,1,18,3".split( splitreg ); p++;
pieces[ p ] = "0,1,19,3".split( splitreg ); p++;
pieces[ p ] = "0,1,19,4".split( splitreg ); p++;
pieces[ p ] = "0,1,21,1".split( splitreg ); p++;
pieces[ p ] = "0,1,22,3".split( splitreg ); p++;
pieces[ p ] = "0,2,6,4".split( splitreg ); p++;
pieces[ p ] = "0,2,8,1".split( splitreg ); p++;
pieces[ p ] = "0,2,8,4".split( splitreg ); p++;
pieces[ p ] = "0,2,8,5".split( splitreg ); p++;
pieces[ p ] = "0,2,11,4".split( splitreg ); p++;
pieces[ p ] = "0,2,12,1".split( splitreg ); p++;
pieces[ p ] = "0,2,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,15,3".split( splitreg ); p++;
pieces[ p ] = "0,2,17,1".split( splitreg ); p++;
pieces[ p ] = "0,2,21,2".split( splitreg ); p++;
pieces[ p ] = "0,2,23,4".split( splitreg ); p++;
pieces[ p ] = "0,2,23,5".split( splitreg ); p++;
pieces[ p ] = "0,3,7,5".split( splitreg ); p++;
pieces[ p ] = "0,3,8,2".split( splitreg ); p++;
pieces[ p ] = "0,3,8,4".split( splitreg ); p++;
pieces[ p ] = "0,3,12,4".split( splitreg ); p++;
pieces[ p ] = "0,3,13,3".split( splitreg ); p++;
pieces[ p ] = "0,3,15,5".split( splitreg ); p++;
pieces[ p ] = "0,3,16,2".split( splitreg ); p++;
pieces[ p ] = "0,3,17,1".split( splitreg ); p++;
pieces[ p ] = "0,3,19,1".split( splitreg ); p++;
pieces[ p ] = "0,3,22,4".split( splitreg ); p++;
pieces[ p ] = "0,3,23,3".split( splitreg ); p++;
pieces[ p ] = "0,3,23,5".split( splitreg ); p++;
pieces[ p ] = "0,4,6,1".split( splitreg ); p++;
pieces[ p ] = "0,4,7,5".split( splitreg ); p++;
pieces[ p ] = "0,4,11,3".split( splitreg ); p++;
pieces[ p ] = "0,4,13,3".split( splitreg ); p++;
pieces[ p ] = "0,4,13,5".split( splitreg ); p++;
pieces[ p ] = "0,4,14,1".split( splitreg ); p++;
pieces[ p ] = "0,4,14,2".split( splitreg ); p++;
pieces[ p ] = "0,4,14,5".split( splitreg ); p++;
pieces[ p ] = "0,4,16,1".split( splitreg ); p++;
pieces[ p ] = "0,4,16,5".split( splitreg ); p++;
pieces[ p ] = "0,4,18,2".split( splitreg ); p++;
pieces[ p ] = "0,4,22,5".split( splitreg ); p++;
pieces[ p ] = "0,4,23,2".split( splitreg ); p++;
pieces[ p ] = "0,5,6,2".split( splitreg ); p++;
pieces[ p ] = "0,5,6,3".split( splitreg ); p++;
pieces[ p ] = "0,5,7,3".split( splitreg ); p++;
pieces[ p ] = "0,5,8,2".split( splitreg ); p++;
pieces[ p ] = "0,5,15,4".split( splitreg ); p++;
pieces[ p ] = "0,5,15,5".split( splitreg ); p++;
pieces[ p ] = "0,5,16,2".split( splitreg ); p++;
pieces[ p ] = "0,5,16,5".split( splitreg ); p++;
pieces[ p ] = "0,5,19,4".split( splitreg ); p++;
pieces[ p ] = "0,5,20,1".split( splitreg ); p++;
pieces[ p ] = "6,6,20,14".split( splitreg ); p++;
pieces[ p ] = "6,7,9,22".split( splitreg ); p++;
pieces[ p ] = "6,7,11,11".split( splitreg ); p++;
pieces[ p ] = "6,7,19,7".split( splitreg ); p++;
pieces[ p ] = "6,8,9,11".split( splitreg ); p++;
pieces[ p ] = "6,9,13,14".split( splitreg ); p++;
pieces[ p ] = "6,9,19,13".split( splitreg ); p++;
pieces[ p ] = "6,9,20,15".split( splitreg ); p++;
pieces[ p ] = "6,10,13,14".split( splitreg ); p++;
pieces[ p ] = "6,11,7,19".split( splitreg ); p++;
pieces[ p ] = "6,11,15,12".split( splitreg ); p++;
pieces[ p ] = "6,11,18,15".split( splitreg ); p++;
pieces[ p ] = "6,12,7,14".split( splitreg ); p++;
pieces[ p ] = "6,12,9,21".split( splitreg ); p++;
pieces[ p ] = "6,12,10,18".split( splitreg ); p++;
pieces[ p ] = "6,12,18,13".split( splitreg ); p++;
pieces[ p ] = "6,12,19,8".split( splitreg ); p++;
pieces[ p ] = "6,13,9,23".split( splitreg ); p++;
pieces[ p ] = "6,13,10,23".split( splitreg ); p++;
pieces[ p ] = "6,13,16,8".split( splitreg ); p++;
pieces[ p ] = "6,14,8,15".split( splitreg ); p++;
pieces[ p ] = "6,14,11,17".split( splitreg ); p++;
pieces[ p ] = "6,14,17,17".split( splitreg ); p++;
pieces[ p ] = "6,14,22,11".split( splitreg ); p++;
pieces[ p ] = "6,15,12,9".split( splitreg ); p++;
pieces[ p ] = "6,15,18,15".split( splitreg ); p++;
pieces[ p ] = "6,15,22,18".split( splitreg ); p++;
pieces[ p ] = "6,16,8,14".split( splitreg ); p++;
pieces[ p ] = "6,16,12,13".split( splitreg ); p++;
pieces[ p ] = "6,17,6,18".split( splitreg ); p++;
pieces[ p ] = "6,17,16,20".split( splitreg ); p++;
pieces[ p ] = "6,17,17,9".split( splitreg ); p++;
pieces[ p ] = "6,18,11,20".split( splitreg ); p++;
pieces[ p ] = "6,18,21,22".split( splitreg ); p++;
pieces[ p ] = "6,18,22,23".split( splitreg ); p++;
pieces[ p ] = "6,19,13,10".split( splitreg ); p++;
pieces[ p ] = "6,19,18,21".split( splitreg ); p++;
pieces[ p ] = "6,19,19,11".split( splitreg ); p++;
pieces[ p ] = "6,19,21,22".split( splitreg ); p++;
pieces[ p ] = "6,20,22,19".split( splitreg ); p++;
pieces[ p ] = "6,21,22,10".split( splitreg ); p++;
pieces[ p ] = "6,22,12,19".split( splitreg ); p++;
pieces[ p ] = "6,23,10,21".split( splitreg ); p++;
pieces[ p ] = "6,23,13,10".split( splitreg ); p++;
pieces[ p ] = "6,23,13,20".split( splitreg ); p++;
pieces[ p ] = "6,23,16,10".split( splitreg ); p++;
pieces[ p ] = "7,7,19,18".split( splitreg ); p++;
pieces[ p ] = "7,7,22,23".split( splitreg ); p++;
pieces[ p ] = "7,8,10,17".split( splitreg ); p++;
pieces[ p ] = "7,8,18,23".split( splitreg ); p++;
pieces[ p ] = "7,8,23,8".split( splitreg ); p++;
pieces[ p ] = "7,9,11,19".split( splitreg ); p++;
pieces[ p ] = "7,9,19,8".split( splitreg ); p++;
pieces[ p ] = "7,10,13,22".split( splitreg ); p++;
pieces[ p ] = "7,11,9,23".split( splitreg ); p++;
pieces[ p ] = "7,11,11,13".split( splitreg ); p++;
pieces[ p ] = "7,11,21,12".split( splitreg ); p++;
pieces[ p ] = "7,12,10,21".split( splitreg ); p++;
pieces[ p ] = "7,12,11,10".split( splitreg ); p++;
pieces[ p ] = "7,12,16,18".split( splitreg ); p++;
pieces[ p ] = "7,12,22,12".split( splitreg ); p++;
pieces[ p ] = "7,13,11,22".split( splitreg ); p++;
pieces[ p ] = "7,13,19,9".split( splitreg ); p++;
pieces[ p ] = "7,13,22,12".split( splitreg ); p++;
pieces[ p ] = "7,14,11,8".split( splitreg ); p++;
pieces[ p ] = "7,14,19,12".split( splitreg ); p++;
pieces[ p ] = "7,14,21,20".split( splitreg ); p++;
pieces[ p ] = "7,15,14,17".split( splitreg ); p++;
pieces[ p ] = "7,15,17,8".split( splitreg ); p++;
pieces[ p ] = "7,15,23,21".split( splitreg ); p++;
pieces[ p ] = "7,16,16,12".split( splitreg ); p++;
pieces[ p ] = "7,16,22,19".split( splitreg ); p++;
pieces[ p ] = "7,17,7,18".split( splitreg ); p++;
pieces[ p ] = "7,18,12,8".split( splitreg ); p++;
pieces[ p ] = "7,18,14,19".split( splitreg ); p++;
pieces[ p ] = "7,18,20,22".split( splitreg ); p++;
pieces[ p ] = "7,18,21,10".split( splitreg ); p++;
pieces[ p ] = "7,19,17,13".split( splitreg ); p++;
pieces[ p ] = "7,20,10,16".split( splitreg ); p++;
pieces[ p ] = "7,20,12,16".split( splitreg ); p++;
pieces[ p ] = "7,20,13,9".split( splitreg ); p++;
pieces[ p ] = "7,20,15,20".split( splitreg ); p++;
pieces[ p ] = "7,21,14,19".split( splitreg ); p++;
pieces[ p ] = "7,21,17,21".split( splitreg ); p++;
pieces[ p ] = "7,22,14,22".split( splitreg ); p++;
pieces[ p ] = "7,23,19,16".split( splitreg ); p++;
pieces[ p ] = "8,8,13,23".split( splitreg ); p++;
pieces[ p ] = "8,9,15,21".split( splitreg ); p++;
pieces[ p ] = "8,9,20,17".split( splitreg ); p++;
pieces[ p ] = "8,9,22,14".split( splitreg ); p++;
pieces[ p ] = "8,10,18,11".split( splitreg ); p++;
pieces[ p ] = "8,10,23,20".split( splitreg ); p++;
pieces[ p ] = "8,11,8,17".split( splitreg ); p++;
pieces[ p ] = "8,13,16,15".split( splitreg ); p++;
pieces[ p ] = "8,13,19,10".split( splitreg ); p++;
pieces[ p ] = "8,14,13,20".split( splitreg ); p++;
pieces[ p ] = "8,15,14,14".split( splitreg ); p++;
pieces[ p ] = "8,16,10,15".split( splitreg ); p++;
pieces[ p ] = "8,16,12,9".split( splitreg ); p++;
pieces[ p ] = "8,16,13,20".split( splitreg ); p++;
pieces[ p ] = "8,16,13,22".split( splitreg ); p++;
pieces[ p ] = "8,16,19,16".split( splitreg ); p++;
pieces[ p ] = "8,16,20,19".split( splitreg ); p++;
pieces[ p ] = "8,17,8,20".split( splitreg ); p++;
pieces[ p ] = "8,17,9,20".split( splitreg ); p++;
pieces[ p ] = "8,17,15,15".split( splitreg ); p++;
pieces[ p ] = "8,17,15,17".split( splitreg ); p++;
pieces[ p ] = "8,17,18,12".split( splitreg ); p++;
pieces[ p ] = "8,18,13,14".split( splitreg ); p++;
pieces[ p ] = "8,18,13,23".split( splitreg ); p++;
pieces[ p ] = "8,18,15,22".split( splitreg ); p++;
pieces[ p ] = "8,18,19,10".split( splitreg ); p++;
pieces[ p ] = "8,20,17,13".split( splitreg ); p++;
pieces[ p ] = "8,21,22,11".split( splitreg ); p++;
pieces[ p ] = "8,22,12,21".split( splitreg ); p++;
pieces[ p ] = "8,22,18,17".split( splitreg ); p++;
pieces[ p ] = "9,9,17,17".split( splitreg ); p++;
pieces[ p ] = "9,9,18,15".split( splitreg ); p++;
pieces[ p ] = "9,9,19,19".split( splitreg ); p++;
pieces[ p ] = "9,10,19,12".split( splitreg ); p++;
pieces[ p ] = "9,10,23,16".split( splitreg ); p++;
pieces[ p ] = "9,10,23,23".split( splitreg ); p++;
pieces[ p ] = "9,12,11,20".split( splitreg ); p++;
pieces[ p ] = "9,13,17,21".split( splitreg ); p++;
pieces[ p ] = "9,13,18,21".split( splitreg ); p++;
pieces[ p ] = "9,14,12,17".split( splitreg ); p++;
pieces[ p ] = "9,14,13,15".split( splitreg ); p++;
pieces[ p ] = "9,14,18,14".split( splitreg ); p++;
pieces[ p ] = "9,15,16,12".split( splitreg ); p++;
pieces[ p ] = "9,16,14,22".split( splitreg ); p++;
pieces[ p ] = "9,16,20,16".split( splitreg ); p++;
pieces[ p ] = "9,17,12,21".split( splitreg ); p++;
pieces[ p ] = "9,18,12,10".split( splitreg ); p++;
pieces[ p ] = "9,18,13,15".split( splitreg ); p++;
pieces[ p ] = "9,20,11,12".split( splitreg ); p++;
pieces[ p ] = "9,20,12,11".split( splitreg ); p++;
pieces[ p ] = "9,20,15,14".split( splitreg ); p++;
pieces[ p ] = "9,20,23,16".split( splitreg ); p++;
pieces[ p ] = "9,21,10,15".split( splitreg ); p++;
pieces[ p ] = "9,21,12,15".split( splitreg ); p++;
pieces[ p ] = "9,21,14,11".split( splitreg ); p++;
pieces[ p ] = "9,21,20,12".split( splitreg ); p++;
pieces[ p ] = "9,22,10,23".split( splitreg ); p++;
pieces[ p ] = "9,22,17,16".split( splitreg ); p++;
pieces[ p ] = "9,23,12,11".split( splitreg ); p++;
pieces[ p ] = "10,10,17,22".split( splitreg ); p++;
pieces[ p ] = "10,10,19,20".split( splitreg ); p++;
pieces[ p ] = "10,11,11,22".split( splitreg ); p++;
pieces[ p ] = "10,11,14,20".split( splitreg ); p++;
pieces[ p ] = "10,11,15,12".split( splitreg ); p++;
pieces[ p ] = "10,11,16,23".split( splitreg ); p++;
pieces[ p ] = "10,12,13,14".split( splitreg ); p++;
pieces[ p ] = "10,12,19,18".split( splitreg ); p++;
pieces[ p ] = "10,13,15,18".split( splitreg ); p++;
pieces[ p ] = "10,15,10,17".split( splitreg ); p++;
pieces[ p ] = "10,15,13,16".split( splitreg ); p++;
pieces[ p ] = "10,16,17,18".split( splitreg ); p++;
pieces[ p ] = "10,17,20,15".split( splitreg ); p++;
pieces[ p ] = "10,19,17,21".split( splitreg ); p++;
pieces[ p ] = "10,19,19,18".split( splitreg ); p++;
pieces[ p ] = "10,20,20,11".split( splitreg ); p++;
pieces[ p ] = "10,21,12,11".split( splitreg ); p++;
pieces[ p ] = "10,21,13,23".split( splitreg ); p++;
pieces[ p ] = "10,21,20,17".split( splitreg ); p++;
pieces[ p ] = "10,21,20,23".split( splitreg ); p++;
pieces[ p ] = "10,22,18,21".split( splitreg ); p++;
pieces[ p ] = "10,22,20,23".split( splitreg ); p++;
pieces[ p ] = "10,23,13,20".split( splitreg ); p++;
pieces[ p ] = "11,13,18,17".split( splitreg ); p++;
pieces[ p ] = "11,14,23,23".split( splitreg ); p++;
pieces[ p ] = "11,15,14,19".split( splitreg ); p++;
pieces[ p ] = "11,15,20,17".split( splitreg ); p++;
pieces[ p ] = "11,15,21,18".split( splitreg ); p++;
pieces[ p ] = "11,16,22,16".split( splitreg ); p++;
pieces[ p ] = "11,16,23,15".split( splitreg ); p++;
pieces[ p ] = "11,17,13,14".split( splitreg ); p++;
pieces[ p ] = "11,17,14,18".split( splitreg ); p++;
pieces[ p ] = "11,19,15,15".split( splitreg ); p++;
pieces[ p ] = "11,19,19,13".split( splitreg ); p++;
pieces[ p ] = "11,20,12,12".split( splitreg ); p++;
pieces[ p ] = "11,20,22,19".split( splitreg ); p++;
pieces[ p ] = "11,21,22,21".split( splitreg ); p++;
pieces[ p ] = "11,21,23,18".split( splitreg ); p++;
pieces[ p ] = "11,22,12,23".split( splitreg ); p++;
pieces[ p ] = "11,22,21,13".split( splitreg ); p++;
pieces[ p ] = "12,15,21,14".split( splitreg ); p++;
pieces[ p ] = "12,15,22,14".split( splitreg ); p++;
pieces[ p ] = "12,16,17,14".split( splitreg ); p++;
pieces[ p ] = "12,16,17,20".split( splitreg ); p++;
pieces[ p ] = "12,17,16,19".split( splitreg ); p++;
pieces[ p ] = "12,21,18,23".split( splitreg ); p++;
pieces[ p ] = "12,22,16,17".split( splitreg ); p++;
pieces[ p ] = "12,23,16,23".split( splitreg ); p++;
pieces[ p ] = "13,14,13,21".split( splitreg ); p++;
pieces[ p ] = "13,15,16,23".split( splitreg ); p++;
pieces[ p ] = "13,16,15,20".split( splitreg ); p++;
pieces[ p ] = "13,19,15,16".split( splitreg ); p++;
pieces[ p ] = "13,23,17,21".split( splitreg ); p++;
pieces[ p ] = "13,23,17,23".split( splitreg ); p++;
pieces[ p ] = "14,17,21,20".split( splitreg ); p++;
pieces[ p ] = "14,19,15,18".split( splitreg ); p++;
pieces[ p ] = "14,19,18,19".split( splitreg ); p++;
pieces[ p ] = "14,20,16,16".split( splitreg ); p++;
pieces[ p ] = "14,21,21,23".split( splitreg ); p++;
pieces[ p ] = "14,21,22,21".split( splitreg ); p++;
pieces[ p ] = "14,22,16,17".split( splitreg ); p++;
pieces[ p ] = "14,22,18,16".split( splitreg ); p++;
pieces[ p ] = "14,23,21,20".split( splitreg ); p++;
pieces[ p ] = "15,22,20,22".split( splitreg ); p++;
pieces[ p ] = "15,22,22,16".split( splitreg ); p++;
pieces[ p ] = "15,23,22,18".split( splitreg ); p++;
pieces[ p ] = "16,19,18,20".split( splitreg ); p++;
pieces[ p ] = "17,18,17,23".split( splitreg ); p++;
pieces[ p ] = "18,19,23,23".split( splitreg ); p++;
pieces[ p ] = "18,20,19,20".split( splitreg ); p++;
pieces[ p ] = "21,21,21,22".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

