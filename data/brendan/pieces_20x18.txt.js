
puzzles[ nb_puzzles ] = "brendan/pieces_20x18.txt.js,Brendan 20x18".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_20x18.txt.js" ) {

board_w = 20;
board_h = 18;


pieces[ p ] = "0,0,2,1".split( splitreg ); p++;
pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,0,5,1".split( splitreg ); p++;
pieces[ p ] = "0,1,6,3".split( splitreg ); p++;
pieces[ p ] = "0,1,6,5".split( splitreg ); p++;
pieces[ p ] = "0,1,8,1".split( splitreg ); p++;
pieces[ p ] = "0,1,9,1".split( splitreg ); p++;
pieces[ p ] = "0,1,11,3".split( splitreg ); p++;
pieces[ p ] = "0,1,12,4".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,13,4".split( splitreg ); p++;
pieces[ p ] = "0,1,14,2".split( splitreg ); p++;
pieces[ p ] = "0,1,17,1".split( splitreg ); p++;
pieces[ p ] = "0,1,20,4".split( splitreg ); p++;
pieces[ p ] = "0,1,22,1".split( splitreg ); p++;
pieces[ p ] = "0,1,24,2".split( splitreg ); p++;
pieces[ p ] = "0,1,25,4".split( splitreg ); p++;
pieces[ p ] = "0,1,26,2".split( splitreg ); p++;
pieces[ p ] = "0,2,10,1".split( splitreg ); p++;
pieces[ p ] = "0,2,15,1".split( splitreg ); p++;
pieces[ p ] = "0,2,16,5".split( splitreg ); p++;
pieces[ p ] = "0,2,17,3".split( splitreg ); p++;
pieces[ p ] = "0,2,18,5".split( splitreg ); p++;
pieces[ p ] = "0,2,19,2".split( splitreg ); p++;
pieces[ p ] = "0,2,19,4".split( splitreg ); p++;
pieces[ p ] = "0,2,20,2".split( splitreg ); p++;
pieces[ p ] = "0,2,20,4".split( splitreg ); p++;
pieces[ p ] = "0,2,21,3".split( splitreg ); p++;
pieces[ p ] = "0,2,23,4".split( splitreg ); p++;
pieces[ p ] = "0,2,26,4".split( splitreg ); p++;
pieces[ p ] = "0,3,6,5".split( splitreg ); p++;
pieces[ p ] = "0,3,7,1".split( splitreg ); p++;
pieces[ p ] = "0,3,12,5".split( splitreg ); p++;
pieces[ p ] = "0,3,13,5".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,15,1".split( splitreg ); p++;
pieces[ p ] = "0,3,15,4".split( splitreg ); p++;
pieces[ p ] = "0,3,16,2".split( splitreg ); p++;
pieces[ p ] = "0,3,16,5".split( splitreg ); p++;
pieces[ p ] = "0,3,17,3".split( splitreg ); p++;
pieces[ p ] = "0,3,19,2".split( splitreg ); p++;
pieces[ p ] = "0,3,19,4".split( splitreg ); p++;
pieces[ p ] = "0,3,24,4".split( splitreg ); p++;
pieces[ p ] = "0,3,26,5".split( splitreg ); p++;
pieces[ p ] = "0,4,6,3".split( splitreg ); p++;
pieces[ p ] = "0,4,6,5".split( splitreg ); p++;
pieces[ p ] = "0,4,9,3".split( splitreg ); p++;
pieces[ p ] = "0,4,9,5".split( splitreg ); p++;
pieces[ p ] = "0,4,10,5".split( splitreg ); p++;
pieces[ p ] = "0,4,11,5".split( splitreg ); p++;
pieces[ p ] = "0,4,14,5".split( splitreg ); p++;
pieces[ p ] = "0,4,15,2".split( splitreg ); p++;
pieces[ p ] = "0,4,16,3".split( splitreg ); p++;
pieces[ p ] = "0,4,17,2".split( splitreg ); p++;
pieces[ p ] = "0,4,18,4".split( splitreg ); p++;
pieces[ p ] = "0,4,26,1".split( splitreg ); p++;
pieces[ p ] = "0,4,26,2".split( splitreg ); p++;
pieces[ p ] = "0,4,26,4".split( splitreg ); p++;
pieces[ p ] = "0,5,8,3".split( splitreg ); p++;
pieces[ p ] = "0,5,9,3".split( splitreg ); p++;
pieces[ p ] = "0,5,11,3".split( splitreg ); p++;
pieces[ p ] = "0,5,14,1".split( splitreg ); p++;
pieces[ p ] = "0,5,15,2".split( splitreg ); p++;
pieces[ p ] = "0,5,16,2".split( splitreg ); p++;
pieces[ p ] = "0,5,17,5".split( splitreg ); p++;
pieces[ p ] = "0,5,19,2".split( splitreg ); p++;
pieces[ p ] = "0,5,21,1".split( splitreg ); p++;
pieces[ p ] = "0,5,22,1".split( splitreg ); p++;
pieces[ p ] = "0,5,24,1".split( splitreg ); p++;
pieces[ p ] = "0,5,24,3".split( splitreg ); p++;
pieces[ p ] = "0,5,26,2".split( splitreg ); p++;
pieces[ p ] = "6,7,19,25".split( splitreg ); p++;
pieces[ p ] = "6,7,21,18".split( splitreg ); p++;
pieces[ p ] = "6,8,8,23".split( splitreg ); p++;
pieces[ p ] = "6,8,12,18".split( splitreg ); p++;
pieces[ p ] = "6,8,16,18".split( splitreg ); p++;
pieces[ p ] = "6,8,17,22".split( splitreg ); p++;
pieces[ p ] = "6,9,6,24".split( splitreg ); p++;
pieces[ p ] = "6,9,13,19".split( splitreg ); p++;
pieces[ p ] = "6,9,15,13".split( splitreg ); p++;
pieces[ p ] = "6,9,24,11".split( splitreg ); p++;
pieces[ p ] = "6,10,7,11".split( splitreg ); p++;
pieces[ p ] = "6,10,7,12".split( splitreg ); p++;
pieces[ p ] = "6,10,17,16".split( splitreg ); p++;
pieces[ p ] = "6,10,24,14".split( splitreg ); p++;
pieces[ p ] = "6,11,13,11".split( splitreg ); p++;
pieces[ p ] = "6,11,23,11".split( splitreg ); p++;
pieces[ p ] = "6,12,9,24".split( splitreg ); p++;
pieces[ p ] = "6,12,11,23".split( splitreg ); p++;
pieces[ p ] = "6,12,20,19".split( splitreg ); p++;
pieces[ p ] = "6,12,23,17".split( splitreg ); p++;
pieces[ p ] = "6,12,26,16".split( splitreg ); p++;
pieces[ p ] = "6,13,10,15".split( splitreg ); p++;
pieces[ p ] = "6,13,13,20".split( splitreg ); p++;
pieces[ p ] = "6,14,18,20".split( splitreg ); p++;
pieces[ p ] = "6,14,26,23".split( splitreg ); p++;
pieces[ p ] = "6,16,10,19".split( splitreg ); p++;
pieces[ p ] = "6,16,23,15".split( splitreg ); p++;
pieces[ p ] = "6,17,13,26".split( splitreg ); p++;
pieces[ p ] = "6,17,15,20".split( splitreg ); p++;
pieces[ p ] = "6,17,24,11".split( splitreg ); p++;
pieces[ p ] = "6,17,25,24".split( splitreg ); p++;
pieces[ p ] = "6,18,17,19".split( splitreg ); p++;
pieces[ p ] = "6,18,19,13".split( splitreg ); p++;
pieces[ p ] = "6,18,22,22".split( splitreg ); p++;
pieces[ p ] = "6,18,26,9".split( splitreg ); p++;
pieces[ p ] = "6,19,16,17".split( splitreg ); p++;
pieces[ p ] = "6,19,26,10".split( splitreg ); p++;
pieces[ p ] = "6,20,15,11".split( splitreg ); p++;
pieces[ p ] = "6,22,12,10".split( splitreg ); p++;
pieces[ p ] = "6,22,16,23".split( splitreg ); p++;
pieces[ p ] = "6,22,23,21".split( splitreg ); p++;
pieces[ p ] = "6,23,11,15".split( splitreg ); p++;
pieces[ p ] = "6,23,20,10".split( splitreg ); p++;
pieces[ p ] = "6,23,25,22".split( splitreg ); p++;
pieces[ p ] = "6,25,8,22".split( splitreg ); p++;
pieces[ p ] = "6,25,12,18".split( splitreg ); p++;
pieces[ p ] = "6,25,13,23".split( splitreg ); p++;
pieces[ p ] = "6,25,15,10".split( splitreg ); p++;
pieces[ p ] = "6,25,18,9".split( splitreg ); p++;
pieces[ p ] = "6,25,20,14".split( splitreg ); p++;
pieces[ p ] = "6,25,21,17".split( splitreg ); p++;
pieces[ p ] = "6,26,9,18".split( splitreg ); p++;
pieces[ p ] = "6,26,15,22".split( splitreg ); p++;
pieces[ p ] = "6,26,16,7".split( splitreg ); p++;
pieces[ p ] = "7,7,12,19".split( splitreg ); p++;
pieces[ p ] = "7,7,14,16".split( splitreg ); p++;
pieces[ p ] = "7,7,25,8".split( splitreg ); p++;
pieces[ p ] = "7,7,25,11".split( splitreg ); p++;
pieces[ p ] = "7,8,8,11".split( splitreg ); p++;
pieces[ p ] = "7,8,18,15".split( splitreg ); p++;
pieces[ p ] = "7,8,21,15".split( splitreg ); p++;
pieces[ p ] = "7,8,21,26".split( splitreg ); p++;
pieces[ p ] = "7,8,23,8".split( splitreg ); p++;
pieces[ p ] = "7,9,16,26".split( splitreg ); p++;
pieces[ p ] = "7,9,18,17".split( splitreg ); p++;
pieces[ p ] = "7,9,20,24".split( splitreg ); p++;
pieces[ p ] = "7,9,24,18".split( splitreg ); p++;
pieces[ p ] = "7,9,26,15".split( splitreg ); p++;
pieces[ p ] = "7,10,22,13".split( splitreg ); p++;
pieces[ p ] = "7,10,26,17".split( splitreg ); p++;
pieces[ p ] = "7,11,22,13".split( splitreg ); p++;
pieces[ p ] = "7,12,9,8".split( splitreg ); p++;
pieces[ p ] = "7,13,11,13".split( splitreg ); p++;
pieces[ p ] = "7,13,12,20".split( splitreg ); p++;
pieces[ p ] = "7,13,15,11".split( splitreg ); p++;
pieces[ p ] = "7,13,22,22".split( splitreg ); p++;
pieces[ p ] = "7,14,9,23".split( splitreg ); p++;
pieces[ p ] = "7,14,14,20".split( splitreg ); p++;
pieces[ p ] = "7,14,14,25".split( splitreg ); p++;
pieces[ p ] = "7,14,15,21".split( splitreg ); p++;
pieces[ p ] = "7,14,22,12".split( splitreg ); p++;
pieces[ p ] = "7,15,11,14".split( splitreg ); p++;
pieces[ p ] = "7,15,16,15".split( splitreg ); p++;
pieces[ p ] = "7,16,19,11".split( splitreg ); p++;
pieces[ p ] = "7,17,12,11".split( splitreg ); p++;
pieces[ p ] = "7,17,13,26".split( splitreg ); p++;
pieces[ p ] = "7,18,10,13".split( splitreg ); p++;
pieces[ p ] = "7,19,17,20".split( splitreg ); p++;
pieces[ p ] = "7,20,23,13".split( splitreg ); p++;
pieces[ p ] = "7,20,23,15".split( splitreg ); p++;
pieces[ p ] = "7,21,9,25".split( splitreg ); p++;
pieces[ p ] = "7,21,16,18".split( splitreg ); p++;
pieces[ p ] = "7,21,18,10".split( splitreg ); p++;
pieces[ p ] = "7,23,21,16".split( splitreg ); p++;
pieces[ p ] = "7,24,15,24".split( splitreg ); p++;
pieces[ p ] = "7,24,23,13".split( splitreg ); p++;
pieces[ p ] = "7,25,10,16".split( splitreg ); p++;
pieces[ p ] = "7,25,11,14".split( splitreg ); p++;
pieces[ p ] = "7,25,15,19".split( splitreg ); p++;
pieces[ p ] = "7,25,19,16".split( splitreg ); p++;
pieces[ p ] = "7,25,20,14".split( splitreg ); p++;
pieces[ p ] = "7,26,26,18".split( splitreg ); p++;
pieces[ p ] = "8,8,19,23".split( splitreg ); p++;
pieces[ p ] = "8,8,20,20".split( splitreg ); p++;
pieces[ p ] = "8,9,11,24".split( splitreg ); p++;
pieces[ p ] = "8,9,24,15".split( splitreg ); p++;
pieces[ p ] = "8,10,9,12".split( splitreg ); p++;
pieces[ p ] = "8,10,11,11".split( splitreg ); p++;
pieces[ p ] = "8,10,26,20".split( splitreg ); p++;
pieces[ p ] = "8,11,9,25".split( splitreg ); p++;
pieces[ p ] = "8,11,13,18".split( splitreg ); p++;
pieces[ p ] = "8,11,21,22".split( splitreg ); p++;
pieces[ p ] = "8,12,24,14".split( splitreg ); p++;
pieces[ p ] = "8,13,10,10".split( splitreg ); p++;
pieces[ p ] = "8,14,8,19".split( splitreg ); p++;
pieces[ p ] = "8,14,12,26".split( splitreg ); p++;
pieces[ p ] = "8,14,26,21".split( splitreg ); p++;
pieces[ p ] = "8,15,20,18".split( splitreg ); p++;
pieces[ p ] = "8,15,22,10".split( splitreg ); p++;
pieces[ p ] = "8,15,23,24".split( splitreg ); p++;
pieces[ p ] = "8,17,14,11".split( splitreg ); p++;
pieces[ p ] = "8,17,15,24".split( splitreg ); p++;
pieces[ p ] = "8,17,17,18".split( splitreg ); p++;
pieces[ p ] = "8,17,22,12".split( splitreg ); p++;
pieces[ p ] = "8,18,20,21".split( splitreg ); p++;
pieces[ p ] = "8,19,24,9".split( splitreg ); p++;
pieces[ p ] = "8,20,15,16".split( splitreg ); p++;
pieces[ p ] = "8,20,15,25".split( splitreg ); p++;
pieces[ p ] = "8,21,18,11".split( splitreg ); p++;
pieces[ p ] = "8,21,21,21".split( splitreg ); p++;
pieces[ p ] = "8,21,26,24".split( splitreg ); p++;
pieces[ p ] = "8,22,9,21".split( splitreg ); p++;
pieces[ p ] = "8,22,10,26".split( splitreg ); p++;
pieces[ p ] = "8,22,13,9".split( splitreg ); p++;
pieces[ p ] = "8,22,18,19".split( splitreg ); p++;
pieces[ p ] = "8,23,26,26".split( splitreg ); p++;
pieces[ p ] = "8,24,14,10".split( splitreg ); p++;
pieces[ p ] = "8,25,15,22".split( splitreg ); p++;
pieces[ p ] = "8,26,13,17".split( splitreg ); p++;
pieces[ p ] = "8,26,24,23".split( splitreg ); p++;
pieces[ p ] = "9,9,24,12".split( splitreg ); p++;
pieces[ p ] = "9,10,16,17".split( splitreg ); p++;
pieces[ p ] = "9,10,20,19".split( splitreg ); p++;
pieces[ p ] = "9,11,21,23".split( splitreg ); p++;
pieces[ p ] = "9,12,16,12".split( splitreg ); p++;
pieces[ p ] = "9,13,12,19".split( splitreg ); p++;
pieces[ p ] = "9,14,9,21".split( splitreg ); p++;
pieces[ p ] = "9,15,14,16".split( splitreg ); p++;
pieces[ p ] = "9,17,15,18".split( splitreg ); p++;
pieces[ p ] = "9,18,12,18".split( splitreg ); p++;
pieces[ p ] = "9,18,24,12".split( splitreg ); p++;
pieces[ p ] = "9,19,13,12".split( splitreg ); p++;
pieces[ p ] = "9,19,14,25".split( splitreg ); p++;
pieces[ p ] = "9,19,19,13".split( splitreg ); p++;
pieces[ p ] = "9,20,10,14".split( splitreg ); p++;
pieces[ p ] = "9,20,22,26".split( splitreg ); p++;
pieces[ p ] = "9,20,23,13".split( splitreg ); p++;
pieces[ p ] = "9,21,16,13".split( splitreg ); p++;
pieces[ p ] = "9,21,25,14".split( splitreg ); p++;
pieces[ p ] = "9,22,20,11".split( splitreg ); p++;
pieces[ p ] = "9,22,22,22".split( splitreg ); p++;
pieces[ p ] = "9,23,14,13".split( splitreg ); p++;
pieces[ p ] = "9,23,19,20".split( splitreg ); p++;
pieces[ p ] = "9,23,26,24".split( splitreg ); p++;
pieces[ p ] = "9,24,20,26".split( splitreg ); p++;
pieces[ p ] = "9,24,25,17".split( splitreg ); p++;
pieces[ p ] = "9,25,13,15".split( splitreg ); p++;
pieces[ p ] = "9,25,19,23".split( splitreg ); p++;
pieces[ p ] = "9,26,22,11".split( splitreg ); p++;
pieces[ p ] = "10,11,15,11".split( splitreg ); p++;
pieces[ p ] = "10,11,16,21".split( splitreg ); p++;
pieces[ p ] = "10,12,23,20".split( splitreg ); p++;
pieces[ p ] = "10,13,11,14".split( splitreg ); p++;
pieces[ p ] = "10,13,18,22".split( splitreg ); p++;
pieces[ p ] = "10,14,25,15".split( splitreg ); p++;
pieces[ p ] = "10,15,17,14".split( splitreg ); p++;
pieces[ p ] = "10,15,23,24".split( splitreg ); p++;
pieces[ p ] = "10,16,10,26".split( splitreg ); p++;
pieces[ p ] = "10,16,21,26".split( splitreg ); p++;
pieces[ p ] = "10,18,19,12".split( splitreg ); p++;
pieces[ p ] = "10,18,22,16".split( splitreg ); p++;
pieces[ p ] = "10,18,26,23".split( splitreg ); p++;
pieces[ p ] = "10,19,23,12".split( splitreg ); p++;
pieces[ p ] = "10,20,20,24".split( splitreg ); p++;
pieces[ p ] = "10,20,21,14".split( splitreg ); p++;
pieces[ p ] = "10,21,12,24".split( splitreg ); p++;
pieces[ p ] = "10,21,13,22".split( splitreg ); p++;
pieces[ p ] = "10,22,13,20".split( splitreg ); p++;
pieces[ p ] = "10,22,15,13".split( splitreg ); p++;
pieces[ p ] = "10,22,17,20".split( splitreg ); p++;
pieces[ p ] = "10,23,12,21".split( splitreg ); p++;
pieces[ p ] = "10,23,25,16".split( splitreg ); p++;
pieces[ p ] = "10,25,12,16".split( splitreg ); p++;
pieces[ p ] = "10,25,16,19".split( splitreg ); p++;
pieces[ p ] = "10,25,17,25".split( splitreg ); p++;
pieces[ p ] = "10,25,18,13".split( splitreg ); p++;
pieces[ p ] = "10,25,22,23".split( splitreg ); p++;
pieces[ p ] = "10,26,11,25".split( splitreg ); p++;
pieces[ p ] = "11,13,22,18".split( splitreg ); p++;
pieces[ p ] = "11,13,24,16".split( splitreg ); p++;
pieces[ p ] = "11,13,25,24".split( splitreg ); p++;
pieces[ p ] = "11,14,14,15".split( splitreg ); p++;
pieces[ p ] = "11,14,23,24".split( splitreg ); p++;
pieces[ p ] = "11,14,26,24".split( splitreg ); p++;
pieces[ p ] = "11,15,19,26".split( splitreg ); p++;
pieces[ p ] = "11,17,14,16".split( splitreg ); p++;
pieces[ p ] = "11,17,16,14".split( splitreg ); p++;
pieces[ p ] = "11,17,16,22".split( splitreg ); p++;
pieces[ p ] = "11,18,12,12".split( splitreg ); p++;
pieces[ p ] = "11,19,14,22".split( splitreg ); p++;
pieces[ p ] = "11,19,23,15".split( splitreg ); p++;
pieces[ p ] = "11,21,17,20".split( splitreg ); p++;
pieces[ p ] = "11,21,20,23".split( splitreg ); p++;
pieces[ p ] = "11,22,13,22".split( splitreg ); p++;
pieces[ p ] = "11,22,23,23".split( splitreg ); p++;
pieces[ p ] = "11,23,17,21".split( splitreg ); p++;
pieces[ p ] = "11,23,19,15".split( splitreg ); p++;
pieces[ p ] = "11,25,12,26".split( splitreg ); p++;
pieces[ p ] = "12,12,21,16".split( splitreg ); p++;
pieces[ p ] = "12,14,26,16".split( splitreg ); p++;
pieces[ p ] = "12,15,15,18".split( splitreg ); p++;
pieces[ p ] = "12,16,14,17".split( splitreg ); p++;
pieces[ p ] = "12,16,23,15".split( splitreg ); p++;
pieces[ p ] = "12,17,18,19".split( splitreg ); p++;
pieces[ p ] = "12,17,19,14".split( splitreg ); p++;
pieces[ p ] = "12,17,25,26".split( splitreg ); p++;
pieces[ p ] = "12,18,24,17".split( splitreg ); p++;
pieces[ p ] = "12,20,12,23".split( splitreg ); p++;
pieces[ p ] = "12,20,21,14".split( splitreg ); p++;
pieces[ p ] = "12,21,12,26".split( splitreg ); p++;
pieces[ p ] = "12,21,16,22".split( splitreg ); p++;
pieces[ p ] = "12,23,19,18".split( splitreg ); p++;
pieces[ p ] = "12,23,25,21".split( splitreg ); p++;
pieces[ p ] = "12,24,14,23".split( splitreg ); p++;
pieces[ p ] = "12,24,20,16".split( splitreg ); p++;
pieces[ p ] = "12,24,20,19".split( splitreg ); p++;
pieces[ p ] = "12,24,24,23".split( splitreg ); p++;
pieces[ p ] = "13,13,24,26".split( splitreg ); p++;
pieces[ p ] = "13,14,13,17".split( splitreg ); p++;
pieces[ p ] = "13,14,14,19".split( splitreg ); p++;
pieces[ p ] = "13,14,19,25".split( splitreg ); p++;
pieces[ p ] = "13,15,17,15".split( splitreg ); p++;
pieces[ p ] = "13,17,22,25".split( splitreg ); p++;
pieces[ p ] = "13,21,23,25".split( splitreg ); p++;
pieces[ p ] = "13,24,15,22".split( splitreg ); p++;
pieces[ p ] = "13,24,17,23".split( splitreg ); p++;
pieces[ p ] = "13,24,18,23".split( splitreg ); p++;
pieces[ p ] = "13,25,22,20".split( splitreg ); p++;
pieces[ p ] = "13,25,25,26".split( splitreg ); p++;
pieces[ p ] = "14,14,22,17".split( splitreg ); p++;
pieces[ p ] = "14,16,16,16".split( splitreg ); p++;
pieces[ p ] = "14,19,26,24".split( splitreg ); p++;
pieces[ p ] = "14,20,17,24".split( splitreg ); p++;
pieces[ p ] = "14,21,18,18".split( splitreg ); p++;
pieces[ p ] = "14,22,24,24".split( splitreg ); p++;
pieces[ p ] = "15,17,19,24".split( splitreg ); p++;
pieces[ p ] = "15,17,19,26".split( splitreg ); p++;
pieces[ p ] = "15,18,20,25".split( splitreg ); p++;
pieces[ p ] = "15,18,26,19".split( splitreg ); p++;
pieces[ p ] = "15,19,21,18".split( splitreg ); p++;
pieces[ p ] = "15,20,17,20".split( splitreg ); p++;
pieces[ p ] = "15,22,21,22".split( splitreg ); p++;
pieces[ p ] = "15,24,23,16".split( splitreg ); p++;
pieces[ p ] = "16,16,18,23".split( splitreg ); p++;
pieces[ p ] = "16,16,19,22".split( splitreg ); p++;
pieces[ p ] = "16,17,18,26".split( splitreg ); p++;
pieces[ p ] = "16,18,20,22".split( splitreg ); p++;
pieces[ p ] = "16,20,20,25".split( splitreg ); p++;
pieces[ p ] = "16,21,20,19".split( splitreg ); p++;
pieces[ p ] = "16,25,19,21".split( splitreg ); p++;
pieces[ p ] = "16,25,24,25".split( splitreg ); p++;
pieces[ p ] = "16,26,22,25".split( splitreg ); p++;
pieces[ p ] = "17,18,21,21".split( splitreg ); p++;
pieces[ p ] = "17,18,23,19".split( splitreg ); p++;
pieces[ p ] = "17,20,17,22".split( splitreg ); p++;
pieces[ p ] = "17,23,18,21".split( splitreg ); p++;
pieces[ p ] = "17,24,20,21".split( splitreg ); p++;
pieces[ p ] = "18,18,22,22".split( splitreg ); p++;
pieces[ p ] = "18,19,25,20".split( splitreg ); p++;
pieces[ p ] = "18,20,26,21".split( splitreg ); p++;
pieces[ p ] = "18,24,20,21".split( splitreg ); p++;
pieces[ p ] = "19,20,26,21".split( splitreg ); p++;
pieces[ p ] = "19,21,19,23".split( splitreg ); p++;
pieces[ p ] = "19,24,21,25".split( splitreg ); p++;
pieces[ p ] = "19,26,22,25".split( splitreg ); p++;
pieces[ p ] = "21,21,24,23".split( splitreg ); p++;
pieces[ p ] = "21,24,25,26".split( splitreg ); p++;
pieces[ p ] = "21,26,25,26".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

