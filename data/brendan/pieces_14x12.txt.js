
puzzles[ nb_puzzles ] = "brendan/pieces_14x12.txt.js,Brendan 14x12".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_14x12.txt.js" ) {

board_w = 14;
board_h = 12;


pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,3,3".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,1,5,1".split( splitreg ); p++;
pieces[ p ] = "0,1,5,4".split( splitreg ); p++;
pieces[ p ] = "0,1,6,1".split( splitreg ); p++;
pieces[ p ] = "0,1,6,2".split( splitreg ); p++;
pieces[ p ] = "0,1,7,4".split( splitreg ); p++;
pieces[ p ] = "0,1,8,2".split( splitreg ); p++;
pieces[ p ] = "0,1,9,2".split( splitreg ); p++;
pieces[ p ] = "0,1,10,1".split( splitreg ); p++;
pieces[ p ] = "0,1,11,4".split( splitreg ); p++;
pieces[ p ] = "0,1,13,4".split( splitreg ); p++;
pieces[ p ] = "0,1,17,4".split( splitreg ); p++;
pieces[ p ] = "0,2,5,2".split( splitreg ); p++;
pieces[ p ] = "0,2,5,4".split( splitreg ); p++;
pieces[ p ] = "0,2,6,1".split( splitreg ); p++;
pieces[ p ] = "0,2,6,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,8,2".split( splitreg ); p++;
pieces[ p ] = "0,2,9,1".split( splitreg ); p++;
pieces[ p ] = "0,2,14,4".split( splitreg ); p++;
pieces[ p ] = "0,2,15,2".split( splitreg ); p++;
pieces[ p ] = "0,2,16,3".split( splitreg ); p++;
pieces[ p ] = "0,2,17,4".split( splitreg ); p++;
pieces[ p ] = "0,3,5,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,7,2".split( splitreg ); p++;
pieces[ p ] = "0,3,8,1".split( splitreg ); p++;
pieces[ p ] = "0,3,8,3".split( splitreg ); p++;
pieces[ p ] = "0,3,11,3".split( splitreg ); p++;
pieces[ p ] = "0,3,11,4".split( splitreg ); p++;
pieces[ p ] = "0,3,12,2".split( splitreg ); p++;
pieces[ p ] = "0,3,12,3".split( splitreg ); p++;
pieces[ p ] = "0,3,15,1".split( splitreg ); p++;
pieces[ p ] = "0,3,16,1".split( splitreg ); p++;
pieces[ p ] = "0,4,5,3".split( splitreg ); p++;
pieces[ p ] = "0,4,5,4".split( splitreg ); p++;
pieces[ p ] = "0,4,6,2".split( splitreg ); p++;
pieces[ p ] = "0,4,7,3".split( splitreg ); p++;
pieces[ p ] = "0,4,8,4".split( splitreg ); p++;
pieces[ p ] = "0,4,9,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,11,3".split( splitreg ); p++;
pieces[ p ] = "0,4,13,1".split( splitreg ); p++;
pieces[ p ] = "0,4,13,4".split( splitreg ); p++;
pieces[ p ] = "0,4,14,3".split( splitreg ); p++;
pieces[ p ] = "5,5,6,8".split( splitreg ); p++;
pieces[ p ] = "5,5,10,6".split( splitreg ); p++;
pieces[ p ] = "5,5,14,6".split( splitreg ); p++;
pieces[ p ] = "5,6,5,16".split( splitreg ); p++;
pieces[ p ] = "5,6,7,16".split( splitreg ); p++;
pieces[ p ] = "5,6,10,13".split( splitreg ); p++;
pieces[ p ] = "5,6,14,11".split( splitreg ); p++;
pieces[ p ] = "5,6,15,15".split( splitreg ); p++;
pieces[ p ] = "5,7,9,8".split( splitreg ); p++;
pieces[ p ] = "5,7,9,13".split( splitreg ); p++;
pieces[ p ] = "5,7,12,6".split( splitreg ); p++;
pieces[ p ] = "5,7,13,16".split( splitreg ); p++;
pieces[ p ] = "5,9,6,9".split( splitreg ); p++;
pieces[ p ] = "5,10,15,6".split( splitreg ); p++;
pieces[ p ] = "5,10,15,14".split( splitreg ); p++;
pieces[ p ] = "5,10,16,7".split( splitreg ); p++;
pieces[ p ] = "5,11,10,17".split( splitreg ); p++;
pieces[ p ] = "5,11,15,11".split( splitreg ); p++;
pieces[ p ] = "5,11,17,15".split( splitreg ); p++;
pieces[ p ] = "5,12,10,6".split( splitreg ); p++;
pieces[ p ] = "5,12,15,13".split( splitreg ); p++;
pieces[ p ] = "5,13,9,16".split( splitreg ); p++;
pieces[ p ] = "5,13,9,17".split( splitreg ); p++;
pieces[ p ] = "5,13,10,10".split( splitreg ); p++;
pieces[ p ] = "5,13,12,13".split( splitreg ); p++;
pieces[ p ] = "5,13,14,11".split( splitreg ); p++;
pieces[ p ] = "5,13,14,17".split( splitreg ); p++;
pieces[ p ] = "5,15,17,11".split( splitreg ); p++;
pieces[ p ] = "5,17,12,11".split( splitreg ); p++;
pieces[ p ] = "5,17,13,7".split( splitreg ); p++;
pieces[ p ] = "5,17,13,11".split( splitreg ); p++;
pieces[ p ] = "6,8,6,15".split( splitreg ); p++;
pieces[ p ] = "6,8,16,7".split( splitreg ); p++;
pieces[ p ] = "6,8,16,14".split( splitreg ); p++;
pieces[ p ] = "6,9,8,9".split( splitreg ); p++;
pieces[ p ] = "6,10,7,15".split( splitreg ); p++;
pieces[ p ] = "6,10,9,8".split( splitreg ); p++;
pieces[ p ] = "6,11,8,16".split( splitreg ); p++;
pieces[ p ] = "6,11,15,7".split( splitreg ); p++;
pieces[ p ] = "6,12,8,16".split( splitreg ); p++;
pieces[ p ] = "6,12,10,9".split( splitreg ); p++;
pieces[ p ] = "6,13,11,13".split( splitreg ); p++;
pieces[ p ] = "6,13,14,7".split( splitreg ); p++;
pieces[ p ] = "6,14,7,12".split( splitreg ); p++;
pieces[ p ] = "6,14,11,12".split( splitreg ); p++;
pieces[ p ] = "6,14,15,16".split( splitreg ); p++;
pieces[ p ] = "6,14,16,17".split( splitreg ); p++;
pieces[ p ] = "6,15,6,17".split( splitreg ); p++;
pieces[ p ] = "6,15,11,9".split( splitreg ); p++;
pieces[ p ] = "6,15,14,15".split( splitreg ); p++;
pieces[ p ] = "6,15,17,8".split( splitreg ); p++;
pieces[ p ] = "6,16,16,9".split( splitreg ); p++;
pieces[ p ] = "6,17,10,14".split( splitreg ); p++;
pieces[ p ] = "7,7,8,13".split( splitreg ); p++;
pieces[ p ] = "7,7,9,16".split( splitreg ); p++;
pieces[ p ] = "7,8,11,11".split( splitreg ); p++;
pieces[ p ] = "7,9,13,12".split( splitreg ); p++;
pieces[ p ] = "7,9,17,8".split( splitreg ); p++;
pieces[ p ] = "7,11,12,9".split( splitreg ); p++;
pieces[ p ] = "7,11,12,14".split( splitreg ); p++;
pieces[ p ] = "7,11,16,10".split( splitreg ); p++;
pieces[ p ] = "7,12,15,12".split( splitreg ); p++;
pieces[ p ] = "7,13,8,9".split( splitreg ); p++;
pieces[ p ] = "7,13,8,12".split( splitreg ); p++;
pieces[ p ] = "7,13,11,13".split( splitreg ); p++;
pieces[ p ] = "7,13,17,15".split( splitreg ); p++;
pieces[ p ] = "7,14,17,9".split( splitreg ); p++;
pieces[ p ] = "7,14,17,16".split( splitreg ); p++;
pieces[ p ] = "7,15,13,9".split( splitreg ); p++;
pieces[ p ] = "7,15,16,8".split( splitreg ); p++;
pieces[ p ] = "7,16,10,9".split( splitreg ); p++;
pieces[ p ] = "7,16,14,13".split( splitreg ); p++;
pieces[ p ] = "7,16,14,16".split( splitreg ); p++;
pieces[ p ] = "7,16,17,10".split( splitreg ); p++;
pieces[ p ] = "7,17,10,12".split( splitreg ); p++;
pieces[ p ] = "8,8,14,9".split( splitreg ); p++;
pieces[ p ] = "8,8,17,17".split( splitreg ); p++;
pieces[ p ] = "8,9,15,10".split( splitreg ); p++;
pieces[ p ] = "8,11,14,11".split( splitreg ); p++;
pieces[ p ] = "8,12,11,17".split( splitreg ); p++;
pieces[ p ] = "8,12,14,10".split( splitreg ); p++;
pieces[ p ] = "8,13,9,10".split( splitreg ); p++;
pieces[ p ] = "8,13,9,15".split( splitreg ); p++;
pieces[ p ] = "8,14,9,16".split( splitreg ); p++;
pieces[ p ] = "8,14,17,9".split( splitreg ); p++;
pieces[ p ] = "8,15,9,10".split( splitreg ); p++;
pieces[ p ] = "8,15,16,12".split( splitreg ); p++;
pieces[ p ] = "8,15,17,16".split( splitreg ); p++;
pieces[ p ] = "8,16,17,9".split( splitreg ); p++;
pieces[ p ] = "8,17,12,11".split( splitreg ); p++;
pieces[ p ] = "8,17,12,14".split( splitreg ); p++;
pieces[ p ] = "8,17,12,15".split( splitreg ); p++;
pieces[ p ] = "9,10,15,13".split( splitreg ); p++;
pieces[ p ] = "9,11,12,17".split( splitreg ); p++;
pieces[ p ] = "9,11,15,15".split( splitreg ); p++;
pieces[ p ] = "9,11,15,16".split( splitreg ); p++;
pieces[ p ] = "9,12,12,15".split( splitreg ); p++;
pieces[ p ] = "9,13,10,16".split( splitreg ); p++;
pieces[ p ] = "9,15,12,11".split( splitreg ); p++;
pieces[ p ] = "9,16,15,16".split( splitreg ); p++;
pieces[ p ] = "9,17,10,17".split( splitreg ); p++;
pieces[ p ] = "10,10,14,11".split( splitreg ); p++;
pieces[ p ] = "10,11,11,17".split( splitreg ); p++;
pieces[ p ] = "10,12,14,16".split( splitreg ); p++;
pieces[ p ] = "10,12,15,14".split( splitreg ); p++;
pieces[ p ] = "10,13,12,17".split( splitreg ); p++;
pieces[ p ] = "10,13,17,12".split( splitreg ); p++;
pieces[ p ] = "10,14,17,16".split( splitreg ); p++;
pieces[ p ] = "10,15,13,12".split( splitreg ); p++;
pieces[ p ] = "10,15,14,16".split( splitreg ); p++;
pieces[ p ] = "10,16,13,17".split( splitreg ); p++;
pieces[ p ] = "10,16,16,12".split( splitreg ); p++;
pieces[ p ] = "10,17,12,11".split( splitreg ); p++;
pieces[ p ] = "10,17,14,13".split( splitreg ); p++;
pieces[ p ] = "11,12,11,16".split( splitreg ); p++;
pieces[ p ] = "11,12,14,14".split( splitreg ); p++;
pieces[ p ] = "11,13,14,12".split( splitreg ); p++;
pieces[ p ] = "12,13,17,14".split( splitreg ); p++;
pieces[ p ] = "12,14,14,15".split( splitreg ); p++;
pieces[ p ] = "13,14,16,14".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

