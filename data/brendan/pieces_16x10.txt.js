
puzzles[ nb_puzzles ] = "brendan/pieces_16x10.txt.js,Brendan 16x10".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_16x10.txt.js" ) {

board_w = 16;
board_h = 10;


pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,1,4".split( splitreg ); p++;
pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,0,3,3".split( splitreg ); p++;
pieces[ p ] = "0,1,7,1".split( splitreg ); p++;
pieces[ p ] = "0,1,7,3".split( splitreg ); p++;
pieces[ p ] = "0,1,9,1".split( splitreg ); p++;
pieces[ p ] = "0,1,9,4".split( splitreg ); p++;
pieces[ p ] = "0,1,11,1".split( splitreg ); p++;
pieces[ p ] = "0,1,11,2".split( splitreg ); p++;
pieces[ p ] = "0,1,11,3".split( splitreg ); p++;
pieces[ p ] = "0,1,15,2".split( splitreg ); p++;
pieces[ p ] = "0,1,17,2".split( splitreg ); p++;
pieces[ p ] = "0,1,17,3".split( splitreg ); p++;
pieces[ p ] = "0,2,5,2".split( splitreg ); p++;
pieces[ p ] = "0,2,6,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,4".split( splitreg ); p++;
pieces[ p ] = "0,2,8,2".split( splitreg ); p++;
pieces[ p ] = "0,2,10,2".split( splitreg ); p++;
pieces[ p ] = "0,2,11,1".split( splitreg ); p++;
pieces[ p ] = "0,2,12,1".split( splitreg ); p++;
pieces[ p ] = "0,2,15,2".split( splitreg ); p++;
pieces[ p ] = "0,2,15,3".split( splitreg ); p++;
pieces[ p ] = "0,2,16,1".split( splitreg ); p++;
pieces[ p ] = "0,2,17,4".split( splitreg ); p++;
pieces[ p ] = "0,3,6,4".split( splitreg ); p++;
pieces[ p ] = "0,3,8,2".split( splitreg ); p++;
pieces[ p ] = "0,3,8,3".split( splitreg ); p++;
pieces[ p ] = "0,3,9,1".split( splitreg ); p++;
pieces[ p ] = "0,3,10,3".split( splitreg ); p++;
pieces[ p ] = "0,3,11,1".split( splitreg ); p++;
pieces[ p ] = "0,3,13,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,15,2".split( splitreg ); p++;
pieces[ p ] = "0,3,16,4".split( splitreg ); p++;
pieces[ p ] = "0,3,17,3".split( splitreg ); p++;
pieces[ p ] = "0,4,8,4".split( splitreg ); p++;
pieces[ p ] = "0,4,9,2".split( splitreg ); p++;
pieces[ p ] = "0,4,11,1".split( splitreg ); p++;
pieces[ p ] = "0,4,12,3".split( splitreg ); p++;
pieces[ p ] = "0,4,12,4".split( splitreg ); p++;
pieces[ p ] = "0,4,13,1".split( splitreg ); p++;
pieces[ p ] = "0,4,14,1".split( splitreg ); p++;
pieces[ p ] = "0,4,14,4".split( splitreg ); p++;
pieces[ p ] = "0,4,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,15,4".split( splitreg ); p++;
pieces[ p ] = "0,4,16,4".split( splitreg ); p++;
pieces[ p ] = "0,4,17,3".split( splitreg ); p++;
pieces[ p ] = "5,5,5,9".split( splitreg ); p++;
pieces[ p ] = "5,5,8,16".split( splitreg ); p++;
pieces[ p ] = "5,5,14,15".split( splitreg ); p++;
pieces[ p ] = "5,5,16,7".split( splitreg ); p++;
pieces[ p ] = "5,5,16,16".split( splitreg ); p++;
pieces[ p ] = "5,6,7,17".split( splitreg ); p++;
pieces[ p ] = "5,6,9,13".split( splitreg ); p++;
pieces[ p ] = "5,6,12,10".split( splitreg ); p++;
pieces[ p ] = "5,6,15,17".split( splitreg ); p++;
pieces[ p ] = "5,7,10,9".split( splitreg ); p++;
pieces[ p ] = "5,7,12,11".split( splitreg ); p++;
pieces[ p ] = "5,8,9,14".split( splitreg ); p++;
pieces[ p ] = "5,8,10,13".split( splitreg ); p++;
pieces[ p ] = "5,8,11,10".split( splitreg ); p++;
pieces[ p ] = "5,8,15,8".split( splitreg ); p++;
pieces[ p ] = "5,9,7,17".split( splitreg ); p++;
pieces[ p ] = "5,9,11,9".split( splitreg ); p++;
pieces[ p ] = "5,9,14,11".split( splitreg ); p++;
pieces[ p ] = "5,10,12,16".split( splitreg ); p++;
pieces[ p ] = "5,11,9,8".split( splitreg ); p++;
pieces[ p ] = "5,11,14,11".split( splitreg ); p++;
pieces[ p ] = "5,12,6,13".split( splitreg ); p++;
pieces[ p ] = "5,12,14,13".split( splitreg ); p++;
pieces[ p ] = "5,14,9,6".split( splitreg ); p++;
pieces[ p ] = "5,14,10,12".split( splitreg ); p++;
pieces[ p ] = "5,15,6,6".split( splitreg ); p++;
pieces[ p ] = "5,16,14,17".split( splitreg ); p++;
pieces[ p ] = "5,16,16,10".split( splitreg ); p++;
pieces[ p ] = "5,17,7,7".split( splitreg ); p++;
pieces[ p ] = "5,17,11,6".split( splitreg ); p++;
pieces[ p ] = "5,17,15,6".split( splitreg ); p++;
pieces[ p ] = "6,6,9,10".split( splitreg ); p++;
pieces[ p ] = "6,7,8,12".split( splitreg ); p++;
pieces[ p ] = "6,7,9,9".split( splitreg ); p++;
pieces[ p ] = "6,7,12,15".split( splitreg ); p++;
pieces[ p ] = "6,8,7,14".split( splitreg ); p++;
pieces[ p ] = "6,8,17,11".split( splitreg ); p++;
pieces[ p ] = "6,8,17,14".split( splitreg ); p++;
pieces[ p ] = "6,9,7,17".split( splitreg ); p++;
pieces[ p ] = "6,9,14,10".split( splitreg ); p++;
pieces[ p ] = "6,10,7,10".split( splitreg ); p++;
pieces[ p ] = "6,10,9,11".split( splitreg ); p++;
pieces[ p ] = "6,10,15,11".split( splitreg ); p++;
pieces[ p ] = "6,12,6,13".split( splitreg ); p++;
pieces[ p ] = "6,12,13,12".split( splitreg ); p++;
pieces[ p ] = "6,14,7,17".split( splitreg ); p++;
pieces[ p ] = "6,14,8,9".split( splitreg ); p++;
pieces[ p ] = "6,14,16,9".split( splitreg ); p++;
pieces[ p ] = "6,15,8,12".split( splitreg ); p++;
pieces[ p ] = "6,15,12,14".split( splitreg ); p++;
pieces[ p ] = "6,15,13,11".split( splitreg ); p++;
pieces[ p ] = "6,15,17,11".split( splitreg ); p++;
pieces[ p ] = "6,16,7,14".split( splitreg ); p++;
pieces[ p ] = "6,16,10,16".split( splitreg ); p++;
pieces[ p ] = "6,16,14,10".split( splitreg ); p++;
pieces[ p ] = "7,7,13,12".split( splitreg ); p++;
pieces[ p ] = "7,8,16,13".split( splitreg ); p++;
pieces[ p ] = "7,8,17,16".split( splitreg ); p++;
pieces[ p ] = "7,9,9,8".split( splitreg ); p++;
pieces[ p ] = "7,9,9,10".split( splitreg ); p++;
pieces[ p ] = "7,10,11,10".split( splitreg ); p++;
pieces[ p ] = "7,11,8,9".split( splitreg ); p++;
pieces[ p ] = "7,11,14,17".split( splitreg ); p++;
pieces[ p ] = "7,12,15,17".split( splitreg ); p++;
pieces[ p ] = "7,12,17,16".split( splitreg ); p++;
pieces[ p ] = "7,13,15,15".split( splitreg ); p++;
pieces[ p ] = "7,13,17,9".split( splitreg ); p++;
pieces[ p ] = "7,13,17,16".split( splitreg ); p++;
pieces[ p ] = "7,15,14,14".split( splitreg ); p++;
pieces[ p ] = "7,16,10,10".split( splitreg ); p++;
pieces[ p ] = "7,16,13,10".split( splitreg ); p++;
pieces[ p ] = "7,16,15,12".split( splitreg ); p++;
pieces[ p ] = "7,17,11,10".split( splitreg ); p++;
pieces[ p ] = "7,17,16,14".split( splitreg ); p++;
pieces[ p ] = "8,8,10,9".split( splitreg ); p++;
pieces[ p ] = "8,10,11,16".split( splitreg ); p++;
pieces[ p ] = "8,11,17,14".split( splitreg ); p++;
pieces[ p ] = "8,12,13,9".split( splitreg ); p++;
pieces[ p ] = "8,13,9,12".split( splitreg ); p++;
pieces[ p ] = "8,13,11,12".split( splitreg ); p++;
pieces[ p ] = "8,14,12,11".split( splitreg ); p++;
pieces[ p ] = "8,14,13,13".split( splitreg ); p++;
pieces[ p ] = "8,14,14,12".split( splitreg ); p++;
pieces[ p ] = "8,15,12,14".split( splitreg ); p++;
pieces[ p ] = "8,16,9,15".split( splitreg ); p++;
pieces[ p ] = "8,16,13,12".split( splitreg ); p++;
pieces[ p ] = "8,16,15,15".split( splitreg ); p++;
pieces[ p ] = "8,16,16,12".split( splitreg ); p++;
pieces[ p ] = "8,16,17,14".split( splitreg ); p++;
pieces[ p ] = "8,17,13,11".split( splitreg ); p++;
pieces[ p ] = "9,9,13,17".split( splitreg ); p++;
pieces[ p ] = "9,11,14,15".split( splitreg ); p++;
pieces[ p ] = "9,11,17,16".split( splitreg ); p++;
pieces[ p ] = "9,13,11,15".split( splitreg ); p++;
pieces[ p ] = "9,15,10,13".split( splitreg ); p++;
pieces[ p ] = "10,10,13,13".split( splitreg ); p++;
pieces[ p ] = "10,11,14,13".split( splitreg ); p++;
pieces[ p ] = "10,12,12,12".split( splitreg ); p++;
pieces[ p ] = "10,12,13,11".split( splitreg ); p++;
pieces[ p ] = "10,13,12,12".split( splitreg ); p++;
pieces[ p ] = "10,13,13,16".split( splitreg ); p++;
pieces[ p ] = "10,13,14,15".split( splitreg ); p++;
pieces[ p ] = "10,14,13,13".split( splitreg ); p++;
pieces[ p ] = "10,15,15,13".split( splitreg ); p++;
pieces[ p ] = "10,15,16,12".split( splitreg ); p++;
pieces[ p ] = "11,11,15,17".split( splitreg ); p++;
pieces[ p ] = "11,12,15,17".split( splitreg ); p++;
pieces[ p ] = "11,13,17,13".split( splitreg ); p++;
pieces[ p ] = "11,16,17,15".split( splitreg ); p++;
pieces[ p ] = "12,14,16,14".split( splitreg ); p++;
pieces[ p ] = "12,15,14,16".split( splitreg ); p++;
pieces[ p ] = "15,16,17,17".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

