
puzzles[ nb_puzzles ] = "brendan/pieces_14x11.txt.js,Brendan 14x11".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_14x11.txt.js" ) {

board_w = 14;
board_h = 11;


pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,2,4".split( splitreg ); p++;
pieces[ p ] = "0,0,3,1".split( splitreg ); p++;
pieces[ p ] = "0,1,5,3".split( splitreg ); p++;
pieces[ p ] = "0,1,6,1".split( splitreg ); p++;
pieces[ p ] = "0,1,9,3".split( splitreg ); p++;
pieces[ p ] = "0,1,10,1".split( splitreg ); p++;
pieces[ p ] = "0,1,10,4".split( splitreg ); p++;
pieces[ p ] = "0,1,12,1".split( splitreg ); p++;
pieces[ p ] = "0,1,12,3".split( splitreg ); p++;
pieces[ p ] = "0,1,12,4".split( splitreg ); p++;
pieces[ p ] = "0,1,15,3".split( splitreg ); p++;
pieces[ p ] = "0,1,16,3".split( splitreg ); p++;
pieces[ p ] = "0,1,17,2".split( splitreg ); p++;
pieces[ p ] = "0,2,6,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,4".split( splitreg ); p++;
pieces[ p ] = "0,2,10,1".split( splitreg ); p++;
pieces[ p ] = "0,2,10,2".split( splitreg ); p++;
pieces[ p ] = "0,2,12,3".split( splitreg ); p++;
pieces[ p ] = "0,2,13,1".split( splitreg ); p++;
pieces[ p ] = "0,2,14,2".split( splitreg ); p++;
pieces[ p ] = "0,2,15,2".split( splitreg ); p++;
pieces[ p ] = "0,2,15,4".split( splitreg ); p++;
pieces[ p ] = "0,3,5,1".split( splitreg ); p++;
pieces[ p ] = "0,3,5,2".split( splitreg ); p++;
pieces[ p ] = "0,3,5,4".split( splitreg ); p++;
pieces[ p ] = "0,3,6,4".split( splitreg ); p++;
pieces[ p ] = "0,3,9,2".split( splitreg ); p++;
pieces[ p ] = "0,3,11,3".split( splitreg ); p++;
pieces[ p ] = "0,3,13,4".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,15,1".split( splitreg ); p++;
pieces[ p ] = "0,3,17,1".split( splitreg ); p++;
pieces[ p ] = "0,4,6,3".split( splitreg ); p++;
pieces[ p ] = "0,4,8,1".split( splitreg ); p++;
pieces[ p ] = "0,4,9,2".split( splitreg ); p++;
pieces[ p ] = "0,4,9,3".split( splitreg ); p++;
pieces[ p ] = "0,4,9,4".split( splitreg ); p++;
pieces[ p ] = "0,4,11,2".split( splitreg ); p++;
pieces[ p ] = "0,4,13,2".split( splitreg ); p++;
pieces[ p ] = "0,4,14,1".split( splitreg ); p++;
pieces[ p ] = "0,4,14,4".split( splitreg ); p++;
pieces[ p ] = "0,4,15,2".split( splitreg ); p++;
pieces[ p ] = "0,4,16,1".split( splitreg ); p++;
pieces[ p ] = "5,5,7,6".split( splitreg ); p++;
pieces[ p ] = "5,5,8,10".split( splitreg ); p++;
pieces[ p ] = "5,5,9,9".split( splitreg ); p++;
pieces[ p ] = "5,5,12,17".split( splitreg ); p++;
pieces[ p ] = "5,5,17,12".split( splitreg ); p++;
pieces[ p ] = "5,6,6,7".split( splitreg ); p++;
pieces[ p ] = "5,6,16,14".split( splitreg ); p++;
pieces[ p ] = "5,7,14,16".split( splitreg ); p++;
pieces[ p ] = "5,7,16,14".split( splitreg ); p++;
pieces[ p ] = "5,7,17,16".split( splitreg ); p++;
pieces[ p ] = "5,8,7,15".split( splitreg ); p++;
pieces[ p ] = "5,8,17,6".split( splitreg ); p++;
pieces[ p ] = "5,9,12,17".split( splitreg ); p++;
pieces[ p ] = "5,9,13,9".split( splitreg ); p++;
pieces[ p ] = "5,10,7,13".split( splitreg ); p++;
pieces[ p ] = "5,10,11,7".split( splitreg ); p++;
pieces[ p ] = "5,10,12,9".split( splitreg ); p++;
pieces[ p ] = "5,10,13,11".split( splitreg ); p++;
pieces[ p ] = "5,10,15,7".split( splitreg ); p++;
pieces[ p ] = "5,11,8,16".split( splitreg ); p++;
pieces[ p ] = "5,13,10,8".split( splitreg ); p++;
pieces[ p ] = "5,13,10,12".split( splitreg ); p++;
pieces[ p ] = "5,13,11,17".split( splitreg ); p++;
pieces[ p ] = "5,14,8,6".split( splitreg ); p++;
pieces[ p ] = "5,14,12,11".split( splitreg ); p++;
pieces[ p ] = "5,14,13,17".split( splitreg ); p++;
pieces[ p ] = "5,16,15,8".split( splitreg ); p++;
pieces[ p ] = "5,17,12,13".split( splitreg ); p++;
pieces[ p ] = "5,17,17,8".split( splitreg ); p++;
pieces[ p ] = "6,6,6,16".split( splitreg ); p++;
pieces[ p ] = "6,6,16,11".split( splitreg ); p++;
pieces[ p ] = "6,7,7,12".split( splitreg ); p++;
pieces[ p ] = "6,7,8,11".split( splitreg ); p++;
pieces[ p ] = "6,7,15,10".split( splitreg ); p++;
pieces[ p ] = "6,8,7,8".split( splitreg ); p++;
pieces[ p ] = "6,9,13,11".split( splitreg ); p++;
pieces[ p ] = "6,10,7,13".split( splitreg ); p++;
pieces[ p ] = "6,10,8,15".split( splitreg ); p++;
pieces[ p ] = "6,10,11,15".split( splitreg ); p++;
pieces[ p ] = "6,10,16,17".split( splitreg ); p++;
pieces[ p ] = "6,10,17,11".split( splitreg ); p++;
pieces[ p ] = "6,11,7,17".split( splitreg ); p++;
pieces[ p ] = "6,11,8,7".split( splitreg ); p++;
pieces[ p ] = "6,11,11,11".split( splitreg ); p++;
pieces[ p ] = "6,12,12,15".split( splitreg ); p++;
pieces[ p ] = "6,13,14,8".split( splitreg ); p++;
pieces[ p ] = "6,14,10,12".split( splitreg ); p++;
pieces[ p ] = "6,14,15,17".split( splitreg ); p++;
pieces[ p ] = "6,15,7,9".split( splitreg ); p++;
pieces[ p ] = "6,16,7,13".split( splitreg ); p++;
pieces[ p ] = "6,16,8,12".split( splitreg ); p++;
pieces[ p ] = "6,16,14,10".split( splitreg ); p++;
pieces[ p ] = "6,16,14,17".split( splitreg ); p++;
pieces[ p ] = "6,16,16,7".split( splitreg ); p++;
pieces[ p ] = "7,8,14,8".split( splitreg ); p++;
pieces[ p ] = "7,10,9,16".split( splitreg ); p++;
pieces[ p ] = "7,11,11,14".split( splitreg ); p++;
pieces[ p ] = "7,11,12,9".split( splitreg ); p++;
pieces[ p ] = "7,11,14,11".split( splitreg ); p++;
pieces[ p ] = "7,11,15,14".split( splitreg ); p++;
pieces[ p ] = "7,12,8,13".split( splitreg ); p++;
pieces[ p ] = "7,12,14,10".split( splitreg ); p++;
pieces[ p ] = "7,14,11,15".split( splitreg ); p++;
pieces[ p ] = "7,15,8,12".split( splitreg ); p++;
pieces[ p ] = "7,15,9,12".split( splitreg ); p++;
pieces[ p ] = "7,15,13,8".split( splitreg ); p++;
pieces[ p ] = "7,15,16,16".split( splitreg ); p++;
pieces[ p ] = "7,16,16,17".split( splitreg ); p++;
pieces[ p ] = "7,17,11,8".split( splitreg ); p++;
pieces[ p ] = "7,17,17,13".split( splitreg ); p++;
pieces[ p ] = "8,8,9,12".split( splitreg ); p++;
pieces[ p ] = "8,8,14,14".split( splitreg ); p++;
pieces[ p ] = "8,9,15,9".split( splitreg ); p++;
pieces[ p ] = "8,11,14,15".split( splitreg ); p++;
pieces[ p ] = "8,11,14,17".split( splitreg ); p++;
pieces[ p ] = "8,11,17,15".split( splitreg ); p++;
pieces[ p ] = "8,12,9,10".split( splitreg ); p++;
pieces[ p ] = "8,13,9,15".split( splitreg ); p++;
pieces[ p ] = "8,13,17,14".split( splitreg ); p++;
pieces[ p ] = "8,16,9,9".split( splitreg ); p++;
pieces[ p ] = "8,16,9,12".split( splitreg ); p++;
pieces[ p ] = "8,16,12,12".split( splitreg ); p++;
pieces[ p ] = "9,10,11,15".split( splitreg ); p++;
pieces[ p ] = "9,12,10,10".split( splitreg ); p++;
pieces[ p ] = "9,12,11,14".split( splitreg ); p++;
pieces[ p ] = "9,13,9,16".split( splitreg ); p++;
pieces[ p ] = "9,13,16,15".split( splitreg ); p++;
pieces[ p ] = "9,14,13,12".split( splitreg ); p++;
pieces[ p ] = "9,14,13,16".split( splitreg ); p++;
pieces[ p ] = "9,15,13,10".split( splitreg ); p++;
pieces[ p ] = "9,17,10,17".split( splitreg ); p++;
pieces[ p ] = "9,17,13,15".split( splitreg ); p++;
pieces[ p ] = "9,17,16,13".split( splitreg ); p++;
pieces[ p ] = "10,10,17,11".split( splitreg ); p++;
pieces[ p ] = "10,12,17,16".split( splitreg ); p++;
pieces[ p ] = "10,13,12,14".split( splitreg ); p++;
pieces[ p ] = "10,13,13,11".split( splitreg ); p++;
pieces[ p ] = "10,15,13,12".split( splitreg ); p++;
pieces[ p ] = "10,15,14,17".split( splitreg ); p++;
pieces[ p ] = "10,15,17,14".split( splitreg ); p++;
pieces[ p ] = "11,13,13,16".split( splitreg ); p++;
pieces[ p ] = "11,16,13,13".split( splitreg ); p++;
pieces[ p ] = "11,17,14,16".split( splitreg ); p++;
pieces[ p ] = "11,17,16,15".split( splitreg ); p++;
pieces[ p ] = "12,13,15,14".split( splitreg ); p++;
pieces[ p ] = "12,14,12,16".split( splitreg ); p++;
pieces[ p ] = "12,17,15,16".split( splitreg ); p++;
pieces[ p ] = "14,15,15,17".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

