
puzzles[ nb_puzzles ] = "brendan/pieces_18x09.txt.js,Brendan 18x09".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_18x09.txt.js" ) {

board_w = 18;
board_h = 9;


pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,0,4,5".split( splitreg ); p++;
pieces[ p ] = "0,0,5,1".split( splitreg ); p++;
pieces[ p ] = "0,1,6,1".split( splitreg ); p++;
pieces[ p ] = "0,1,6,5".split( splitreg ); p++;
pieces[ p ] = "0,1,7,3".split( splitreg ); p++;
pieces[ p ] = "0,1,8,3".split( splitreg ); p++;
pieces[ p ] = "0,1,9,4".split( splitreg ); p++;
pieces[ p ] = "0,1,11,5".split( splitreg ); p++;
pieces[ p ] = "0,1,14,2".split( splitreg ); p++;
pieces[ p ] = "0,1,14,4".split( splitreg ); p++;
pieces[ p ] = "0,1,15,2".split( splitreg ); p++;
pieces[ p ] = "0,2,6,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,5".split( splitreg ); p++;
pieces[ p ] = "0,2,8,5".split( splitreg ); p++;
pieces[ p ] = "0,2,11,2".split( splitreg ); p++;
pieces[ p ] = "0,2,12,4".split( splitreg ); p++;
pieces[ p ] = "0,2,13,4".split( splitreg ); p++;
pieces[ p ] = "0,2,14,1".split( splitreg ); p++;
pieces[ p ] = "0,2,15,5".split( splitreg ); p++;
pieces[ p ] = "0,2,17,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,4".split( splitreg ); p++;
pieces[ p ] = "0,3,7,1".split( splitreg ); p++;
pieces[ p ] = "0,3,8,3".split( splitreg ); p++;
pieces[ p ] = "0,3,9,1".split( splitreg ); p++;
pieces[ p ] = "0,3,9,2".split( splitreg ); p++;
pieces[ p ] = "0,3,10,2".split( splitreg ); p++;
pieces[ p ] = "0,3,13,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,18,1".split( splitreg ); p++;
pieces[ p ] = "0,4,6,5".split( splitreg ); p++;
pieces[ p ] = "0,4,8,3".split( splitreg ); p++;
pieces[ p ] = "0,4,8,4".split( splitreg ); p++;
pieces[ p ] = "0,4,10,5".split( splitreg ); p++;
pieces[ p ] = "0,4,11,4".split( splitreg ); p++;
pieces[ p ] = "0,4,14,4".split( splitreg ); p++;
pieces[ p ] = "0,4,16,3".split( splitreg ); p++;
pieces[ p ] = "0,4,17,5".split( splitreg ); p++;
pieces[ p ] = "0,5,7,3".split( splitreg ); p++;
pieces[ p ] = "0,5,9,1".split( splitreg ); p++;
pieces[ p ] = "0,5,9,2".split( splitreg ); p++;
pieces[ p ] = "0,5,10,3".split( splitreg ); p++;
pieces[ p ] = "0,5,14,3".split( splitreg ); p++;
pieces[ p ] = "0,5,14,4".split( splitreg ); p++;
pieces[ p ] = "0,5,16,4".split( splitreg ); p++;
pieces[ p ] = "0,5,18,1".split( splitreg ); p++;
pieces[ p ] = "0,5,18,5".split( splitreg ); p++;
pieces[ p ] = "6,6,13,12".split( splitreg ); p++;
pieces[ p ] = "6,7,15,11".split( splitreg ); p++;
pieces[ p ] = "6,8,11,7".split( splitreg ); p++;
pieces[ p ] = "6,8,13,17".split( splitreg ); p++;
pieces[ p ] = "6,8,18,12".split( splitreg ); p++;
pieces[ p ] = "6,9,8,12".split( splitreg ); p++;
pieces[ p ] = "6,9,12,7".split( splitreg ); p++;
pieces[ p ] = "6,9,12,9".split( splitreg ); p++;
pieces[ p ] = "6,9,14,7".split( splitreg ); p++;
pieces[ p ] = "6,9,18,16".split( splitreg ); p++;
pieces[ p ] = "6,10,13,17".split( splitreg ); p++;
pieces[ p ] = "6,10,16,14".split( splitreg ); p++;
pieces[ p ] = "6,11,11,15".split( splitreg ); p++;
pieces[ p ] = "6,11,13,10".split( splitreg ); p++;
pieces[ p ] = "6,12,8,11".split( splitreg ); p++;
pieces[ p ] = "6,13,10,15".split( splitreg ); p++;
pieces[ p ] = "6,13,11,15".split( splitreg ); p++;
pieces[ p ] = "6,13,13,18".split( splitreg ); p++;
pieces[ p ] = "6,13,14,10".split( splitreg ); p++;
pieces[ p ] = "6,14,7,16".split( splitreg ); p++;
pieces[ p ] = "6,14,11,8".split( splitreg ); p++;
pieces[ p ] = "6,15,8,12".split( splitreg ); p++;
pieces[ p ] = "6,15,9,11".split( splitreg ); p++;
pieces[ p ] = "6,15,16,14".split( splitreg ); p++;
pieces[ p ] = "6,16,9,11".split( splitreg ); p++;
pieces[ p ] = "6,16,13,13".split( splitreg ); p++;
pieces[ p ] = "6,17,8,18".split( splitreg ); p++;
pieces[ p ] = "6,17,9,10".split( splitreg ); p++;
pieces[ p ] = "6,17,9,12".split( splitreg ); p++;
pieces[ p ] = "6,17,12,12".split( splitreg ); p++;
pieces[ p ] = "6,17,16,8".split( splitreg ); p++;
pieces[ p ] = "7,7,17,13".split( splitreg ); p++;
pieces[ p ] = "7,8,13,14".split( splitreg ); p++;
pieces[ p ] = "7,8,15,13".split( splitreg ); p++;
pieces[ p ] = "7,9,10,12".split( splitreg ); p++;
pieces[ p ] = "7,9,11,17".split( splitreg ); p++;
pieces[ p ] = "7,9,11,18".split( splitreg ); p++;
pieces[ p ] = "7,9,16,11".split( splitreg ); p++;
pieces[ p ] = "7,10,9,11".split( splitreg ); p++;
pieces[ p ] = "7,11,10,18".split( splitreg ); p++;
pieces[ p ] = "7,11,17,14".split( splitreg ); p++;
pieces[ p ] = "7,12,7,14".split( splitreg ); p++;
pieces[ p ] = "7,12,11,13".split( splitreg ); p++;
pieces[ p ] = "7,12,16,11".split( splitreg ); p++;
pieces[ p ] = "7,13,10,13".split( splitreg ); p++;
pieces[ p ] = "7,13,18,11".split( splitreg ); p++;
pieces[ p ] = "7,14,8,11".split( splitreg ); p++;
pieces[ p ] = "7,14,18,15".split( splitreg ); p++;
pieces[ p ] = "7,15,10,18".split( splitreg ); p++;
pieces[ p ] = "7,15,15,14".split( splitreg ); p++;
pieces[ p ] = "7,16,10,11".split( splitreg ); p++;
pieces[ p ] = "7,16,12,17".split( splitreg ); p++;
pieces[ p ] = "7,16,14,18".split( splitreg ); p++;
pieces[ p ] = "7,16,16,10".split( splitreg ); p++;
pieces[ p ] = "7,17,15,16".split( splitreg ); p++;
pieces[ p ] = "7,18,11,10".split( splitreg ); p++;
pieces[ p ] = "7,18,18,14".split( splitreg ); p++;
pieces[ p ] = "8,8,10,17".split( splitreg ); p++;
pieces[ p ] = "8,8,14,17".split( splitreg ); p++;
pieces[ p ] = "8,9,11,10".split( splitreg ); p++;
pieces[ p ] = "8,9,12,17".split( splitreg ); p++;
pieces[ p ] = "8,9,17,17".split( splitreg ); p++;
pieces[ p ] = "8,10,10,16".split( splitreg ); p++;
pieces[ p ] = "8,10,18,11".split( splitreg ); p++;
pieces[ p ] = "8,11,10,18".split( splitreg ); p++;
pieces[ p ] = "8,12,9,18".split( splitreg ); p++;
pieces[ p ] = "8,13,17,16".split( splitreg ); p++;
pieces[ p ] = "8,14,12,18".split( splitreg ); p++;
pieces[ p ] = "8,14,13,9".split( splitreg ); p++;
pieces[ p ] = "8,15,10,11".split( splitreg ); p++;
pieces[ p ] = "8,15,14,15".split( splitreg ); p++;
pieces[ p ] = "8,15,14,17".split( splitreg ); p++;
pieces[ p ] = "8,16,12,14".split( splitreg ); p++;
pieces[ p ] = "8,16,17,15".split( splitreg ); p++;
pieces[ p ] = "8,18,12,16".split( splitreg ); p++;
pieces[ p ] = "8,18,14,16".split( splitreg ); p++;
pieces[ p ] = "9,10,9,18".split( splitreg ); p++;
pieces[ p ] = "9,10,15,12".split( splitreg ); p++;
pieces[ p ] = "9,11,18,18".split( splitreg ); p++;
pieces[ p ] = "9,13,15,16".split( splitreg ); p++;
pieces[ p ] = "9,13,17,12".split( splitreg ); p++;
pieces[ p ] = "9,13,18,17".split( splitreg ); p++;
pieces[ p ] = "9,14,16,10".split( splitreg ); p++;
pieces[ p ] = "9,15,10,14".split( splitreg ); p++;
pieces[ p ] = "9,15,14,16".split( splitreg ); p++;
pieces[ p ] = "9,16,12,14".split( splitreg ); p++;
pieces[ p ] = "9,18,12,10".split( splitreg ); p++;
pieces[ p ] = "9,18,17,18".split( splitreg ); p++;
pieces[ p ] = "10,11,11,16".split( splitreg ); p++;
pieces[ p ] = "10,12,11,15".split( splitreg ); p++;
pieces[ p ] = "10,12,17,18".split( splitreg ); p++;
pieces[ p ] = "10,14,16,14".split( splitreg ); p++;
pieces[ p ] = "10,15,15,12".split( splitreg ); p++;
pieces[ p ] = "10,15,15,18".split( splitreg ); p++;
pieces[ p ] = "10,17,11,13".split( splitreg ); p++;
pieces[ p ] = "10,18,14,16".split( splitreg ); p++;
pieces[ p ] = "10,18,17,13".split( splitreg ); p++;
pieces[ p ] = "11,12,14,17".split( splitreg ); p++;
pieces[ p ] = "11,12,17,16".split( splitreg ); p++;
pieces[ p ] = "11,13,15,15".split( splitreg ); p++;
pieces[ p ] = "11,14,15,16".split( splitreg ); p++;
pieces[ p ] = "12,12,13,18".split( splitreg ); p++;
pieces[ p ] = "12,13,13,15".split( splitreg ); p++;
pieces[ p ] = "12,13,16,13".split( splitreg ); p++;
pieces[ p ] = "12,16,13,13".split( splitreg ); p++;
pieces[ p ] = "12,16,17,15".split( splitreg ); p++;
pieces[ p ] = "12,17,15,16".split( splitreg ); p++;
pieces[ p ] = "12,17,16,15".split( splitreg ); p++;
pieces[ p ] = "13,13,17,18".split( splitreg ); p++;
pieces[ p ] = "13,17,17,17".split( splitreg ); p++;
pieces[ p ] = "14,15,18,16".split( splitreg ); p++;
pieces[ p ] = "15,18,18,17".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

