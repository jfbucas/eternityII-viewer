
puzzles[ nb_puzzles ] = "brendan/pieces_17x08.txt.js,Brendan 17x08".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_17x08.txt.js" ) {

board_w = 17;
board_h = 8;


pieces[ p ] = "0,0,3,2".split( splitreg ); p++;
pieces[ p ] = "0,0,3,4".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,0,4,3".split( splitreg ); p++;
pieces[ p ] = "0,1,6,2".split( splitreg ); p++;
pieces[ p ] = "0,1,6,4".split( splitreg ); p++;
pieces[ p ] = "0,1,8,1".split( splitreg ); p++;
pieces[ p ] = "0,1,8,2".split( splitreg ); p++;
pieces[ p ] = "0,1,8,4".split( splitreg ); p++;
pieces[ p ] = "0,1,9,2".split( splitreg ); p++;
pieces[ p ] = "0,1,12,1".split( splitreg ); p++;
pieces[ p ] = "0,1,12,3".split( splitreg ); p++;
pieces[ p ] = "0,1,12,4".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,3".split( splitreg ); p++;
pieces[ p ] = "0,1,15,2".split( splitreg ); p++;
pieces[ p ] = "0,2,5,4".split( splitreg ); p++;
pieces[ p ] = "0,2,6,1".split( splitreg ); p++;
pieces[ p ] = "0,2,6,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,9,4".split( splitreg ); p++;
pieces[ p ] = "0,2,10,1".split( splitreg ); p++;
pieces[ p ] = "0,2,12,1".split( splitreg ); p++;
pieces[ p ] = "0,2,12,2".split( splitreg ); p++;
pieces[ p ] = "0,2,12,4".split( splitreg ); p++;
pieces[ p ] = "0,2,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,14,2".split( splitreg ); p++;
pieces[ p ] = "0,2,15,3".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,4".split( splitreg ); p++;
pieces[ p ] = "0,3,7,3".split( splitreg ); p++;
pieces[ p ] = "0,3,9,4".split( splitreg ); p++;
pieces[ p ] = "0,3,11,1".split( splitreg ); p++;
pieces[ p ] = "0,3,13,1".split( splitreg ); p++;
pieces[ p ] = "0,3,13,3".split( splitreg ); p++;
pieces[ p ] = "0,3,14,1".split( splitreg ); p++;
pieces[ p ] = "0,3,16,2".split( splitreg ); p++;
pieces[ p ] = "0,4,5,4".split( splitreg ); p++;
pieces[ p ] = "0,4,6,3".split( splitreg ); p++;
pieces[ p ] = "0,4,6,4".split( splitreg ); p++;
pieces[ p ] = "0,4,7,3".split( splitreg ); p++;
pieces[ p ] = "0,4,9,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,12,1".split( splitreg ); p++;
pieces[ p ] = "0,4,13,2".split( splitreg ); p++;
pieces[ p ] = "5,5,9,6".split( splitreg ); p++;
pieces[ p ] = "5,5,12,10".split( splitreg ); p++;
pieces[ p ] = "5,5,13,13".split( splitreg ); p++;
pieces[ p ] = "5,6,9,7".split( splitreg ); p++;
pieces[ p ] = "5,6,13,11".split( splitreg ); p++;
pieces[ p ] = "5,7,10,16".split( splitreg ); p++;
pieces[ p ] = "5,7,11,10".split( splitreg ); p++;
pieces[ p ] = "5,7,15,9".split( splitreg ); p++;
pieces[ p ] = "5,7,15,10".split( splitreg ); p++;
pieces[ p ] = "5,8,8,10".split( splitreg ); p++;
pieces[ p ] = "5,8,16,6".split( splitreg ); p++;
pieces[ p ] = "5,8,16,10".split( splitreg ); p++;
pieces[ p ] = "5,9,14,7".split( splitreg ); p++;
pieces[ p ] = "5,10,7,12".split( splitreg ); p++;
pieces[ p ] = "5,11,6,14".split( splitreg ); p++;
pieces[ p ] = "5,11,7,10".split( splitreg ); p++;
pieces[ p ] = "5,12,8,16".split( splitreg ); p++;
pieces[ p ] = "5,12,11,7".split( splitreg ); p++;
pieces[ p ] = "5,12,13,9".split( splitreg ); p++;
pieces[ p ] = "5,12,15,12".split( splitreg ); p++;
pieces[ p ] = "5,13,8,13".split( splitreg ); p++;
pieces[ p ] = "5,13,13,12".split( splitreg ); p++;
pieces[ p ] = "5,13,15,13".split( splitreg ); p++;
pieces[ p ] = "5,14,6,11".split( splitreg ); p++;
pieces[ p ] = "5,14,8,10".split( splitreg ); p++;
pieces[ p ] = "5,14,11,14".split( splitreg ); p++;
pieces[ p ] = "5,14,12,9".split( splitreg ); p++;
pieces[ p ] = "5,14,13,15".split( splitreg ); p++;
pieces[ p ] = "5,16,6,6".split( splitreg ); p++;
pieces[ p ] = "6,6,14,15".split( splitreg ); p++;
pieces[ p ] = "6,7,8,7".split( splitreg ); p++;
pieces[ p ] = "6,7,15,16".split( splitreg ); p++;
pieces[ p ] = "6,8,7,16".split( splitreg ); p++;
pieces[ p ] = "6,9,7,12".split( splitreg ); p++;
pieces[ p ] = "6,9,9,15".split( splitreg ); p++;
pieces[ p ] = "6,9,10,13".split( splitreg ); p++;
pieces[ p ] = "6,9,14,16".split( splitreg ); p++;
pieces[ p ] = "6,10,10,12".split( splitreg ); p++;
pieces[ p ] = "6,10,15,16".split( splitreg ); p++;
pieces[ p ] = "6,11,12,10".split( splitreg ); p++;
pieces[ p ] = "6,12,12,8".split( splitreg ); p++;
pieces[ p ] = "6,13,8,9".split( splitreg ); p++;
pieces[ p ] = "6,14,15,10".split( splitreg ); p++;
pieces[ p ] = "6,16,8,16".split( splitreg ); p++;
pieces[ p ] = "6,16,15,11".split( splitreg ); p++;
pieces[ p ] = "6,16,16,11".split( splitreg ); p++;
pieces[ p ] = "7,8,15,13".split( splitreg ); p++;
pieces[ p ] = "7,9,10,13".split( splitreg ); p++;
pieces[ p ] = "7,10,7,14".split( splitreg ); p++;
pieces[ p ] = "7,12,8,14".split( splitreg ); p++;
pieces[ p ] = "7,12,10,14".split( splitreg ); p++;
pieces[ p ] = "7,12,15,14".split( splitreg ); p++;
pieces[ p ] = "7,13,7,14".split( splitreg ); p++;
pieces[ p ] = "7,13,11,10".split( splitreg ); p++;
pieces[ p ] = "7,13,11,13".split( splitreg ); p++;
pieces[ p ] = "7,13,12,9".split( splitreg ); p++;
pieces[ p ] = "7,14,8,10".split( splitreg ); p++;
pieces[ p ] = "7,14,9,9".split( splitreg ); p++;
pieces[ p ] = "7,15,8,8".split( splitreg ); p++;
pieces[ p ] = "7,15,15,16".split( splitreg ); p++;
pieces[ p ] = "7,16,8,10".split( splitreg ); p++;
pieces[ p ] = "8,8,15,14".split( splitreg ); p++;
pieces[ p ] = "8,8,16,10".split( splitreg ); p++;
pieces[ p ] = "8,10,10,16".split( splitreg ); p++;
pieces[ p ] = "8,11,9,9".split( splitreg ); p++;
pieces[ p ] = "8,11,11,16".split( splitreg ); p++;
pieces[ p ] = "8,11,16,15".split( splitreg ); p++;
pieces[ p ] = "8,13,15,10".split( splitreg ); p++;
pieces[ p ] = "8,13,15,11".split( splitreg ); p++;
pieces[ p ] = "8,14,14,16".split( splitreg ); p++;
pieces[ p ] = "8,15,12,13".split( splitreg ); p++;
pieces[ p ] = "8,16,15,14".split( splitreg ); p++;
pieces[ p ] = "9,9,16,16".split( splitreg ); p++;
pieces[ p ] = "9,10,9,14".split( splitreg ); p++;
pieces[ p ] = "9,10,11,13".split( splitreg ); p++;
pieces[ p ] = "9,11,11,11".split( splitreg ); p++;
pieces[ p ] = "9,11,15,11".split( splitreg ); p++;
pieces[ p ] = "9,12,13,16".split( splitreg ); p++;
pieces[ p ] = "9,14,13,16".split( splitreg ); p++;
pieces[ p ] = "9,15,14,15".split( splitreg ); p++;
pieces[ p ] = "9,16,11,10".split( splitreg ); p++;
pieces[ p ] = "9,16,16,11".split( splitreg ); p++;
pieces[ p ] = "10,11,12,11".split( splitreg ); p++;
pieces[ p ] = "10,13,14,12".split( splitreg ); p++;
pieces[ p ] = "10,14,11,11".split( splitreg ); p++;
pieces[ p ] = "11,12,14,12".split( splitreg ); p++;
pieces[ p ] = "11,13,15,12".split( splitreg ); p++;
pieces[ p ] = "11,13,15,14".split( splitreg ); p++;
pieces[ p ] = "11,16,15,12".split( splitreg ); p++;
pieces[ p ] = "12,15,15,16".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

