
puzzles[ nb_puzzles ] = "brendan/pieces_20x12.txt.js,Brendan 20x12".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_20x12.txt.js" ) {

board_w = 20;
board_h = 12;


pieces[ p ] = "0,0,1,2".split( splitreg ); p++;
pieces[ p ] = "0,0,2,1".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,0,5,3".split( splitreg ); p++;
pieces[ p ] = "0,1,8,4".split( splitreg ); p++;
pieces[ p ] = "0,1,13,2".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,13,4".split( splitreg ); p++;
pieces[ p ] = "0,1,14,5".split( splitreg ); p++;
pieces[ p ] = "0,1,16,1".split( splitreg ); p++;
pieces[ p ] = "0,1,16,2".split( splitreg ); p++;
pieces[ p ] = "0,1,16,3".split( splitreg ); p++;
pieces[ p ] = "0,1,18,1".split( splitreg ); p++;
pieces[ p ] = "0,1,19,5".split( splitreg ); p++;
pieces[ p ] = "0,1,20,1".split( splitreg ); p++;
pieces[ p ] = "0,2,6,4".split( splitreg ); p++;
pieces[ p ] = "0,2,8,5".split( splitreg ); p++;
pieces[ p ] = "0,2,10,1".split( splitreg ); p++;
pieces[ p ] = "0,2,10,5".split( splitreg ); p++;
pieces[ p ] = "0,2,11,4".split( splitreg ); p++;
pieces[ p ] = "0,2,11,5".split( splitreg ); p++;
pieces[ p ] = "0,2,13,1".split( splitreg ); p++;
pieces[ p ] = "0,2,16,5".split( splitreg ); p++;
pieces[ p ] = "0,2,20,4".split( splitreg ); p++;
pieces[ p ] = "0,2,20,5".split( splitreg ); p++;
pieces[ p ] = "0,2,21,5".split( splitreg ); p++;
pieces[ p ] = "0,3,7,5".split( splitreg ); p++;
pieces[ p ] = "0,3,8,4".split( splitreg ); p++;
pieces[ p ] = "0,3,10,2".split( splitreg ); p++;
pieces[ p ] = "0,3,10,3".split( splitreg ); p++;
pieces[ p ] = "0,3,12,1".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,16,2".split( splitreg ); p++;
pieces[ p ] = "0,3,18,4".split( splitreg ); p++;
pieces[ p ] = "0,3,20,3".split( splitreg ); p++;
pieces[ p ] = "0,3,21,2".split( splitreg ); p++;
pieces[ p ] = "0,3,21,3".split( splitreg ); p++;
pieces[ p ] = "0,4,6,4".split( splitreg ); p++;
pieces[ p ] = "0,4,9,1".split( splitreg ); p++;
pieces[ p ] = "0,4,9,4".split( splitreg ); p++;
pieces[ p ] = "0,4,12,3".split( splitreg ); p++;
pieces[ p ] = "0,4,13,5".split( splitreg ); p++;
pieces[ p ] = "0,4,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,15,5".split( splitreg ); p++;
pieces[ p ] = "0,4,17,3".split( splitreg ); p++;
pieces[ p ] = "0,4,18,2".split( splitreg ); p++;
pieces[ p ] = "0,4,19,4".split( splitreg ); p++;
pieces[ p ] = "0,4,21,3".split( splitreg ); p++;
pieces[ p ] = "0,5,8,2".split( splitreg ); p++;
pieces[ p ] = "0,5,8,4".split( splitreg ); p++;
pieces[ p ] = "0,5,10,1".split( splitreg ); p++;
pieces[ p ] = "0,5,11,2".split( splitreg ); p++;
pieces[ p ] = "0,5,14,3".split( splitreg ); p++;
pieces[ p ] = "0,5,15,3".split( splitreg ); p++;
pieces[ p ] = "0,5,16,1".split( splitreg ); p++;
pieces[ p ] = "0,5,17,1".split( splitreg ); p++;
pieces[ p ] = "0,5,19,3".split( splitreg ); p++;
pieces[ p ] = "0,5,20,5".split( splitreg ); p++;
pieces[ p ] = "0,5,21,2".split( splitreg ); p++;
pieces[ p ] = "6,6,6,14".split( splitreg ); p++;
pieces[ p ] = "6,6,8,15".split( splitreg ); p++;
pieces[ p ] = "6,6,9,17".split( splitreg ); p++;
pieces[ p ] = "6,6,12,13".split( splitreg ); p++;
pieces[ p ] = "6,8,13,14".split( splitreg ); p++;
pieces[ p ] = "6,9,11,11".split( splitreg ); p++;
pieces[ p ] = "6,9,16,18".split( splitreg ); p++;
pieces[ p ] = "6,10,6,21".split( splitreg ); p++;
pieces[ p ] = "6,10,12,17".split( splitreg ); p++;
pieces[ p ] = "6,10,13,12".split( splitreg ); p++;
pieces[ p ] = "6,10,15,14".split( splitreg ); p++;
pieces[ p ] = "6,10,19,20".split( splitreg ); p++;
pieces[ p ] = "6,10,21,17".split( splitreg ); p++;
pieces[ p ] = "6,11,7,19".split( splitreg ); p++;
pieces[ p ] = "6,11,9,7".split( splitreg ); p++;
pieces[ p ] = "6,11,13,13".split( splitreg ); p++;
pieces[ p ] = "6,11,19,17".split( splitreg ); p++;
pieces[ p ] = "6,11,19,19".split( splitreg ); p++;
pieces[ p ] = "6,12,15,8".split( splitreg ); p++;
pieces[ p ] = "6,12,15,12".split( splitreg ); p++;
pieces[ p ] = "6,13,7,15".split( splitreg ); p++;
pieces[ p ] = "6,13,15,7".split( splitreg ); p++;
pieces[ p ] = "6,13,16,10".split( splitreg ); p++;
pieces[ p ] = "6,14,7,12".split( splitreg ); p++;
pieces[ p ] = "6,14,16,21".split( splitreg ); p++;
pieces[ p ] = "6,15,8,10".split( splitreg ); p++;
pieces[ p ] = "6,16,10,16".split( splitreg ); p++;
pieces[ p ] = "6,16,14,11".split( splitreg ); p++;
pieces[ p ] = "6,16,21,17".split( splitreg ); p++;
pieces[ p ] = "6,17,21,18".split( splitreg ); p++;
pieces[ p ] = "6,18,10,14".split( splitreg ); p++;
pieces[ p ] = "6,18,13,21".split( splitreg ); p++;
pieces[ p ] = "6,18,20,20".split( splitreg ); p++;
pieces[ p ] = "6,18,21,9".split( splitreg ); p++;
pieces[ p ] = "6,19,9,9".split( splitreg ); p++;
pieces[ p ] = "6,19,13,9".split( splitreg ); p++;
pieces[ p ] = "6,19,21,12".split( splitreg ); p++;
pieces[ p ] = "6,20,8,11".split( splitreg ); p++;
pieces[ p ] = "6,20,16,8".split( splitreg ); p++;
pieces[ p ] = "6,20,20,7".split( splitreg ); p++;
pieces[ p ] = "6,20,21,14".split( splitreg ); p++;
pieces[ p ] = "6,21,16,17".split( splitreg ); p++;
pieces[ p ] = "7,7,9,13".split( splitreg ); p++;
pieces[ p ] = "7,7,9,21".split( splitreg ); p++;
pieces[ p ] = "7,7,10,10".split( splitreg ); p++;
pieces[ p ] = "7,7,10,19".split( splitreg ); p++;
pieces[ p ] = "7,7,16,11".split( splitreg ); p++;
pieces[ p ] = "7,7,19,15".split( splitreg ); p++;
pieces[ p ] = "7,8,9,11".split( splitreg ); p++;
pieces[ p ] = "7,8,9,17".split( splitreg ); p++;
pieces[ p ] = "7,8,19,15".split( splitreg ); p++;
pieces[ p ] = "7,9,12,15".split( splitreg ); p++;
pieces[ p ] = "7,9,18,12".split( splitreg ); p++;
pieces[ p ] = "7,10,11,18".split( splitreg ); p++;
pieces[ p ] = "7,11,12,13".split( splitreg ); p++;
pieces[ p ] = "7,11,20,13".split( splitreg ); p++;
pieces[ p ] = "7,11,21,17".split( splitreg ); p++;
pieces[ p ] = "7,12,14,18".split( splitreg ); p++;
pieces[ p ] = "7,12,17,11".split( splitreg ); p++;
pieces[ p ] = "7,12,17,14".split( splitreg ); p++;
pieces[ p ] = "7,12,21,8".split( splitreg ); p++;
pieces[ p ] = "7,13,9,15".split( splitreg ); p++;
pieces[ p ] = "7,13,18,8".split( splitreg ); p++;
pieces[ p ] = "7,14,10,10".split( splitreg ); p++;
pieces[ p ] = "7,14,11,16".split( splitreg ); p++;
pieces[ p ] = "7,14,12,14".split( splitreg ); p++;
pieces[ p ] = "7,14,15,12".split( splitreg ); p++;
pieces[ p ] = "7,15,11,12".split( splitreg ); p++;
pieces[ p ] = "7,15,11,13".split( splitreg ); p++;
pieces[ p ] = "7,15,18,15".split( splitreg ); p++;
pieces[ p ] = "7,16,8,11".split( splitreg ); p++;
pieces[ p ] = "7,16,12,10".split( splitreg ); p++;
pieces[ p ] = "7,17,9,17".split( splitreg ); p++;
pieces[ p ] = "7,17,17,9".split( splitreg ); p++;
pieces[ p ] = "7,19,8,20".split( splitreg ); p++;
pieces[ p ] = "7,19,11,18".split( splitreg ); p++;
pieces[ p ] = "7,19,17,12".split( splitreg ); p++;
pieces[ p ] = "7,20,10,18".split( splitreg ); p++;
pieces[ p ] = "7,21,12,17".split( splitreg ); p++;
pieces[ p ] = "8,8,12,11".split( splitreg ); p++;
pieces[ p ] = "8,10,10,17".split( splitreg ); p++;
pieces[ p ] = "8,10,17,20".split( splitreg ); p++;
pieces[ p ] = "8,11,10,20".split( splitreg ); p++;
pieces[ p ] = "8,11,16,11".split( splitreg ); p++;
pieces[ p ] = "8,11,19,12".split( splitreg ); p++;
pieces[ p ] = "8,12,12,17".split( splitreg ); p++;
pieces[ p ] = "8,12,14,12".split( splitreg ); p++;
pieces[ p ] = "8,12,18,15".split( splitreg ); p++;
pieces[ p ] = "8,13,10,9".split( splitreg ); p++;
pieces[ p ] = "8,13,10,13".split( splitreg ); p++;
pieces[ p ] = "8,13,19,10".split( splitreg ); p++;
pieces[ p ] = "8,13,19,20".split( splitreg ); p++;
pieces[ p ] = "8,14,9,20".split( splitreg ); p++;
pieces[ p ] = "8,14,12,9".split( splitreg ); p++;
pieces[ p ] = "8,14,14,16".split( splitreg ); p++;
pieces[ p ] = "8,16,12,18".split( splitreg ); p++;
pieces[ p ] = "8,16,14,18".split( splitreg ); p++;
pieces[ p ] = "8,17,16,17".split( splitreg ); p++;
pieces[ p ] = "8,18,11,21".split( splitreg ); p++;
pieces[ p ] = "8,18,13,16".split( splitreg ); p++;
pieces[ p ] = "8,18,16,15".split( splitreg ); p++;
pieces[ p ] = "8,18,18,14".split( splitreg ); p++;
pieces[ p ] = "8,19,9,11".split( splitreg ); p++;
pieces[ p ] = "8,19,17,14".split( splitreg ); p++;
pieces[ p ] = "8,19,18,15".split( splitreg ); p++;
pieces[ p ] = "8,19,19,12".split( splitreg ); p++;
pieces[ p ] = "8,20,15,14".split( splitreg ); p++;
pieces[ p ] = "8,20,21,21".split( splitreg ); p++;
pieces[ p ] = "8,21,16,14".split( splitreg ); p++;
pieces[ p ] = "8,21,20,20".split( splitreg ); p++;
pieces[ p ] = "9,9,19,20".split( splitreg ); p++;
pieces[ p ] = "9,9,21,14".split( splitreg ); p++;
pieces[ p ] = "9,10,16,20".split( splitreg ); p++;
pieces[ p ] = "9,11,14,13".split( splitreg ); p++;
pieces[ p ] = "9,11,15,21".split( splitreg ); p++;
pieces[ p ] = "9,12,14,20".split( splitreg ); p++;
pieces[ p ] = "9,12,18,13".split( splitreg ); p++;
pieces[ p ] = "9,12,19,12".split( splitreg ); p++;
pieces[ p ] = "9,12,19,18".split( splitreg ); p++;
pieces[ p ] = "9,14,15,14".split( splitreg ); p++;
pieces[ p ] = "9,15,10,18".split( splitreg ); p++;
pieces[ p ] = "9,15,12,12".split( splitreg ); p++;
pieces[ p ] = "9,15,17,12".split( splitreg ); p++;
pieces[ p ] = "9,15,20,19".split( splitreg ); p++;
pieces[ p ] = "9,16,18,21".split( splitreg ); p++;
pieces[ p ] = "9,17,9,18".split( splitreg ); p++;
pieces[ p ] = "9,17,17,15".split( splitreg ); p++;
pieces[ p ] = "9,17,18,10".split( splitreg ); p++;
pieces[ p ] = "9,18,9,20".split( splitreg ); p++;
pieces[ p ] = "9,18,20,19".split( splitreg ); p++;
pieces[ p ] = "9,18,21,11".split( splitreg ); p++;
pieces[ p ] = "9,19,10,13".split( splitreg ); p++;
pieces[ p ] = "9,21,13,19".split( splitreg ); p++;
pieces[ p ] = "10,10,19,11".split( splitreg ); p++;
pieces[ p ] = "10,11,12,21".split( splitreg ); p++;
pieces[ p ] = "10,11,21,20".split( splitreg ); p++;
pieces[ p ] = "10,12,13,19".split( splitreg ); p++;
pieces[ p ] = "10,14,13,14".split( splitreg ); p++;
pieces[ p ] = "10,14,21,19".split( splitreg ); p++;
pieces[ p ] = "10,16,19,15".split( splitreg ); p++;
pieces[ p ] = "10,16,21,14".split( splitreg ); p++;
pieces[ p ] = "10,18,17,21".split( splitreg ); p++;
pieces[ p ] = "10,18,21,18".split( splitreg ); p++;
pieces[ p ] = "10,18,21,20".split( splitreg ); p++;
pieces[ p ] = "10,19,13,20".split( splitreg ); p++;
pieces[ p ] = "10,21,18,20".split( splitreg ); p++;
pieces[ p ] = "11,11,19,12".split( splitreg ); p++;
pieces[ p ] = "11,13,21,16".split( splitreg ); p++;
pieces[ p ] = "11,15,13,20".split( splitreg ); p++;
pieces[ p ] = "11,15,19,14".split( splitreg ); p++;
pieces[ p ] = "11,16,13,21".split( splitreg ); p++;
pieces[ p ] = "11,16,15,17".split( splitreg ); p++;
pieces[ p ] = "11,16,18,18".split( splitreg ); p++;
pieces[ p ] = "11,16,20,18".split( splitreg ); p++;
pieces[ p ] = "11,19,17,17".split( splitreg ); p++;
pieces[ p ] = "11,20,16,16".split( splitreg ); p++;
pieces[ p ] = "12,13,14,21".split( splitreg ); p++;
pieces[ p ] = "12,15,15,20".split( splitreg ); p++;
pieces[ p ] = "12,16,18,17".split( splitreg ); p++;
pieces[ p ] = "12,21,20,15".split( splitreg ); p++;
pieces[ p ] = "13,13,13,14".split( splitreg ); p++;
pieces[ p ] = "13,13,17,15".split( splitreg ); p++;
pieces[ p ] = "13,16,20,17".split( splitreg ); p++;
pieces[ p ] = "13,17,17,16".split( splitreg ); p++;
pieces[ p ] = "13,19,15,14".split( splitreg ); p++;
pieces[ p ] = "13,19,15,17".split( splitreg ); p++;
pieces[ p ] = "13,20,19,20".split( splitreg ); p++;
pieces[ p ] = "14,16,20,18".split( splitreg ); p++;
pieces[ p ] = "14,17,14,21".split( splitreg ); p++;
pieces[ p ] = "14,17,15,17".split( splitreg ); p++;
pieces[ p ] = "14,19,21,17".split( splitreg ); p++;
pieces[ p ] = "14,21,15,16".split( splitreg ); p++;
pieces[ p ] = "15,15,18,21".split( splitreg ); p++;
pieces[ p ] = "15,19,16,18".split( splitreg ); p++;
pieces[ p ] = "15,19,21,20".split( splitreg ); p++;
pieces[ p ] = "15,20,16,16".split( splitreg ); p++;
pieces[ p ] = "15,21,19,17".split( splitreg ); p++;
pieces[ p ] = "16,16,17,18".split( splitreg ); p++;
pieces[ p ] = "17,17,20,20".split( splitreg ); p++;
pieces[ p ] = "18,19,20,21".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

