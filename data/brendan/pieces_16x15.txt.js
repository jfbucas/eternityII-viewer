
puzzles[ nb_puzzles ] = "brendan/pieces_16x15.txt.js,Brendan 16x15".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_16x15.txt.js" ) {

board_w = 16;
board_h = 15;


pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,0,3,2".split( splitreg ); p++;
pieces[ p ] = "0,0,5,1".split( splitreg ); p++;
pieces[ p ] = "0,0,5,4".split( splitreg ); p++;
pieces[ p ] = "0,1,7,3".split( splitreg ); p++;
pieces[ p ] = "0,1,9,1".split( splitreg ); p++;
pieces[ p ] = "0,1,10,1".split( splitreg ); p++;
pieces[ p ] = "0,1,10,3".split( splitreg ); p++;
pieces[ p ] = "0,1,11,2".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,2".split( splitreg ); p++;
pieces[ p ] = "0,1,14,4".split( splitreg ); p++;
pieces[ p ] = "0,1,15,1".split( splitreg ); p++;
pieces[ p ] = "0,1,19,1".split( splitreg ); p++;
pieces[ p ] = "0,1,21,5".split( splitreg ); p++;
pieces[ p ] = "0,1,22,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,2".split( splitreg ); p++;
pieces[ p ] = "0,2,8,3".split( splitreg ); p++;
pieces[ p ] = "0,2,10,5".split( splitreg ); p++;
pieces[ p ] = "0,2,11,5".split( splitreg ); p++;
pieces[ p ] = "0,2,13,4".split( splitreg ); p++;
pieces[ p ] = "0,2,17,1".split( splitreg ); p++;
pieces[ p ] = "0,2,17,3".split( splitreg ); p++;
pieces[ p ] = "0,2,18,5".split( splitreg ); p++;
pieces[ p ] = "0,2,20,5".split( splitreg ); p++;
pieces[ p ] = "0,2,21,2".split( splitreg ); p++;
pieces[ p ] = "0,2,22,4".split( splitreg ); p++;
pieces[ p ] = "0,3,7,4".split( splitreg ); p++;
pieces[ p ] = "0,3,9,5".split( splitreg ); p++;
pieces[ p ] = "0,3,11,3".split( splitreg ); p++;
pieces[ p ] = "0,3,12,2".split( splitreg ); p++;
pieces[ p ] = "0,3,12,5".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,16,4".split( splitreg ); p++;
pieces[ p ] = "0,3,16,5".split( splitreg ); p++;
pieces[ p ] = "0,3,18,5".split( splitreg ); p++;
pieces[ p ] = "0,3,19,4".split( splitreg ); p++;
pieces[ p ] = "0,3,22,1".split( splitreg ); p++;
pieces[ p ] = "0,4,8,1".split( splitreg ); p++;
pieces[ p ] = "0,4,8,2".split( splitreg ); p++;
pieces[ p ] = "0,4,9,5".split( splitreg ); p++;
pieces[ p ] = "0,4,11,2".split( splitreg ); p++;
pieces[ p ] = "0,4,13,2".split( splitreg ); p++;
pieces[ p ] = "0,4,14,1".split( splitreg ); p++;
pieces[ p ] = "0,4,15,2".split( splitreg ); p++;
pieces[ p ] = "0,4,15,5".split( splitreg ); p++;
pieces[ p ] = "0,4,17,1".split( splitreg ); p++;
pieces[ p ] = "0,4,19,3".split( splitreg ); p++;
pieces[ p ] = "0,4,21,1".split( splitreg ); p++;
pieces[ p ] = "0,5,6,3".split( splitreg ); p++;
pieces[ p ] = "0,5,8,2".split( splitreg ); p++;
pieces[ p ] = "0,5,9,4".split( splitreg ); p++;
pieces[ p ] = "0,5,10,3".split( splitreg ); p++;
pieces[ p ] = "0,5,15,4".split( splitreg ); p++;
pieces[ p ] = "0,5,16,3".split( splitreg ); p++;
pieces[ p ] = "0,5,16,4".split( splitreg ); p++;
pieces[ p ] = "0,5,17,3".split( splitreg ); p++;
pieces[ p ] = "0,5,20,1".split( splitreg ); p++;
pieces[ p ] = "6,6,13,18".split( splitreg ); p++;
pieces[ p ] = "6,6,22,12".split( splitreg ); p++;
pieces[ p ] = "6,7,16,21".split( splitreg ); p++;
pieces[ p ] = "6,7,20,10".split( splitreg ); p++;
pieces[ p ] = "6,8,7,10".split( splitreg ); p++;
pieces[ p ] = "6,8,7,22".split( splitreg ); p++;
pieces[ p ] = "6,8,16,8".split( splitreg ); p++;
pieces[ p ] = "6,8,21,17".split( splitreg ); p++;
pieces[ p ] = "6,9,6,22".split( splitreg ); p++;
pieces[ p ] = "6,10,13,16".split( splitreg ); p++;
pieces[ p ] = "6,10,16,7".split( splitreg ); p++;
pieces[ p ] = "6,10,17,7".split( splitreg ); p++;
pieces[ p ] = "6,10,17,22".split( splitreg ); p++;
pieces[ p ] = "6,10,22,11".split( splitreg ); p++;
pieces[ p ] = "6,11,8,11".split( splitreg ); p++;
pieces[ p ] = "6,11,21,8".split( splitreg ); p++;
pieces[ p ] = "6,12,15,7".split( splitreg ); p++;
pieces[ p ] = "6,12,16,16".split( splitreg ); p++;
pieces[ p ] = "6,12,18,19".split( splitreg ); p++;
pieces[ p ] = "6,13,7,7".split( splitreg ); p++;
pieces[ p ] = "6,13,8,16".split( splitreg ); p++;
pieces[ p ] = "6,13,15,19".split( splitreg ); p++;
pieces[ p ] = "6,14,9,8".split( splitreg ); p++;
pieces[ p ] = "6,14,9,12".split( splitreg ); p++;
pieces[ p ] = "6,14,10,10".split( splitreg ); p++;
pieces[ p ] = "6,14,12,20".split( splitreg ); p++;
pieces[ p ] = "6,14,16,8".split( splitreg ); p++;
pieces[ p ] = "6,15,7,9".split( splitreg ); p++;
pieces[ p ] = "6,15,12,21".split( splitreg ); p++;
pieces[ p ] = "6,15,19,7".split( splitreg ); p++;
pieces[ p ] = "6,16,15,17".split( splitreg ); p++;
pieces[ p ] = "6,16,15,18".split( splitreg ); p++;
pieces[ p ] = "6,17,7,21".split( splitreg ); p++;
pieces[ p ] = "6,18,8,10".split( splitreg ); p++;
pieces[ p ] = "6,18,10,17".split( splitreg ); p++;
pieces[ p ] = "6,18,13,13".split( splitreg ); p++;
pieces[ p ] = "6,18,17,14".split( splitreg ); p++;
pieces[ p ] = "6,18,21,13".split( splitreg ); p++;
pieces[ p ] = "6,19,18,15".split( splitreg ); p++;
pieces[ p ] = "6,22,7,10".split( splitreg ); p++;
pieces[ p ] = "6,22,9,22".split( splitreg ); p++;
pieces[ p ] = "6,22,11,22".split( splitreg ); p++;
pieces[ p ] = "7,7,8,19".split( splitreg ); p++;
pieces[ p ] = "7,7,11,12".split( splitreg ); p++;
pieces[ p ] = "7,8,15,19".split( splitreg ); p++;
pieces[ p ] = "7,8,16,17".split( splitreg ); p++;
pieces[ p ] = "7,9,10,11".split( splitreg ); p++;
pieces[ p ] = "7,9,20,20".split( splitreg ); p++;
pieces[ p ] = "7,9,21,14".split( splitreg ); p++;
pieces[ p ] = "7,11,9,11".split( splitreg ); p++;
pieces[ p ] = "7,13,16,21".split( splitreg ); p++;
pieces[ p ] = "7,13,19,20".split( splitreg ); p++;
pieces[ p ] = "7,14,12,19".split( splitreg ); p++;
pieces[ p ] = "7,14,16,13".split( splitreg ); p++;
pieces[ p ] = "7,14,20,9".split( splitreg ); p++;
pieces[ p ] = "7,15,13,17".split( splitreg ); p++;
pieces[ p ] = "7,16,8,16".split( splitreg ); p++;
pieces[ p ] = "7,16,11,17".split( splitreg ); p++;
pieces[ p ] = "7,16,12,20".split( splitreg ); p++;
pieces[ p ] = "7,16,18,18".split( splitreg ); p++;
pieces[ p ] = "7,18,17,9".split( splitreg ); p++;
pieces[ p ] = "7,19,19,20".split( splitreg ); p++;
pieces[ p ] = "7,19,21,15".split( splitreg ); p++;
pieces[ p ] = "7,19,22,17".split( splitreg ); p++;
pieces[ p ] = "7,20,11,20".split( splitreg ); p++;
pieces[ p ] = "7,20,14,12".split( splitreg ); p++;
pieces[ p ] = "7,21,12,9".split( splitreg ); p++;
pieces[ p ] = "7,21,12,11".split( splitreg ); p++;
pieces[ p ] = "7,22,12,17".split( splitreg ); p++;
pieces[ p ] = "7,22,18,8".split( splitreg ); p++;
pieces[ p ] = "8,8,19,11".split( splitreg ); p++;
pieces[ p ] = "8,8,21,19".split( splitreg ); p++;
pieces[ p ] = "8,9,22,10".split( splitreg ); p++;
pieces[ p ] = "8,10,14,11".split( splitreg ); p++;
pieces[ p ] = "8,10,21,12".split( splitreg ); p++;
pieces[ p ] = "8,11,11,10".split( splitreg ); p++;
pieces[ p ] = "8,11,14,19".split( splitreg ); p++;
pieces[ p ] = "8,11,17,17".split( splitreg ); p++;
pieces[ p ] = "8,12,11,14".split( splitreg ); p++;
pieces[ p ] = "8,13,18,16".split( splitreg ); p++;
pieces[ p ] = "8,14,20,20".split( splitreg ); p++;
pieces[ p ] = "8,14,22,16".split( splitreg ); p++;
pieces[ p ] = "8,15,15,18".split( splitreg ); p++;
pieces[ p ] = "8,15,17,11".split( splitreg ); p++;
pieces[ p ] = "8,17,15,16".split( splitreg ); p++;
pieces[ p ] = "8,18,22,12".split( splitreg ); p++;
pieces[ p ] = "8,19,18,16".split( splitreg ); p++;
pieces[ p ] = "8,19,19,16".split( splitreg ); p++;
pieces[ p ] = "8,21,10,17".split( splitreg ); p++;
pieces[ p ] = "8,21,13,12".split( splitreg ); p++;
pieces[ p ] = "8,21,14,13".split( splitreg ); p++;
pieces[ p ] = "8,21,18,12".split( splitreg ); p++;
pieces[ p ] = "8,22,9,15".split( splitreg ); p++;
pieces[ p ] = "8,22,20,11".split( splitreg ); p++;
pieces[ p ] = "9,9,17,21".split( splitreg ); p++;
pieces[ p ] = "9,9,22,19".split( splitreg ); p++;
pieces[ p ] = "9,10,13,20".split( splitreg ); p++;
pieces[ p ] = "9,10,17,15".split( splitreg ); p++;
pieces[ p ] = "9,12,9,20".split( splitreg ); p++;
pieces[ p ] = "9,13,9,16".split( splitreg ); p++;
pieces[ p ] = "9,13,21,19".split( splitreg ); p++;
pieces[ p ] = "9,14,11,17".split( splitreg ); p++;
pieces[ p ] = "9,14,17,21".split( splitreg ); p++;
pieces[ p ] = "9,14,22,13".split( splitreg ); p++;
pieces[ p ] = "9,15,11,10".split( splitreg ); p++;
pieces[ p ] = "9,15,17,13".split( splitreg ); p++;
pieces[ p ] = "9,16,12,20".split( splitreg ); p++;
pieces[ p ] = "9,17,12,14".split( splitreg ); p++;
pieces[ p ] = "9,18,12,10".split( splitreg ); p++;
pieces[ p ] = "9,19,16,17".split( splitreg ); p++;
pieces[ p ] = "9,19,22,22".split( splitreg ); p++;
pieces[ p ] = "9,20,10,19".split( splitreg ); p++;
pieces[ p ] = "9,20,16,15".split( splitreg ); p++;
pieces[ p ] = "9,21,15,19".split( splitreg ); p++;
pieces[ p ] = "9,21,19,18".split( splitreg ); p++;
pieces[ p ] = "9,21,21,13".split( splitreg ); p++;
pieces[ p ] = "9,22,18,13".split( splitreg ); p++;
pieces[ p ] = "9,22,20,15".split( splitreg ); p++;
pieces[ p ] = "10,10,12,13".split( splitreg ); p++;
pieces[ p ] = "10,10,16,21".split( splitreg ); p++;
pieces[ p ] = "10,10,21,13".split( splitreg ); p++;
pieces[ p ] = "10,11,13,18".split( splitreg ); p++;
pieces[ p ] = "10,12,15,19".split( splitreg ); p++;
pieces[ p ] = "10,13,17,13".split( splitreg ); p++;
pieces[ p ] = "10,15,13,20".split( splitreg ); p++;
pieces[ p ] = "10,16,13,22".split( splitreg ); p++;
pieces[ p ] = "10,16,20,13".split( splitreg ); p++;
pieces[ p ] = "10,18,13,14".split( splitreg ); p++;
pieces[ p ] = "10,19,16,18".split( splitreg ); p++;
pieces[ p ] = "10,19,20,20".split( splitreg ); p++;
pieces[ p ] = "10,21,17,22".split( splitreg ); p++;
pieces[ p ] = "10,21,19,19".split( splitreg ); p++;
pieces[ p ] = "10,22,11,15".split( splitreg ); p++;
pieces[ p ] = "10,22,18,13".split( splitreg ); p++;
pieces[ p ] = "11,11,20,15".split( splitreg ); p++;
pieces[ p ] = "11,11,20,22".split( splitreg ); p++;
pieces[ p ] = "11,11,22,21".split( splitreg ); p++;
pieces[ p ] = "11,14,18,14".split( splitreg ); p++;
pieces[ p ] = "11,16,11,17".split( splitreg ); p++;
pieces[ p ] = "11,17,13,14".split( splitreg ); p++;
pieces[ p ] = "11,18,11,22".split( splitreg ); p++;
pieces[ p ] = "11,18,16,13".split( splitreg ); p++;
pieces[ p ] = "11,18,21,19".split( splitreg ); p++;
pieces[ p ] = "11,19,13,18".split( splitreg ); p++;
pieces[ p ] = "11,20,12,14".split( splitreg ); p++;
pieces[ p ] = "11,21,16,19".split( splitreg ); p++;
pieces[ p ] = "12,12,15,22".split( splitreg ); p++;
pieces[ p ] = "12,12,20,15".split( splitreg ); p++;
pieces[ p ] = "12,14,17,16".split( splitreg ); p++;
pieces[ p ] = "12,15,18,21".split( splitreg ); p++;
pieces[ p ] = "12,16,12,17".split( splitreg ); p++;
pieces[ p ] = "12,16,13,17".split( splitreg ); p++;
pieces[ p ] = "12,17,15,21".split( splitreg ); p++;
pieces[ p ] = "12,18,13,18".split( splitreg ); p++;
pieces[ p ] = "12,18,19,17".split( splitreg ); p++;
pieces[ p ] = "12,19,19,19".split( splitreg ); p++;
pieces[ p ] = "12,20,14,15".split( splitreg ); p++;
pieces[ p ] = "12,20,15,18".split( splitreg ); p++;
pieces[ p ] = "12,20,20,19".split( splitreg ); p++;
pieces[ p ] = "12,21,14,20".split( splitreg ); p++;
pieces[ p ] = "12,21,19,15".split( splitreg ); p++;
pieces[ p ] = "13,13,17,20".split( splitreg ); p++;
pieces[ p ] = "13,15,21,18".split( splitreg ); p++;
pieces[ p ] = "13,17,17,21".split( splitreg ); p++;
pieces[ p ] = "13,21,17,20".split( splitreg ); p++;
pieces[ p ] = "13,21,18,20".split( splitreg ); p++;
pieces[ p ] = "14,14,16,15".split( splitreg ); p++;
pieces[ p ] = "14,14,16,16".split( splitreg ); p++;
pieces[ p ] = "14,17,14,20".split( splitreg ); p++;
pieces[ p ] = "14,17,20,20".split( splitreg ); p++;
pieces[ p ] = "14,17,22,22".split( splitreg ); p++;
pieces[ p ] = "14,18,14,20".split( splitreg ); p++;
pieces[ p ] = "14,18,21,21".split( splitreg ); p++;
pieces[ p ] = "14,19,22,21".split( splitreg ); p++;
pieces[ p ] = "14,20,18,18".split( splitreg ); p++;
pieces[ p ] = "15,15,22,22".split( splitreg ); p++;
pieces[ p ] = "15,18,17,22".split( splitreg ); p++;
pieces[ p ] = "15,19,15,20".split( splitreg ); p++;
pieces[ p ] = "15,22,16,18".split( splitreg ); p++;
pieces[ p ] = "15,22,19,20".split( splitreg ); p++;
pieces[ p ] = "16,21,19,18".split( splitreg ); p++;
pieces[ p ] = "20,22,22,22".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

