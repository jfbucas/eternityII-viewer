
puzzles[ nb_puzzles ] = "brendan/pieces_14x13.txt.js,Brendan 14x13".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_14x13.txt.js" ) {

board_w = 14;
board_h = 13;


pieces[ p ] = "0,0,1,2".split( splitreg ); p++;
pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,0,2,4".split( splitreg ); p++;
pieces[ p ] = "0,0,4,1".split( splitreg ); p++;
pieces[ p ] = "0,1,6,3".split( splitreg ); p++;
pieces[ p ] = "0,1,9,1".split( splitreg ); p++;
pieces[ p ] = "0,1,11,2".split( splitreg ); p++;
pieces[ p ] = "0,1,11,4".split( splitreg ); p++;
pieces[ p ] = "0,1,12,2".split( splitreg ); p++;
pieces[ p ] = "0,1,14,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,5".split( splitreg ); p++;
pieces[ p ] = "0,1,15,2".split( splitreg ); p++;
pieces[ p ] = "0,1,18,3".split( splitreg ); p++;
pieces[ p ] = "0,2,6,1".split( splitreg ); p++;
pieces[ p ] = "0,2,12,3".split( splitreg ); p++;
pieces[ p ] = "0,2,12,5".split( splitreg ); p++;
pieces[ p ] = "0,2,15,1".split( splitreg ); p++;
pieces[ p ] = "0,2,15,4".split( splitreg ); p++;
pieces[ p ] = "0,2,16,1".split( splitreg ); p++;
pieces[ p ] = "0,2,18,2".split( splitreg ); p++;
pieces[ p ] = "0,2,19,3".split( splitreg ); p++;
pieces[ p ] = "0,3,7,5".split( splitreg ); p++;
pieces[ p ] = "0,3,8,4".split( splitreg ); p++;
pieces[ p ] = "0,3,9,2".split( splitreg ); p++;
pieces[ p ] = "0,3,9,5".split( splitreg ); p++;
pieces[ p ] = "0,3,10,4".split( splitreg ); p++;
pieces[ p ] = "0,3,11,4".split( splitreg ); p++;
pieces[ p ] = "0,3,12,4".split( splitreg ); p++;
pieces[ p ] = "0,3,13,3".split( splitreg ); p++;
pieces[ p ] = "0,3,17,1".split( splitreg ); p++;
pieces[ p ] = "0,3,17,2".split( splitreg ); p++;
pieces[ p ] = "0,4,6,5".split( splitreg ); p++;
pieces[ p ] = "0,4,9,1".split( splitreg ); p++;
pieces[ p ] = "0,4,11,1".split( splitreg ); p++;
pieces[ p ] = "0,4,11,2".split( splitreg ); p++;
pieces[ p ] = "0,4,11,4".split( splitreg ); p++;
pieces[ p ] = "0,4,12,5".split( splitreg ); p++;
pieces[ p ] = "0,4,15,5".split( splitreg ); p++;
pieces[ p ] = "0,4,18,3".split( splitreg ); p++;
pieces[ p ] = "0,4,19,4".split( splitreg ); p++;
pieces[ p ] = "0,5,8,5".split( splitreg ); p++;
pieces[ p ] = "0,5,9,2".split( splitreg ); p++;
pieces[ p ] = "0,5,12,3".split( splitreg ); p++;
pieces[ p ] = "0,5,13,1".split( splitreg ); p++;
pieces[ p ] = "0,5,13,3".split( splitreg ); p++;
pieces[ p ] = "0,5,14,4".split( splitreg ); p++;
pieces[ p ] = "0,5,16,2".split( splitreg ); p++;
pieces[ p ] = "0,5,17,5".split( splitreg ); p++;
pieces[ p ] = "0,5,18,1".split( splitreg ); p++;
pieces[ p ] = "0,5,18,5".split( splitreg ); p++;
pieces[ p ] = "6,6,8,19".split( splitreg ); p++;
pieces[ p ] = "6,7,6,10".split( splitreg ); p++;
pieces[ p ] = "6,7,9,12".split( splitreg ); p++;
pieces[ p ] = "6,7,10,7".split( splitreg ); p++;
pieces[ p ] = "6,7,13,16".split( splitreg ); p++;
pieces[ p ] = "6,7,15,15".split( splitreg ); p++;
pieces[ p ] = "6,8,7,10".split( splitreg ); p++;
pieces[ p ] = "6,8,9,9".split( splitreg ); p++;
pieces[ p ] = "6,8,12,13".split( splitreg ); p++;
pieces[ p ] = "6,9,7,18".split( splitreg ); p++;
pieces[ p ] = "6,9,11,10".split( splitreg ); p++;
pieces[ p ] = "6,9,16,17".split( splitreg ); p++;
pieces[ p ] = "6,9,17,7".split( splitreg ); p++;
pieces[ p ] = "6,10,8,10".split( splitreg ); p++;
pieces[ p ] = "6,10,11,8".split( splitreg ); p++;
pieces[ p ] = "6,10,17,7".split( splitreg ); p++;
pieces[ p ] = "6,10,19,10".split( splitreg ); p++;
pieces[ p ] = "6,11,14,8".split( splitreg ); p++;
pieces[ p ] = "6,11,19,13".split( splitreg ); p++;
pieces[ p ] = "6,12,8,11".split( splitreg ); p++;
pieces[ p ] = "6,12,9,10".split( splitreg ); p++;
pieces[ p ] = "6,12,18,17".split( splitreg ); p++;
pieces[ p ] = "6,12,19,10".split( splitreg ); p++;
pieces[ p ] = "6,13,12,12".split( splitreg ); p++;
pieces[ p ] = "6,14,8,7".split( splitreg ); p++;
pieces[ p ] = "6,14,9,15".split( splitreg ); p++;
pieces[ p ] = "6,14,17,19".split( splitreg ); p++;
pieces[ p ] = "6,15,12,16".split( splitreg ); p++;
pieces[ p ] = "6,16,7,9".split( splitreg ); p++;
pieces[ p ] = "6,16,8,15".split( splitreg ); p++;
pieces[ p ] = "6,16,12,14".split( splitreg ); p++;
pieces[ p ] = "6,16,12,16".split( splitreg ); p++;
pieces[ p ] = "6,16,13,10".split( splitreg ); p++;
pieces[ p ] = "6,16,15,18".split( splitreg ); p++;
pieces[ p ] = "6,17,12,18".split( splitreg ); p++;
pieces[ p ] = "6,17,18,17".split( splitreg ); p++;
pieces[ p ] = "6,18,16,13".split( splitreg ); p++;
pieces[ p ] = "7,7,14,12".split( splitreg ); p++;
pieces[ p ] = "7,7,16,8".split( splitreg ); p++;
pieces[ p ] = "7,8,7,10".split( splitreg ); p++;
pieces[ p ] = "7,8,10,10".split( splitreg ); p++;
pieces[ p ] = "7,8,11,8".split( splitreg ); p++;
pieces[ p ] = "7,9,7,15".split( splitreg ); p++;
pieces[ p ] = "7,9,11,9".split( splitreg ); p++;
pieces[ p ] = "7,10,11,14".split( splitreg ); p++;
pieces[ p ] = "7,11,13,9".split( splitreg ); p++;
pieces[ p ] = "7,12,8,19".split( splitreg ); p++;
pieces[ p ] = "7,13,9,11".split( splitreg ); p++;
pieces[ p ] = "7,13,15,14".split( splitreg ); p++;
pieces[ p ] = "7,14,7,18".split( splitreg ); p++;
pieces[ p ] = "7,15,13,13".split( splitreg ); p++;
pieces[ p ] = "7,15,14,19".split( splitreg ); p++;
pieces[ p ] = "7,16,12,17".split( splitreg ); p++;
pieces[ p ] = "7,16,19,17".split( splitreg ); p++;
pieces[ p ] = "7,16,19,19".split( splitreg ); p++;
pieces[ p ] = "7,17,15,17".split( splitreg ); p++;
pieces[ p ] = "7,17,17,9".split( splitreg ); p++;
pieces[ p ] = "7,17,18,17".split( splitreg ); p++;
pieces[ p ] = "7,18,7,19".split( splitreg ); p++;
pieces[ p ] = "7,18,11,19".split( splitreg ); p++;
pieces[ p ] = "8,8,17,18".split( splitreg ); p++;
pieces[ p ] = "8,8,18,9".split( splitreg ); p++;
pieces[ p ] = "8,8,19,17".split( splitreg ); p++;
pieces[ p ] = "8,10,8,11".split( splitreg ); p++;
pieces[ p ] = "8,10,10,12".split( splitreg ); p++;
pieces[ p ] = "8,10,16,12".split( splitreg ); p++;
pieces[ p ] = "8,10,18,16".split( splitreg ); p++;
pieces[ p ] = "8,10,19,12".split( splitreg ); p++;
pieces[ p ] = "8,11,13,12".split( splitreg ); p++;
pieces[ p ] = "8,11,17,13".split( splitreg ); p++;
pieces[ p ] = "8,13,19,16".split( splitreg ); p++;
pieces[ p ] = "8,13,19,18".split( splitreg ); p++;
pieces[ p ] = "8,14,9,9".split( splitreg ); p++;
pieces[ p ] = "8,14,12,19".split( splitreg ); p++;
pieces[ p ] = "8,14,15,9".split( splitreg ); p++;
pieces[ p ] = "8,15,10,16".split( splitreg ); p++;
pieces[ p ] = "8,16,15,10".split( splitreg ); p++;
pieces[ p ] = "8,17,13,17".split( splitreg ); p++;
pieces[ p ] = "8,18,11,17".split( splitreg ); p++;
pieces[ p ] = "8,19,13,17".split( splitreg ); p++;
pieces[ p ] = "9,9,14,17".split( splitreg ); p++;
pieces[ p ] = "9,9,17,15".split( splitreg ); p++;
pieces[ p ] = "9,9,19,19".split( splitreg ); p++;
pieces[ p ] = "9,10,11,11".split( splitreg ); p++;
pieces[ p ] = "9,10,17,18".split( splitreg ); p++;
pieces[ p ] = "9,11,11,18".split( splitreg ); p++;
pieces[ p ] = "9,11,12,19".split( splitreg ); p++;
pieces[ p ] = "9,14,11,14".split( splitreg ); p++;
pieces[ p ] = "9,14,14,15".split( splitreg ); p++;
pieces[ p ] = "9,15,18,19".split( splitreg ); p++;
pieces[ p ] = "9,18,14,14".split( splitreg ); p++;
pieces[ p ] = "9,18,18,18".split( splitreg ); p++;
pieces[ p ] = "9,19,11,15".split( splitreg ); p++;
pieces[ p ] = "9,19,14,16".split( splitreg ); p++;
pieces[ p ] = "10,10,19,11".split( splitreg ); p++;
pieces[ p ] = "10,11,15,15".split( splitreg ); p++;
pieces[ p ] = "10,11,17,12".split( splitreg ); p++;
pieces[ p ] = "10,11,18,11".split( splitreg ); p++;
pieces[ p ] = "10,12,15,14".split( splitreg ); p++;
pieces[ p ] = "10,13,12,13".split( splitreg ); p++;
pieces[ p ] = "10,13,15,19".split( splitreg ); p++;
pieces[ p ] = "10,14,15,19".split( splitreg ); p++;
pieces[ p ] = "10,15,10,16".split( splitreg ); p++;
pieces[ p ] = "10,15,12,15".split( splitreg ); p++;
pieces[ p ] = "10,18,16,16".split( splitreg ); p++;
pieces[ p ] = "10,19,19,17".split( splitreg ); p++;
pieces[ p ] = "11,11,14,16".split( splitreg ); p++;
pieces[ p ] = "11,13,16,15".split( splitreg ); p++;
pieces[ p ] = "11,14,14,19".split( splitreg ); p++;
pieces[ p ] = "11,14,16,13".split( splitreg ); p++;
pieces[ p ] = "11,15,12,14".split( splitreg ); p++;
pieces[ p ] = "11,16,18,14".split( splitreg ); p++;
pieces[ p ] = "11,18,19,15".split( splitreg ); p++;
pieces[ p ] = "11,19,17,12".split( splitreg ); p++;
pieces[ p ] = "12,13,13,13".split( splitreg ); p++;
pieces[ p ] = "12,14,15,13".split( splitreg ); p++;
pieces[ p ] = "12,14,18,13".split( splitreg ); p++;
pieces[ p ] = "12,14,19,19".split( splitreg ); p++;
pieces[ p ] = "12,16,18,17".split( splitreg ); p++;
pieces[ p ] = "12,16,19,15".split( splitreg ); p++;
pieces[ p ] = "12,17,17,14".split( splitreg ); p++;
pieces[ p ] = "12,17,17,15".split( splitreg ); p++;
pieces[ p ] = "12,18,13,14".split( splitreg ); p++;
pieces[ p ] = "13,13,13,16".split( splitreg ); p++;
pieces[ p ] = "13,13,17,19".split( splitreg ); p++;
pieces[ p ] = "13,14,15,18".split( splitreg ); p++;
pieces[ p ] = "13,16,18,15".split( splitreg ); p++;
pieces[ p ] = "13,17,15,14".split( splitreg ); p++;
pieces[ p ] = "13,18,16,14".split( splitreg ); p++;
pieces[ p ] = "15,19,18,18".split( splitreg ); p++;
pieces[ p ] = "16,16,16,19".split( splitreg ); p++;
pieces[ p ] = "16,16,18,17".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

