
puzzles[ nb_puzzles ] = "brendan/pieces_20x07.txt.js,Brendan 20x07".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_20x07.txt.js" ) {

board_w = 20;
board_h = 7;


pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,2,1".split( splitreg ); p++;
pieces[ p ] = "0,0,4,3".split( splitreg ); p++;
pieces[ p ] = "0,0,4,5".split( splitreg ); p++;
pieces[ p ] = "0,1,9,4".split( splitreg ); p++;
pieces[ p ] = "0,1,10,2".split( splitreg ); p++;
pieces[ p ] = "0,1,11,1".split( splitreg ); p++;
pieces[ p ] = "0,1,11,4".split( splitreg ); p++;
pieces[ p ] = "0,1,12,5".split( splitreg ); p++;
pieces[ p ] = "0,1,14,5".split( splitreg ); p++;
pieces[ p ] = "0,1,15,1".split( splitreg ); p++;
pieces[ p ] = "0,1,17,4".split( splitreg ); p++;
pieces[ p ] = "0,1,17,5".split( splitreg ); p++;
pieces[ p ] = "0,2,6,1".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,4".split( splitreg ); p++;
pieces[ p ] = "0,2,7,5".split( splitreg ); p++;
pieces[ p ] = "0,2,8,4".split( splitreg ); p++;
pieces[ p ] = "0,2,9,4".split( splitreg ); p++;
pieces[ p ] = "0,2,14,3".split( splitreg ); p++;
pieces[ p ] = "0,2,14,5".split( splitreg ); p++;
pieces[ p ] = "0,2,16,5".split( splitreg ); p++;
pieces[ p ] = "0,3,6,3".split( splitreg ); p++;
pieces[ p ] = "0,3,7,2".split( splitreg ); p++;
pieces[ p ] = "0,3,9,4".split( splitreg ); p++;
pieces[ p ] = "0,3,9,5".split( splitreg ); p++;
pieces[ p ] = "0,3,11,2".split( splitreg ); p++;
pieces[ p ] = "0,3,13,1".split( splitreg ); p++;
pieces[ p ] = "0,3,13,3".split( splitreg ); p++;
pieces[ p ] = "0,3,14,5".split( splitreg ); p++;
pieces[ p ] = "0,3,15,3".split( splitreg ); p++;
pieces[ p ] = "0,3,16,2".split( splitreg ); p++;
pieces[ p ] = "0,4,7,5".split( splitreg ); p++;
pieces[ p ] = "0,4,10,1".split( splitreg ); p++;
pieces[ p ] = "0,4,11,2".split( splitreg ); p++;
pieces[ p ] = "0,4,11,3".split( splitreg ); p++;
pieces[ p ] = "0,4,12,1".split( splitreg ); p++;
pieces[ p ] = "0,4,12,2".split( splitreg ); p++;
pieces[ p ] = "0,4,14,1".split( splitreg ); p++;
pieces[ p ] = "0,4,16,2".split( splitreg ); p++;
pieces[ p ] = "0,5,6,3".split( splitreg ); p++;
pieces[ p ] = "0,5,7,1".split( splitreg ); p++;
pieces[ p ] = "0,5,7,3".split( splitreg ); p++;
pieces[ p ] = "0,5,12,2".split( splitreg ); p++;
pieces[ p ] = "0,5,13,4".split( splitreg ); p++;
pieces[ p ] = "0,5,14,2".split( splitreg ); p++;
pieces[ p ] = "0,5,15,4".split( splitreg ); p++;
pieces[ p ] = "0,5,16,4".split( splitreg ); p++;
pieces[ p ] = "0,5,17,1".split( splitreg ); p++;
pieces[ p ] = "0,5,17,2".split( splitreg ); p++;
pieces[ p ] = "6,6,11,12".split( splitreg ); p++;
pieces[ p ] = "6,7,15,8".split( splitreg ); p++;
pieces[ p ] = "6,8,11,17".split( splitreg ); p++;
pieces[ p ] = "6,10,16,8".split( splitreg ); p++;
pieces[ p ] = "6,10,16,12".split( splitreg ); p++;
pieces[ p ] = "6,10,16,17".split( splitreg ); p++;
pieces[ p ] = "6,10,17,11".split( splitreg ); p++;
pieces[ p ] = "6,11,7,10".split( splitreg ); p++;
pieces[ p ] = "6,11,7,14".split( splitreg ); p++;
pieces[ p ] = "6,11,9,15".split( splitreg ); p++;
pieces[ p ] = "6,11,10,13".split( splitreg ); p++;
pieces[ p ] = "6,11,11,16".split( splitreg ); p++;
pieces[ p ] = "6,11,13,8".split( splitreg ); p++;
pieces[ p ] = "6,12,13,13".split( splitreg ); p++;
pieces[ p ] = "6,13,11,9".split( splitreg ); p++;
pieces[ p ] = "6,13,13,15".split( splitreg ); p++;
pieces[ p ] = "6,14,7,15".split( splitreg ); p++;
pieces[ p ] = "6,14,7,16".split( splitreg ); p++;
pieces[ p ] = "6,14,9,11".split( splitreg ); p++;
pieces[ p ] = "6,14,9,12".split( splitreg ); p++;
pieces[ p ] = "6,14,17,16".split( splitreg ); p++;
pieces[ p ] = "6,15,8,17".split( splitreg ); p++;
pieces[ p ] = "6,15,11,12".split( splitreg ); p++;
pieces[ p ] = "6,16,8,16".split( splitreg ); p++;
pieces[ p ] = "6,16,9,10".split( splitreg ); p++;
pieces[ p ] = "6,16,11,8".split( splitreg ); p++;
pieces[ p ] = "6,16,16,17".split( splitreg ); p++;
pieces[ p ] = "6,17,8,12".split( splitreg ); p++;
pieces[ p ] = "6,17,13,15".split( splitreg ); p++;
pieces[ p ] = "6,17,15,16".split( splitreg ); p++;
pieces[ p ] = "7,7,15,17".split( splitreg ); p++;
pieces[ p ] = "7,7,17,10".split( splitreg ); p++;
pieces[ p ] = "7,8,8,14".split( splitreg ); p++;
pieces[ p ] = "7,8,13,14".split( splitreg ); p++;
pieces[ p ] = "7,8,15,12".split( splitreg ); p++;
pieces[ p ] = "7,8,17,17".split( splitreg ); p++;
pieces[ p ] = "7,9,17,11".split( splitreg ); p++;
pieces[ p ] = "7,10,8,8".split( splitreg ); p++;
pieces[ p ] = "7,10,14,15".split( splitreg ); p++;
pieces[ p ] = "7,11,13,10".split( splitreg ); p++;
pieces[ p ] = "7,12,15,10".split( splitreg ); p++;
pieces[ p ] = "7,13,8,16".split( splitreg ); p++;
pieces[ p ] = "7,13,9,14".split( splitreg ); p++;
pieces[ p ] = "7,13,14,10".split( splitreg ); p++;
pieces[ p ] = "7,14,9,10".split( splitreg ); p++;
pieces[ p ] = "7,14,10,16".split( splitreg ); p++;
pieces[ p ] = "7,16,10,12".split( splitreg ); p++;
pieces[ p ] = "7,16,16,10".split( splitreg ); p++;
pieces[ p ] = "7,17,11,8".split( splitreg ); p++;
pieces[ p ] = "7,17,15,15".split( splitreg ); p++;
pieces[ p ] = "8,8,10,11".split( splitreg ); p++;
pieces[ p ] = "8,8,12,15".split( splitreg ); p++;
pieces[ p ] = "8,9,9,14".split( splitreg ); p++;
pieces[ p ] = "8,9,10,17".split( splitreg ); p++;
pieces[ p ] = "8,9,13,15".split( splitreg ); p++;
pieces[ p ] = "8,9,14,13".split( splitreg ); p++;
pieces[ p ] = "8,10,9,9".split( splitreg ); p++;
pieces[ p ] = "8,10,14,9".split( splitreg ); p++;
pieces[ p ] = "8,11,12,9".split( splitreg ); p++;
pieces[ p ] = "8,11,14,12".split( splitreg ); p++;
pieces[ p ] = "8,11,15,15".split( splitreg ); p++;
pieces[ p ] = "8,13,10,15".split( splitreg ); p++;
pieces[ p ] = "8,17,16,13".split( splitreg ); p++;
pieces[ p ] = "8,17,17,15".split( splitreg ); p++;
pieces[ p ] = "9,9,11,17".split( splitreg ); p++;
pieces[ p ] = "9,10,13,16".split( splitreg ); p++;
pieces[ p ] = "9,12,12,12".split( splitreg ); p++;
pieces[ p ] = "9,12,12,15".split( splitreg ); p++;
pieces[ p ] = "9,12,13,12".split( splitreg ); p++;
pieces[ p ] = "9,13,16,16".split( splitreg ); p++;
pieces[ p ] = "9,14,9,16".split( splitreg ); p++;
pieces[ p ] = "9,14,14,13".split( splitreg ); p++;
pieces[ p ] = "9,15,12,10".split( splitreg ); p++;
pieces[ p ] = "9,15,13,12".split( splitreg ); p++;
pieces[ p ] = "9,16,12,12".split( splitreg ); p++;
pieces[ p ] = "10,10,16,15".split( splitreg ); p++;
pieces[ p ] = "10,12,14,15".split( splitreg ); p++;
pieces[ p ] = "10,12,17,11".split( splitreg ); p++;
pieces[ p ] = "10,13,11,12".split( splitreg ); p++;
pieces[ p ] = "10,13,13,14".split( splitreg ); p++;
pieces[ p ] = "10,14,11,12".split( splitreg ); p++;
pieces[ p ] = "10,14,17,12".split( splitreg ); p++;
pieces[ p ] = "11,13,11,16".split( splitreg ); p++;
pieces[ p ] = "11,14,16,13".split( splitreg ); p++;
pieces[ p ] = "11,16,17,14".split( splitreg ); p++;
pieces[ p ] = "12,13,16,15".split( splitreg ); p++;
pieces[ p ] = "12,15,15,15".split( splitreg ); p++;
pieces[ p ] = "13,13,16,17".split( splitreg ); p++;
pieces[ p ] = "13,14,17,17".split( splitreg ); p++;
pieces[ p ] = "14,15,15,17".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

