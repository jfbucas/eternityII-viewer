
puzzles[ nb_puzzles ] = "brendan/pieces_14x14.txt.js,Brendan 14x14".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_14x14.txt.js" ) {

board_w = 14;
board_h = 14;


pieces[ p ] = "0,0,2,5".split( splitreg ); p++;
pieces[ p ] = "0,0,3,4".split( splitreg ); p++;
pieces[ p ] = "0,0,3,5".split( splitreg ); p++;
pieces[ p ] = "0,0,5,1".split( splitreg ); p++;
pieces[ p ] = "0,1,6,3".split( splitreg ); p++;
pieces[ p ] = "0,1,9,2".split( splitreg ); p++;
pieces[ p ] = "0,1,11,1".split( splitreg ); p++;
pieces[ p ] = "0,1,11,4".split( splitreg ); p++;
pieces[ p ] = "0,1,16,2".split( splitreg ); p++;
pieces[ p ] = "0,1,16,4".split( splitreg ); p++;
pieces[ p ] = "0,1,17,4".split( splitreg ); p++;
pieces[ p ] = "0,1,17,5".split( splitreg ); p++;
pieces[ p ] = "0,1,18,2".split( splitreg ); p++;
pieces[ p ] = "0,1,19,2".split( splitreg ); p++;
pieces[ p ] = "0,1,20,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,2".split( splitreg ); p++;
pieces[ p ] = "0,2,12,5".split( splitreg ); p++;
pieces[ p ] = "0,2,13,4".split( splitreg ); p++;
pieces[ p ] = "0,2,14,1".split( splitreg ); p++;
pieces[ p ] = "0,2,14,4".split( splitreg ); p++;
pieces[ p ] = "0,2,15,4".split( splitreg ); p++;
pieces[ p ] = "0,2,16,1".split( splitreg ); p++;
pieces[ p ] = "0,2,16,2".split( splitreg ); p++;
pieces[ p ] = "0,2,17,5".split( splitreg ); p++;
pieces[ p ] = "0,2,18,1".split( splitreg ); p++;
pieces[ p ] = "0,3,11,4".split( splitreg ); p++;
pieces[ p ] = "0,3,12,1".split( splitreg ); p++;
pieces[ p ] = "0,3,13,1".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,16,3".split( splitreg ); p++;
pieces[ p ] = "0,3,18,3".split( splitreg ); p++;
pieces[ p ] = "0,3,18,5".split( splitreg ); p++;
pieces[ p ] = "0,3,20,2".split( splitreg ); p++;
pieces[ p ] = "0,4,9,5".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,12,4".split( splitreg ); p++;
pieces[ p ] = "0,4,14,3".split( splitreg ); p++;
pieces[ p ] = "0,4,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,15,2".split( splitreg ); p++;
pieces[ p ] = "0,4,15,3".split( splitreg ); p++;
pieces[ p ] = "0,4,17,3".split( splitreg ); p++;
pieces[ p ] = "0,4,18,5".split( splitreg ); p++;
pieces[ p ] = "0,4,19,3".split( splitreg ); p++;
pieces[ p ] = "0,5,6,3".split( splitreg ); p++;
pieces[ p ] = "0,5,7,1".split( splitreg ); p++;
pieces[ p ] = "0,5,7,5".split( splitreg ); p++;
pieces[ p ] = "0,5,9,3".split( splitreg ); p++;
pieces[ p ] = "0,5,10,2".split( splitreg ); p++;
pieces[ p ] = "0,5,10,5".split( splitreg ); p++;
pieces[ p ] = "0,5,14,1".split( splitreg ); p++;
pieces[ p ] = "0,5,15,1".split( splitreg ); p++;
pieces[ p ] = "0,5,16,4".split( splitreg ); p++;
pieces[ p ] = "6,6,8,7".split( splitreg ); p++;
pieces[ p ] = "6,6,8,19".split( splitreg ); p++;
pieces[ p ] = "6,6,12,14".split( splitreg ); p++;
pieces[ p ] = "6,6,13,18".split( splitreg ); p++;
pieces[ p ] = "6,6,17,19".split( splitreg ); p++;
pieces[ p ] = "6,7,8,11".split( splitreg ); p++;
pieces[ p ] = "6,7,19,9".split( splitreg ); p++;
pieces[ p ] = "6,7,19,14".split( splitreg ); p++;
pieces[ p ] = "6,8,19,18".split( splitreg ); p++;
pieces[ p ] = "6,9,9,18".split( splitreg ); p++;
pieces[ p ] = "6,9,11,16".split( splitreg ); p++;
pieces[ p ] = "6,9,17,10".split( splitreg ); p++;
pieces[ p ] = "6,9,19,11".split( splitreg ); p++;
pieces[ p ] = "6,10,7,10".split( splitreg ); p++;
pieces[ p ] = "6,10,11,8".split( splitreg ); p++;
pieces[ p ] = "6,10,13,18".split( splitreg ); p++;
pieces[ p ] = "6,10,16,20".split( splitreg ); p++;
pieces[ p ] = "6,10,18,14".split( splitreg ); p++;
pieces[ p ] = "6,11,8,14".split( splitreg ); p++;
pieces[ p ] = "6,11,9,7".split( splitreg ); p++;
pieces[ p ] = "6,11,16,11".split( splitreg ); p++;
pieces[ p ] = "6,12,12,19".split( splitreg ); p++;
pieces[ p ] = "6,12,14,8".split( splitreg ); p++;
pieces[ p ] = "6,12,15,10".split( splitreg ); p++;
pieces[ p ] = "6,12,15,17".split( splitreg ); p++;
pieces[ p ] = "6,13,12,19".split( splitreg ); p++;
pieces[ p ] = "6,13,14,17".split( splitreg ); p++;
pieces[ p ] = "6,13,19,17".split( splitreg ); p++;
pieces[ p ] = "6,13,19,18".split( splitreg ); p++;
pieces[ p ] = "6,13,20,12".split( splitreg ); p++;
pieces[ p ] = "6,16,9,10".split( splitreg ); p++;
pieces[ p ] = "6,16,10,8".split( splitreg ); p++;
pieces[ p ] = "6,19,9,14".split( splitreg ); p++;
pieces[ p ] = "6,19,19,12".split( splitreg ); p++;
pieces[ p ] = "6,20,9,20".split( splitreg ); p++;
pieces[ p ] = "7,7,14,8".split( splitreg ); p++;
pieces[ p ] = "7,7,15,16".split( splitreg ); p++;
pieces[ p ] = "7,8,10,12".split( splitreg ); p++;
pieces[ p ] = "7,8,11,14".split( splitreg ); p++;
pieces[ p ] = "7,8,18,20".split( splitreg ); p++;
pieces[ p ] = "7,9,15,8".split( splitreg ); p++;
pieces[ p ] = "7,9,15,16".split( splitreg ); p++;
pieces[ p ] = "7,10,8,12".split( splitreg ); p++;
pieces[ p ] = "7,10,13,17".split( splitreg ); p++;
pieces[ p ] = "7,11,11,20".split( splitreg ); p++;
pieces[ p ] = "7,11,12,15".split( splitreg ); p++;
pieces[ p ] = "7,11,16,15".split( splitreg ); p++;
pieces[ p ] = "7,12,10,11".split( splitreg ); p++;
pieces[ p ] = "7,12,13,13".split( splitreg ); p++;
pieces[ p ] = "7,12,15,17".split( splitreg ); p++;
pieces[ p ] = "7,13,9,15".split( splitreg ); p++;
pieces[ p ] = "7,13,12,8".split( splitreg ); p++;
pieces[ p ] = "7,13,19,8".split( splitreg ); p++;
pieces[ p ] = "7,14,18,16".split( splitreg ); p++;
pieces[ p ] = "7,15,16,17".split( splitreg ); p++;
pieces[ p ] = "7,15,18,11".split( splitreg ); p++;
pieces[ p ] = "7,16,20,9".split( splitreg ); p++;
pieces[ p ] = "7,17,17,17".split( splitreg ); p++;
pieces[ p ] = "7,17,20,11".split( splitreg ); p++;
pieces[ p ] = "7,18,7,20".split( splitreg ); p++;
pieces[ p ] = "7,18,10,11".split( splitreg ); p++;
pieces[ p ] = "7,18,19,14".split( splitreg ); p++;
pieces[ p ] = "7,18,19,20".split( splitreg ); p++;
pieces[ p ] = "7,19,14,20".split( splitreg ); p++;
pieces[ p ] = "7,19,19,20".split( splitreg ); p++;
pieces[ p ] = "8,8,9,19".split( splitreg ); p++;
pieces[ p ] = "8,8,20,12".split( splitreg ); p++;
pieces[ p ] = "8,9,8,12".split( splitreg ); p++;
pieces[ p ] = "8,9,11,16".split( splitreg ); p++;
pieces[ p ] = "8,9,13,12".split( splitreg ); p++;
pieces[ p ] = "8,9,14,13".split( splitreg ); p++;
pieces[ p ] = "8,9,18,14".split( splitreg ); p++;
pieces[ p ] = "8,9,20,13".split( splitreg ); p++;
pieces[ p ] = "8,10,16,14".split( splitreg ); p++;
pieces[ p ] = "8,11,17,20".split( splitreg ); p++;
pieces[ p ] = "8,11,18,10".split( splitreg ); p++;
pieces[ p ] = "8,12,9,20".split( splitreg ); p++;
pieces[ p ] = "8,13,20,9".split( splitreg ); p++;
pieces[ p ] = "8,15,10,16".split( splitreg ); p++;
pieces[ p ] = "8,15,19,11".split( splitreg ); p++;
pieces[ p ] = "8,16,9,13".split( splitreg ); p++;
pieces[ p ] = "8,17,18,17".split( splitreg ); p++;
pieces[ p ] = "8,18,15,12".split( splitreg ); p++;
pieces[ p ] = "8,18,20,13".split( splitreg ); p++;
pieces[ p ] = "8,19,11,17".split( splitreg ); p++;
pieces[ p ] = "8,19,13,15".split( splitreg ); p++;
pieces[ p ] = "8,19,14,12".split( splitreg ); p++;
pieces[ p ] = "8,20,13,13".split( splitreg ); p++;
pieces[ p ] = "9,9,15,11".split( splitreg ); p++;
pieces[ p ] = "9,11,19,10".split( splitreg ); p++;
pieces[ p ] = "9,12,12,20".split( splitreg ); p++;
pieces[ p ] = "9,12,16,13".split( splitreg ); p++;
pieces[ p ] = "9,13,15,20".split( splitreg ); p++;
pieces[ p ] = "9,14,9,15".split( splitreg ); p++;
pieces[ p ] = "9,15,16,20".split( splitreg ); p++;
pieces[ p ] = "9,16,13,10".split( splitreg ); p++;
pieces[ p ] = "9,17,16,10".split( splitreg ); p++;
pieces[ p ] = "9,17,18,14".split( splitreg ); p++;
pieces[ p ] = "9,18,14,17".split( splitreg ); p++;
pieces[ p ] = "9,19,10,12".split( splitreg ); p++;
pieces[ p ] = "9,20,16,11".split( splitreg ); p++;
pieces[ p ] = "10,10,11,11".split( splitreg ); p++;
pieces[ p ] = "10,10,12,13".split( splitreg ); p++;
pieces[ p ] = "10,13,10,20".split( splitreg ); p++;
pieces[ p ] = "10,13,12,15".split( splitreg ); p++;
pieces[ p ] = "10,13,17,20".split( splitreg ); p++;
pieces[ p ] = "10,14,20,17".split( splitreg ); p++;
pieces[ p ] = "10,15,14,11".split( splitreg ); p++;
pieces[ p ] = "10,16,14,15".split( splitreg ); p++;
pieces[ p ] = "10,16,18,15".split( splitreg ); p++;
pieces[ p ] = "10,17,14,11".split( splitreg ); p++;
pieces[ p ] = "10,17,15,15".split( splitreg ); p++;
pieces[ p ] = "10,17,19,17".split( splitreg ); p++;
pieces[ p ] = "10,19,11,13".split( splitreg ); p++;
pieces[ p ] = "10,19,17,16".split( splitreg ); p++;
pieces[ p ] = "11,11,12,15".split( splitreg ); p++;
pieces[ p ] = "11,11,18,15".split( splitreg ); p++;
pieces[ p ] = "11,13,16,12".split( splitreg ); p++;
pieces[ p ] = "11,14,18,14".split( splitreg ); p++;
pieces[ p ] = "11,15,16,16".split( splitreg ); p++;
pieces[ p ] = "11,19,14,20".split( splitreg ); p++;
pieces[ p ] = "11,20,17,14".split( splitreg ); p++;
pieces[ p ] = "12,12,14,17".split( splitreg ); p++;
pieces[ p ] = "12,12,16,18".split( splitreg ); p++;
pieces[ p ] = "12,15,15,13".split( splitreg ); p++;
pieces[ p ] = "12,15,18,20".split( splitreg ); p++;
pieces[ p ] = "12,17,14,16".split( splitreg ); p++;
pieces[ p ] = "12,17,19,18".split( splitreg ); p++;
pieces[ p ] = "12,20,16,20".split( splitreg ); p++;
pieces[ p ] = "13,13,16,20".split( splitreg ); p++;
pieces[ p ] = "13,13,20,14".split( splitreg ); p++;
pieces[ p ] = "13,15,15,18".split( splitreg ); p++;
pieces[ p ] = "13,18,19,18".split( splitreg ); p++;
pieces[ p ] = "13,19,19,16".split( splitreg ); p++;
pieces[ p ] = "13,20,16,17".split( splitreg ); p++;
pieces[ p ] = "14,15,17,19".split( splitreg ); p++;
pieces[ p ] = "14,17,16,17".split( splitreg ); p++;
pieces[ p ] = "14,17,16,18".split( splitreg ); p++;
pieces[ p ] = "14,17,18,18".split( splitreg ); p++;
pieces[ p ] = "14,18,17,19".split( splitreg ); p++;
pieces[ p ] = "14,20,16,16".split( splitreg ); p++;
pieces[ p ] = "14,20,18,18".split( splitreg ); p++;
pieces[ p ] = "15,15,15,20".split( splitreg ); p++;
pieces[ p ] = "17,19,20,19".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

