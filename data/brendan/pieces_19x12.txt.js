
puzzles[ nb_puzzles ] = "brendan/pieces_19x12.txt.js,Brendan 19x12".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_19x12.txt.js" ) {

board_w = 19;
board_h = 12;


pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,0,5,1".split( splitreg ); p++;
pieces[ p ] = "0,0,5,4".split( splitreg ); p++;
pieces[ p ] = "0,1,8,3".split( splitreg ); p++;
pieces[ p ] = "0,1,12,5".split( splitreg ); p++;
pieces[ p ] = "0,1,13,2".split( splitreg ); p++;
pieces[ p ] = "0,1,13,4".split( splitreg ); p++;
pieces[ p ] = "0,1,14,4".split( splitreg ); p++;
pieces[ p ] = "0,1,16,1".split( splitreg ); p++;
pieces[ p ] = "0,1,16,4".split( splitreg ); p++;
pieces[ p ] = "0,1,17,3".split( splitreg ); p++;
pieces[ p ] = "0,1,17,5".split( splitreg ); p++;
pieces[ p ] = "0,1,18,1".split( splitreg ); p++;
pieces[ p ] = "0,1,20,2".split( splitreg ); p++;
pieces[ p ] = "0,2,6,1".split( splitreg ); p++;
pieces[ p ] = "0,2,8,4".split( splitreg ); p++;
pieces[ p ] = "0,2,10,3".split( splitreg ); p++;
pieces[ p ] = "0,2,10,5".split( splitreg ); p++;
pieces[ p ] = "0,2,11,3".split( splitreg ); p++;
pieces[ p ] = "0,2,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,13,5".split( splitreg ); p++;
pieces[ p ] = "0,2,17,2".split( splitreg ); p++;
pieces[ p ] = "0,2,17,5".split( splitreg ); p++;
pieces[ p ] = "0,2,18,1".split( splitreg ); p++;
pieces[ p ] = "0,2,19,5".split( splitreg ); p++;
pieces[ p ] = "0,2,21,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,5".split( splitreg ); p++;
pieces[ p ] = "0,3,8,1".split( splitreg ); p++;
pieces[ p ] = "0,3,10,2".split( splitreg ); p++;
pieces[ p ] = "0,3,11,3".split( splitreg ); p++;
pieces[ p ] = "0,3,12,1".split( splitreg ); p++;
pieces[ p ] = "0,3,12,2".split( splitreg ); p++;
pieces[ p ] = "0,3,12,3".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,15,2".split( splitreg ); p++;
pieces[ p ] = "0,3,15,5".split( splitreg ); p++;
pieces[ p ] = "0,3,18,2".split( splitreg ); p++;
pieces[ p ] = "0,3,21,5".split( splitreg ); p++;
pieces[ p ] = "0,4,6,3".split( splitreg ); p++;
pieces[ p ] = "0,4,10,4".split( splitreg ); p++;
pieces[ p ] = "0,4,11,1".split( splitreg ); p++;
pieces[ p ] = "0,4,11,4".split( splitreg ); p++;
pieces[ p ] = "0,4,12,2".split( splitreg ); p++;
pieces[ p ] = "0,4,12,5".split( splitreg ); p++;
pieces[ p ] = "0,4,17,5".split( splitreg ); p++;
pieces[ p ] = "0,4,19,3".split( splitreg ); p++;
pieces[ p ] = "0,4,20,3".split( splitreg ); p++;
pieces[ p ] = "0,4,21,1".split( splitreg ); p++;
pieces[ p ] = "0,5,9,4".split( splitreg ); p++;
pieces[ p ] = "0,5,12,2".split( splitreg ); p++;
pieces[ p ] = "0,5,13,1".split( splitreg ); p++;
pieces[ p ] = "0,5,13,4".split( splitreg ); p++;
pieces[ p ] = "0,5,14,1".split( splitreg ); p++;
pieces[ p ] = "0,5,14,2".split( splitreg ); p++;
pieces[ p ] = "0,5,18,4".split( splitreg ); p++;
pieces[ p ] = "0,5,19,3".split( splitreg ); p++;
pieces[ p ] = "0,5,20,2".split( splitreg ); p++;
pieces[ p ] = "6,6,6,9".split( splitreg ); p++;
pieces[ p ] = "6,6,7,10".split( splitreg ); p++;
pieces[ p ] = "6,6,12,10".split( splitreg ); p++;
pieces[ p ] = "6,6,21,17".split( splitreg ); p++;
pieces[ p ] = "6,7,9,7".split( splitreg ); p++;
pieces[ p ] = "6,7,20,10".split( splitreg ); p++;
pieces[ p ] = "6,8,13,9".split( splitreg ); p++;
pieces[ p ] = "6,8,15,19".split( splitreg ); p++;
pieces[ p ] = "6,9,11,16".split( splitreg ); p++;
pieces[ p ] = "6,9,12,11".split( splitreg ); p++;
pieces[ p ] = "6,9,15,13".split( splitreg ); p++;
pieces[ p ] = "6,9,17,10".split( splitreg ); p++;
pieces[ p ] = "6,10,8,12".split( splitreg ); p++;
pieces[ p ] = "6,10,15,13".split( splitreg ); p++;
pieces[ p ] = "6,10,16,18".split( splitreg ); p++;
pieces[ p ] = "6,10,18,9".split( splitreg ); p++;
pieces[ p ] = "6,10,20,13".split( splitreg ); p++;
pieces[ p ] = "6,11,8,16".split( splitreg ); p++;
pieces[ p ] = "6,11,13,16".split( splitreg ); p++;
pieces[ p ] = "6,12,7,13".split( splitreg ); p++;
pieces[ p ] = "6,12,8,20".split( splitreg ); p++;
pieces[ p ] = "6,12,13,9".split( splitreg ); p++;
pieces[ p ] = "6,12,19,11".split( splitreg ); p++;
pieces[ p ] = "6,12,21,7".split( splitreg ); p++;
pieces[ p ] = "6,13,7,17".split( splitreg ); p++;
pieces[ p ] = "6,14,6,21".split( splitreg ); p++;
pieces[ p ] = "6,15,8,8".split( splitreg ); p++;
pieces[ p ] = "6,15,12,14".split( splitreg ); p++;
pieces[ p ] = "6,15,14,7".split( splitreg ); p++;
pieces[ p ] = "6,15,20,18".split( splitreg ); p++;
pieces[ p ] = "6,17,15,19".split( splitreg ); p++;
pieces[ p ] = "6,17,20,20".split( splitreg ); p++;
pieces[ p ] = "6,18,7,7".split( splitreg ); p++;
pieces[ p ] = "6,18,9,17".split( splitreg ); p++;
pieces[ p ] = "6,18,16,17".split( splitreg ); p++;
pieces[ p ] = "6,20,9,19".split( splitreg ); p++;
pieces[ p ] = "6,20,19,19".split( splitreg ); p++;
pieces[ p ] = "7,8,7,17".split( splitreg ); p++;
pieces[ p ] = "7,8,10,18".split( splitreg ); p++;
pieces[ p ] = "7,8,13,9".split( splitreg ); p++;
pieces[ p ] = "7,8,19,8".split( splitreg ); p++;
pieces[ p ] = "7,8,21,13".split( splitreg ); p++;
pieces[ p ] = "7,9,8,17".split( splitreg ); p++;
pieces[ p ] = "7,9,13,19".split( splitreg ); p++;
pieces[ p ] = "7,9,19,11".split( splitreg ); p++;
pieces[ p ] = "7,9,19,17".split( splitreg ); p++;
pieces[ p ] = "7,9,21,9".split( splitreg ); p++;
pieces[ p ] = "7,9,21,20".split( splitreg ); p++;
pieces[ p ] = "7,10,10,17".split( splitreg ); p++;
pieces[ p ] = "7,10,15,17".split( splitreg ); p++;
pieces[ p ] = "7,10,16,9".split( splitreg ); p++;
pieces[ p ] = "7,10,20,14".split( splitreg ); p++;
pieces[ p ] = "7,11,17,21".split( splitreg ); p++;
pieces[ p ] = "7,12,7,14".split( splitreg ); p++;
pieces[ p ] = "7,13,20,18".split( splitreg ); p++;
pieces[ p ] = "7,14,16,19".split( splitreg ); p++;
pieces[ p ] = "7,15,11,14".split( splitreg ); p++;
pieces[ p ] = "7,16,7,18".split( splitreg ); p++;
pieces[ p ] = "7,16,10,16".split( splitreg ); p++;
pieces[ p ] = "7,16,16,14".split( splitreg ); p++;
pieces[ p ] = "7,17,11,9".split( splitreg ); p++;
pieces[ p ] = "7,18,8,21".split( splitreg ); p++;
pieces[ p ] = "7,18,13,9".split( splitreg ); p++;
pieces[ p ] = "7,18,17,16".split( splitreg ); p++;
pieces[ p ] = "7,18,19,13".split( splitreg ); p++;
pieces[ p ] = "7,19,8,10".split( splitreg ); p++;
pieces[ p ] = "7,19,13,14".split( splitreg ); p++;
pieces[ p ] = "7,19,14,11".split( splitreg ); p++;
pieces[ p ] = "7,20,18,17".split( splitreg ); p++;
pieces[ p ] = "7,21,11,12".split( splitreg ); p++;
pieces[ p ] = "8,8,13,21".split( splitreg ); p++;
pieces[ p ] = "8,8,16,19".split( splitreg ); p++;
pieces[ p ] = "8,8,18,13".split( splitreg ); p++;
pieces[ p ] = "8,8,21,9".split( splitreg ); p++;
pieces[ p ] = "8,9,8,15".split( splitreg ); p++;
pieces[ p ] = "8,11,8,20".split( splitreg ); p++;
pieces[ p ] = "8,11,11,11".split( splitreg ); p++;
pieces[ p ] = "8,11,18,19".split( splitreg ); p++;
pieces[ p ] = "8,11,19,11".split( splitreg ); p++;
pieces[ p ] = "8,13,11,9".split( splitreg ); p++;
pieces[ p ] = "8,14,12,17".split( splitreg ); p++;
pieces[ p ] = "8,14,13,14".split( splitreg ); p++;
pieces[ p ] = "8,14,16,10".split( splitreg ); p++;
pieces[ p ] = "8,15,12,15".split( splitreg ); p++;
pieces[ p ] = "8,16,15,20".split( splitreg ); p++;
pieces[ p ] = "8,19,10,11".split( splitreg ); p++;
pieces[ p ] = "8,19,15,15".split( splitreg ); p++;
pieces[ p ] = "8,19,20,13".split( splitreg ); p++;
pieces[ p ] = "8,19,21,14".split( splitreg ); p++;
pieces[ p ] = "8,20,17,12".split( splitreg ); p++;
pieces[ p ] = "8,20,19,12".split( splitreg ); p++;
pieces[ p ] = "9,9,9,21".split( splitreg ); p++;
pieces[ p ] = "9,12,18,15".split( splitreg ); p++;
pieces[ p ] = "9,13,11,14".split( splitreg ); p++;
pieces[ p ] = "9,13,11,21".split( splitreg ); p++;
pieces[ p ] = "9,13,21,10".split( splitreg ); p++;
pieces[ p ] = "9,14,14,13".split( splitreg ); p++;
pieces[ p ] = "9,14,16,18".split( splitreg ); p++;
pieces[ p ] = "9,15,13,15".split( splitreg ); p++;
pieces[ p ] = "9,15,16,15".split( splitreg ); p++;
pieces[ p ] = "9,15,16,17".split( splitreg ); p++;
pieces[ p ] = "9,16,14,16".split( splitreg ); p++;
pieces[ p ] = "9,16,16,19".split( splitreg ); p++;
pieces[ p ] = "9,17,14,15".split( splitreg ); p++;
pieces[ p ] = "9,18,16,14".split( splitreg ); p++;
pieces[ p ] = "9,20,13,10".split( splitreg ); p++;
pieces[ p ] = "9,20,21,19".split( splitreg ); p++;
pieces[ p ] = "9,21,12,11".split( splitreg ); p++;
pieces[ p ] = "9,21,18,14".split( splitreg ); p++;
pieces[ p ] = "10,11,20,12".split( splitreg ); p++;
pieces[ p ] = "10,12,14,15".split( splitreg ); p++;
pieces[ p ] = "10,13,15,18".split( splitreg ); p++;
pieces[ p ] = "10,13,16,12".split( splitreg ); p++;
pieces[ p ] = "10,13,18,14".split( splitreg ); p++;
pieces[ p ] = "10,14,13,13".split( splitreg ); p++;
pieces[ p ] = "10,14,17,18".split( splitreg ); p++;
pieces[ p ] = "10,14,17,19".split( splitreg ); p++;
pieces[ p ] = "10,14,21,15".split( splitreg ); p++;
pieces[ p ] = "10,15,12,16".split( splitreg ); p++;
pieces[ p ] = "10,15,18,21".split( splitreg ); p++;
pieces[ p ] = "10,16,15,21".split( splitreg ); p++;
pieces[ p ] = "10,17,21,11".split( splitreg ); p++;
pieces[ p ] = "10,18,14,12".split( splitreg ); p++;
pieces[ p ] = "10,18,16,18".split( splitreg ); p++;
pieces[ p ] = "10,18,16,19".split( splitreg ); p++;
pieces[ p ] = "10,19,12,19".split( splitreg ); p++;
pieces[ p ] = "10,19,20,19".split( splitreg ); p++;
pieces[ p ] = "10,20,15,21".split( splitreg ); p++;
pieces[ p ] = "10,20,18,21".split( splitreg ); p++;
pieces[ p ] = "10,21,17,16".split( splitreg ); p++;
pieces[ p ] = "11,11,19,17".split( splitreg ); p++;
pieces[ p ] = "11,12,17,20".split( splitreg ); p++;
pieces[ p ] = "11,12,20,21".split( splitreg ); p++;
pieces[ p ] = "11,13,12,20".split( splitreg ); p++;
pieces[ p ] = "11,13,18,21".split( splitreg ); p++;
pieces[ p ] = "11,14,14,17".split( splitreg ); p++;
pieces[ p ] = "11,15,16,12".split( splitreg ); p++;
pieces[ p ] = "11,16,14,16".split( splitreg ); p++;
pieces[ p ] = "11,16,17,15".split( splitreg ); p++;
pieces[ p ] = "11,16,17,20".split( splitreg ); p++;
pieces[ p ] = "11,17,21,15".split( splitreg ); p++;
pieces[ p ] = "11,19,16,12".split( splitreg ); p++;
pieces[ p ] = "11,20,19,16".split( splitreg ); p++;
pieces[ p ] = "11,20,19,21".split( splitreg ); p++;
pieces[ p ] = "11,21,13,17".split( splitreg ); p++;
pieces[ p ] = "11,21,20,20".split( splitreg ); p++;
pieces[ p ] = "12,12,14,13".split( splitreg ); p++;
pieces[ p ] = "12,15,13,13".split( splitreg ); p++;
pieces[ p ] = "12,15,17,14".split( splitreg ); p++;
pieces[ p ] = "12,18,12,20".split( splitreg ); p++;
pieces[ p ] = "12,18,17,21".split( splitreg ); p++;
pieces[ p ] = "12,18,19,13".split( splitreg ); p++;
pieces[ p ] = "12,19,15,16".split( splitreg ); p++;
pieces[ p ] = "12,20,14,15".split( splitreg ); p++;
pieces[ p ] = "12,20,17,16".split( splitreg ); p++;
pieces[ p ] = "13,14,19,17".split( splitreg ); p++;
pieces[ p ] = "13,20,19,17".split( splitreg ); p++;
pieces[ p ] = "14,14,18,15".split( splitreg ); p++;
pieces[ p ] = "14,15,15,15".split( splitreg ); p++;
pieces[ p ] = "14,17,16,20".split( splitreg ); p++;
pieces[ p ] = "14,21,20,17".split( splitreg ); p++;
pieces[ p ] = "15,18,18,19".split( splitreg ); p++;
pieces[ p ] = "15,21,16,16".split( splitreg ); p++;
pieces[ p ] = "15,21,21,19".split( splitreg ); p++;
pieces[ p ] = "16,18,20,20".split( splitreg ); p++;
pieces[ p ] = "16,20,17,19".split( splitreg ); p++;
pieces[ p ] = "17,18,18,20".split( splitreg ); p++;
pieces[ p ] = "17,21,20,18".split( splitreg ); p++;
pieces[ p ] = "18,19,21,21".split( splitreg ); p++;
pieces[ p ] = "18,21,21,20".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

