
puzzles[ nb_puzzles ] = "brendan/pieces_20x20.txt.js,Brendan 20x20".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_20x20.txt.js" ) {

board_w = 20;
board_h = 20;


pieces[ p ] = "0,0,2,1".split( splitreg ); p++;
pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,3,4".split( splitreg ); p++;
pieces[ p ] = "0,0,4,4".split( splitreg ); p++;
pieces[ p ] = "0,1,8,1".split( splitreg ); p++;
pieces[ p ] = "0,1,12,1".split( splitreg ); p++;
pieces[ p ] = "0,1,13,2".split( splitreg ); p++;
pieces[ p ] = "0,1,14,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,5".split( splitreg ); p++;
pieces[ p ] = "0,1,15,5".split( splitreg ); p++;
pieces[ p ] = "0,1,16,5".split( splitreg ); p++;
pieces[ p ] = "0,1,21,6".split( splitreg ); p++;
pieces[ p ] = "0,1,22,6".split( splitreg ); p++;
pieces[ p ] = "0,1,25,1".split( splitreg ); p++;
pieces[ p ] = "0,1,26,2".split( splitreg ); p++;
pieces[ p ] = "0,1,27,1".split( splitreg ); p++;
pieces[ p ] = "0,1,28,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,6".split( splitreg ); p++;
pieces[ p ] = "0,2,11,3".split( splitreg ); p++;
pieces[ p ] = "0,2,12,4".split( splitreg ); p++;
pieces[ p ] = "0,2,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,14,3".split( splitreg ); p++;
pieces[ p ] = "0,2,21,3".split( splitreg ); p++;
pieces[ p ] = "0,2,21,4".split( splitreg ); p++;
pieces[ p ] = "0,2,22,5".split( splitreg ); p++;
pieces[ p ] = "0,2,23,3".split( splitreg ); p++;
pieces[ p ] = "0,2,25,1".split( splitreg ); p++;
pieces[ p ] = "0,2,27,6".split( splitreg ); p++;
pieces[ p ] = "0,3,7,4".split( splitreg ); p++;
pieces[ p ] = "0,3,8,6".split( splitreg ); p++;
pieces[ p ] = "0,3,11,4".split( splitreg ); p++;
pieces[ p ] = "0,3,13,5".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,18,2".split( splitreg ); p++;
pieces[ p ] = "0,3,22,2".split( splitreg ); p++;
pieces[ p ] = "0,3,22,5".split( splitreg ); p++;
pieces[ p ] = "0,3,22,6".split( splitreg ); p++;
pieces[ p ] = "0,3,23,3".split( splitreg ); p++;
pieces[ p ] = "0,3,25,1".split( splitreg ); p++;
pieces[ p ] = "0,3,28,2".split( splitreg ); p++;
pieces[ p ] = "0,4,7,4".split( splitreg ); p++;
pieces[ p ] = "0,4,12,2".split( splitreg ); p++;
pieces[ p ] = "0,4,13,6".split( splitreg ); p++;
pieces[ p ] = "0,4,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,16,4".split( splitreg ); p++;
pieces[ p ] = "0,4,16,6".split( splitreg ); p++;
pieces[ p ] = "0,4,19,5".split( splitreg ); p++;
pieces[ p ] = "0,4,20,4".split( splitreg ); p++;
pieces[ p ] = "0,4,21,4".split( splitreg ); p++;
pieces[ p ] = "0,4,24,1".split( splitreg ); p++;
pieces[ p ] = "0,4,28,5".split( splitreg ); p++;
pieces[ p ] = "0,4,28,6".split( splitreg ); p++;
pieces[ p ] = "0,5,7,1".split( splitreg ); p++;
pieces[ p ] = "0,5,9,3".split( splitreg ); p++;
pieces[ p ] = "0,5,10,6".split( splitreg ); p++;
pieces[ p ] = "0,5,12,4".split( splitreg ); p++;
pieces[ p ] = "0,5,18,5".split( splitreg ); p++;
pieces[ p ] = "0,5,19,3".split( splitreg ); p++;
pieces[ p ] = "0,5,21,4".split( splitreg ); p++;
pieces[ p ] = "0,5,23,2".split( splitreg ); p++;
pieces[ p ] = "0,5,25,1".split( splitreg ); p++;
pieces[ p ] = "0,5,26,1".split( splitreg ); p++;
pieces[ p ] = "0,5,28,1".split( splitreg ); p++;
pieces[ p ] = "0,5,28,3".split( splitreg ); p++;
pieces[ p ] = "0,6,7,3".split( splitreg ); p++;
pieces[ p ] = "0,6,13,5".split( splitreg ); p++;
pieces[ p ] = "0,6,16,2".split( splitreg ); p++;
pieces[ p ] = "0,6,18,2".split( splitreg ); p++;
pieces[ p ] = "0,6,19,2".split( splitreg ); p++;
pieces[ p ] = "0,6,19,6".split( splitreg ); p++;
pieces[ p ] = "0,6,21,2".split( splitreg ); p++;
pieces[ p ] = "0,6,21,6".split( splitreg ); p++;
pieces[ p ] = "0,6,22,5".split( splitreg ); p++;
pieces[ p ] = "0,6,25,2".split( splitreg ); p++;
pieces[ p ] = "0,6,25,5".split( splitreg ); p++;
pieces[ p ] = "0,6,26,3".split( splitreg ); p++;
pieces[ p ] = "7,7,17,22".split( splitreg ); p++;
pieces[ p ] = "7,7,18,17".split( splitreg ); p++;
pieces[ p ] = "7,8,20,28".split( splitreg ); p++;
pieces[ p ] = "7,8,22,25".split( splitreg ); p++;
pieces[ p ] = "7,8,27,19".split( splitreg ); p++;
pieces[ p ] = "7,9,7,14".split( splitreg ); p++;
pieces[ p ] = "7,9,9,22".split( splitreg ); p++;
pieces[ p ] = "7,9,22,8".split( splitreg ); p++;
pieces[ p ] = "7,9,26,15".split( splitreg ); p++;
pieces[ p ] = "7,10,7,17".split( splitreg ); p++;
pieces[ p ] = "7,10,8,22".split( splitreg ); p++;
pieces[ p ] = "7,10,9,19".split( splitreg ); p++;
pieces[ p ] = "7,10,11,8".split( splitreg ); p++;
pieces[ p ] = "7,10,12,15".split( splitreg ); p++;
pieces[ p ] = "7,10,16,23".split( splitreg ); p++;
pieces[ p ] = "7,10,21,25".split( splitreg ); p++;
pieces[ p ] = "7,10,24,13".split( splitreg ); p++;
pieces[ p ] = "7,11,17,22".split( splitreg ); p++;
pieces[ p ] = "7,11,17,23".split( splitreg ); p++;
pieces[ p ] = "7,12,12,20".split( splitreg ); p++;
pieces[ p ] = "7,12,14,22".split( splitreg ); p++;
pieces[ p ] = "7,12,16,15".split( splitreg ); p++;
pieces[ p ] = "7,12,20,21".split( splitreg ); p++;
pieces[ p ] = "7,13,18,15".split( splitreg ); p++;
pieces[ p ] = "7,15,10,16".split( splitreg ); p++;
pieces[ p ] = "7,15,15,14".split( splitreg ); p++;
pieces[ p ] = "7,15,27,25".split( splitreg ); p++;
pieces[ p ] = "7,15,28,13".split( splitreg ); p++;
pieces[ p ] = "7,16,8,22".split( splitreg ); p++;
pieces[ p ] = "7,16,10,27".split( splitreg ); p++;
pieces[ p ] = "7,16,13,27".split( splitreg ); p++;
pieces[ p ] = "7,16,27,20".split( splitreg ); p++;
pieces[ p ] = "7,16,27,26".split( splitreg ); p++;
pieces[ p ] = "7,17,10,9".split( splitreg ); p++;
pieces[ p ] = "7,17,16,16".split( splitreg ); p++;
pieces[ p ] = "7,18,12,16".split( splitreg ); p++;
pieces[ p ] = "7,20,15,15".split( splitreg ); p++;
pieces[ p ] = "7,20,16,14".split( splitreg ); p++;
pieces[ p ] = "7,20,17,26".split( splitreg ); p++;
pieces[ p ] = "7,20,20,19".split( splitreg ); p++;
pieces[ p ] = "7,20,23,20".split( splitreg ); p++;
pieces[ p ] = "7,22,20,12".split( splitreg ); p++;
pieces[ p ] = "7,23,23,28".split( splitreg ); p++;
pieces[ p ] = "7,25,24,10".split( splitreg ); p++;
pieces[ p ] = "7,25,27,22".split( splitreg ); p++;
pieces[ p ] = "7,26,8,25".split( splitreg ); p++;
pieces[ p ] = "7,26,13,25".split( splitreg ); p++;
pieces[ p ] = "7,26,17,15".split( splitreg ); p++;
pieces[ p ] = "7,26,21,13".split( splitreg ); p++;
pieces[ p ] = "7,26,22,16".split( splitreg ); p++;
pieces[ p ] = "7,26,24,11".split( splitreg ); p++;
pieces[ p ] = "7,27,8,27".split( splitreg ); p++;
pieces[ p ] = "7,27,13,16".split( splitreg ); p++;
pieces[ p ] = "7,27,25,13".split( splitreg ); p++;
pieces[ p ] = "7,28,17,9".split( splitreg ); p++;
pieces[ p ] = "8,8,8,21".split( splitreg ); p++;
pieces[ p ] = "8,9,25,26".split( splitreg ); p++;
pieces[ p ] = "8,11,17,21".split( splitreg ); p++;
pieces[ p ] = "8,11,18,17".split( splitreg ); p++;
pieces[ p ] = "8,11,21,22".split( splitreg ); p++;
pieces[ p ] = "8,12,14,24".split( splitreg ); p++;
pieces[ p ] = "8,12,17,18".split( splitreg ); p++;
pieces[ p ] = "8,12,24,21".split( splitreg ); p++;
pieces[ p ] = "8,13,11,27".split( splitreg ); p++;
pieces[ p ] = "8,13,13,28".split( splitreg ); p++;
pieces[ p ] = "8,13,26,10".split( splitreg ); p++;
pieces[ p ] = "8,14,24,19".split( splitreg ); p++;
pieces[ p ] = "8,14,27,13".split( splitreg ); p++;
pieces[ p ] = "8,16,9,18".split( splitreg ); p++;
pieces[ p ] = "8,16,11,25".split( splitreg ); p++;
pieces[ p ] = "8,16,14,9".split( splitreg ); p++;
pieces[ p ] = "8,16,27,21".split( splitreg ); p++;
pieces[ p ] = "8,17,11,13".split( splitreg ); p++;
pieces[ p ] = "8,17,14,21".split( splitreg ); p++;
pieces[ p ] = "8,18,13,15".split( splitreg ); p++;
pieces[ p ] = "8,18,13,28".split( splitreg ); p++;
pieces[ p ] = "8,18,27,24".split( splitreg ); p++;
pieces[ p ] = "8,19,16,11".split( splitreg ); p++;
pieces[ p ] = "8,20,15,13".split( splitreg ); p++;
pieces[ p ] = "8,20,16,24".split( splitreg ); p++;
pieces[ p ] = "8,20,24,26".split( splitreg ); p++;
pieces[ p ] = "8,21,11,13".split( splitreg ); p++;
pieces[ p ] = "8,21,13,19".split( splitreg ); p++;
pieces[ p ] = "8,21,16,13".split( splitreg ); p++;
pieces[ p ] = "8,22,15,19".split( splitreg ); p++;
pieces[ p ] = "8,22,17,24".split( splitreg ); p++;
pieces[ p ] = "8,22,19,14".split( splitreg ); p++;
pieces[ p ] = "8,22,19,27".split( splitreg ); p++;
pieces[ p ] = "8,22,25,20".split( splitreg ); p++;
pieces[ p ] = "8,22,28,21".split( splitreg ); p++;
pieces[ p ] = "8,23,16,27".split( splitreg ); p++;
pieces[ p ] = "8,23,22,11".split( splitreg ); p++;
pieces[ p ] = "8,23,22,14".split( splitreg ); p++;
pieces[ p ] = "8,23,25,24".split( splitreg ); p++;
pieces[ p ] = "8,24,10,23".split( splitreg ); p++;
pieces[ p ] = "8,24,22,14".split( splitreg ); p++;
pieces[ p ] = "8,25,11,13".split( splitreg ); p++;
pieces[ p ] = "8,25,25,23".split( splitreg ); p++;
pieces[ p ] = "8,26,27,9".split( splitreg ); p++;
pieces[ p ] = "8,27,17,15".split( splitreg ); p++;
pieces[ p ] = "8,27,25,12".split( splitreg ); p++;
pieces[ p ] = "8,27,27,15".split( splitreg ); p++;
pieces[ p ] = "8,28,15,15".split( splitreg ); p++;
pieces[ p ] = "8,28,17,26".split( splitreg ); p++;
pieces[ p ] = "8,28,19,23".split( splitreg ); p++;
pieces[ p ] = "8,28,19,27".split( splitreg ); p++;
pieces[ p ] = "9,9,25,28".split( splitreg ); p++;
pieces[ p ] = "9,10,16,17".split( splitreg ); p++;
pieces[ p ] = "9,10,22,16".split( splitreg ); p++;
pieces[ p ] = "9,11,12,28".split( splitreg ); p++;
pieces[ p ] = "9,11,14,24".split( splitreg ); p++;
pieces[ p ] = "9,11,20,26".split( splitreg ); p++;
pieces[ p ] = "9,12,11,15".split( splitreg ); p++;
pieces[ p ] = "9,12,16,15".split( splitreg ); p++;
pieces[ p ] = "9,12,22,28".split( splitreg ); p++;
pieces[ p ] = "9,13,26,18".split( splitreg ); p++;
pieces[ p ] = "9,13,28,15".split( splitreg ); p++;
pieces[ p ] = "9,13,28,20".split( splitreg ); p++;
pieces[ p ] = "9,14,11,26".split( splitreg ); p++;
pieces[ p ] = "9,14,19,18".split( splitreg ); p++;
pieces[ p ] = "9,14,26,22".split( splitreg ); p++;
pieces[ p ] = "9,15,10,22".split( splitreg ); p++;
pieces[ p ] = "9,15,22,14".split( splitreg ); p++;
pieces[ p ] = "9,15,26,18".split( splitreg ); p++;
pieces[ p ] = "9,16,16,15".split( splitreg ); p++;
pieces[ p ] = "9,17,9,19".split( splitreg ); p++;
pieces[ p ] = "9,17,15,18".split( splitreg ); p++;
pieces[ p ] = "9,17,15,21".split( splitreg ); p++;
pieces[ p ] = "9,17,26,24".split( splitreg ); p++;
pieces[ p ] = "9,17,28,20".split( splitreg ); p++;
pieces[ p ] = "9,18,11,26".split( splitreg ); p++;
pieces[ p ] = "9,18,19,24".split( splitreg ); p++;
pieces[ p ] = "9,18,19,25".split( splitreg ); p++;
pieces[ p ] = "9,19,15,14".split( splitreg ); p++;
pieces[ p ] = "9,19,27,21".split( splitreg ); p++;
pieces[ p ] = "9,20,17,26".split( splitreg ); p++;
pieces[ p ] = "9,22,27,11".split( splitreg ); p++;
pieces[ p ] = "9,24,10,20".split( splitreg ); p++;
pieces[ p ] = "9,24,14,28".split( splitreg ); p++;
pieces[ p ] = "9,24,16,21".split( splitreg ); p++;
pieces[ p ] = "9,24,18,13".split( splitreg ); p++;
pieces[ p ] = "9,24,19,20".split( splitreg ); p++;
pieces[ p ] = "9,24,24,23".split( splitreg ); p++;
pieces[ p ] = "9,25,20,28".split( splitreg ); p++;
pieces[ p ] = "9,25,24,18".split( splitreg ); p++;
pieces[ p ] = "9,25,24,22".split( splitreg ); p++;
pieces[ p ] = "9,25,25,22".split( splitreg ); p++;
pieces[ p ] = "9,26,11,23".split( splitreg ); p++;
pieces[ p ] = "9,26,12,19".split( splitreg ); p++;
pieces[ p ] = "9,27,15,13".split( splitreg ); p++;
pieces[ p ] = "9,27,21,24".split( splitreg ); p++;
pieces[ p ] = "9,28,21,28".split( splitreg ); p++;
pieces[ p ] = "9,28,27,18".split( splitreg ); p++;
pieces[ p ] = "10,10,17,21".split( splitreg ); p++;
pieces[ p ] = "10,10,19,21".split( splitreg ); p++;
pieces[ p ] = "10,10,24,21".split( splitreg ); p++;
pieces[ p ] = "10,11,16,15".split( splitreg ); p++;
pieces[ p ] = "10,11,17,21".split( splitreg ); p++;
pieces[ p ] = "10,11,28,15".split( splitreg ); p++;
pieces[ p ] = "10,12,10,16".split( splitreg ); p++;
pieces[ p ] = "10,12,11,26".split( splitreg ); p++;
pieces[ p ] = "10,12,17,17".split( splitreg ); p++;
pieces[ p ] = "10,12,17,20".split( splitreg ); p++;
pieces[ p ] = "10,14,15,22".split( splitreg ); p++;
pieces[ p ] = "10,15,24,21".split( splitreg ); p++;
pieces[ p ] = "10,16,18,20".split( splitreg ); p++;
pieces[ p ] = "10,16,20,23".split( splitreg ); p++;
pieces[ p ] = "10,16,24,19".split( splitreg ); p++;
pieces[ p ] = "10,17,21,15".split( splitreg ); p++;
pieces[ p ] = "10,17,22,21".split( splitreg ); p++;
pieces[ p ] = "10,17,23,11".split( splitreg ); p++;
pieces[ p ] = "10,17,23,20".split( splitreg ); p++;
pieces[ p ] = "10,18,11,19".split( splitreg ); p++;
pieces[ p ] = "10,18,14,14".split( splitreg ); p++;
pieces[ p ] = "10,18,28,27".split( splitreg ); p++;
pieces[ p ] = "10,19,14,26".split( splitreg ); p++;
pieces[ p ] = "10,19,16,13".split( splitreg ); p++;
pieces[ p ] = "10,19,17,21".split( splitreg ); p++;
pieces[ p ] = "10,19,19,13".split( splitreg ); p++;
pieces[ p ] = "10,19,27,22".split( splitreg ); p++;
pieces[ p ] = "10,20,16,12".split( splitreg ); p++;
pieces[ p ] = "10,21,13,24".split( splitreg ); p++;
pieces[ p ] = "10,21,28,21".split( splitreg ); p++;
pieces[ p ] = "10,22,12,28".split( splitreg ); p++;
pieces[ p ] = "10,23,23,14".split( splitreg ); p++;
pieces[ p ] = "10,24,11,25".split( splitreg ); p++;
pieces[ p ] = "10,25,20,11".split( splitreg ); p++;
pieces[ p ] = "10,26,24,17".split( splitreg ); p++;
pieces[ p ] = "10,27,26,11".split( splitreg ); p++;
pieces[ p ] = "10,27,28,23".split( splitreg ); p++;
pieces[ p ] = "10,28,11,28".split( splitreg ); p++;
pieces[ p ] = "10,28,28,17".split( splitreg ); p++;
pieces[ p ] = "11,11,23,14".split( splitreg ); p++;
pieces[ p ] = "11,11,28,20".split( splitreg ); p++;
pieces[ p ] = "11,13,24,18".split( splitreg ); p++;
pieces[ p ] = "11,14,13,15".split( splitreg ); p++;
pieces[ p ] = "11,14,16,13".split( splitreg ); p++;
pieces[ p ] = "11,14,24,18".split( splitreg ); p++;
pieces[ p ] = "11,15,12,18".split( splitreg ); p++;
pieces[ p ] = "11,15,21,26".split( splitreg ); p++;
pieces[ p ] = "11,16,20,22".split( splitreg ); p++;
pieces[ p ] = "11,18,22,20".split( splitreg ); p++;
pieces[ p ] = "11,18,22,23".split( splitreg ); p++;
pieces[ p ] = "11,19,15,18".split( splitreg ); p++;
pieces[ p ] = "11,19,21,12".split( splitreg ); p++;
pieces[ p ] = "11,20,17,22".split( splitreg ); p++;
pieces[ p ] = "11,20,19,13".split( splitreg ); p++;
pieces[ p ] = "11,21,12,15".split( splitreg ); p++;
pieces[ p ] = "11,21,14,18".split( splitreg ); p++;
pieces[ p ] = "11,22,18,13".split( splitreg ); p++;
pieces[ p ] = "11,22,22,24".split( splitreg ); p++;
pieces[ p ] = "11,23,23,26".split( splitreg ); p++;
pieces[ p ] = "11,24,27,14".split( splitreg ); p++;
pieces[ p ] = "11,25,14,12".split( splitreg ); p++;
pieces[ p ] = "11,25,23,23".split( splitreg ); p++;
pieces[ p ] = "11,26,12,27".split( splitreg ); p++;
pieces[ p ] = "11,26,15,27".split( splitreg ); p++;
pieces[ p ] = "11,26,19,14".split( splitreg ); p++;
pieces[ p ] = "12,12,16,23".split( splitreg ); p++;
pieces[ p ] = "12,12,23,15".split( splitreg ); p++;
pieces[ p ] = "12,12,23,16".split( splitreg ); p++;
pieces[ p ] = "12,12,23,27".split( splitreg ); p++;
pieces[ p ] = "12,15,14,25".split( splitreg ); p++;
pieces[ p ] = "12,15,25,26".split( splitreg ); p++;
pieces[ p ] = "12,17,20,22".split( splitreg ); p++;
pieces[ p ] = "12,17,20,28".split( splitreg ); p++;
pieces[ p ] = "12,17,25,24".split( splitreg ); p++;
pieces[ p ] = "12,18,18,16".split( splitreg ); p++;
pieces[ p ] = "12,18,19,27".split( splitreg ); p++;
pieces[ p ] = "12,19,19,26".split( splitreg ); p++;
pieces[ p ] = "12,19,21,27".split( splitreg ); p++;
pieces[ p ] = "12,21,17,19".split( splitreg ); p++;
pieces[ p ] = "12,21,23,14".split( splitreg ); p++;
pieces[ p ] = "12,21,23,22".split( splitreg ); p++;
pieces[ p ] = "12,22,20,27".split( splitreg ); p++;
pieces[ p ] = "12,23,13,15".split( splitreg ); p++;
pieces[ p ] = "12,23,23,18".split( splitreg ); p++;
pieces[ p ] = "12,23,25,24".split( splitreg ); p++;
pieces[ p ] = "12,23,26,25".split( splitreg ); p++;
pieces[ p ] = "12,25,14,23".split( splitreg ); p++;
pieces[ p ] = "12,26,20,14".split( splitreg ); p++;
pieces[ p ] = "12,26,24,27".split( splitreg ); p++;
pieces[ p ] = "12,27,24,20".split( splitreg ); p++;
pieces[ p ] = "12,28,17,13".split( splitreg ); p++;
pieces[ p ] = "13,13,22,20".split( splitreg ); p++;
pieces[ p ] = "13,14,15,16".split( splitreg ); p++;
pieces[ p ] = "13,14,20,17".split( splitreg ); p++;
pieces[ p ] = "13,14,20,20".split( splitreg ); p++;
pieces[ p ] = "13,16,17,21".split( splitreg ); p++;
pieces[ p ] = "13,16,17,24".split( splitreg ); p++;
pieces[ p ] = "13,16,27,28".split( splitreg ); p++;
pieces[ p ] = "13,18,26,18".split( splitreg ); p++;
pieces[ p ] = "13,18,27,27".split( splitreg ); p++;
pieces[ p ] = "13,19,27,21".split( splitreg ); p++;
pieces[ p ] = "13,20,14,18".split( splitreg ); p++;
pieces[ p ] = "13,20,26,27".split( splitreg ); p++;
pieces[ p ] = "13,22,16,21".split( splitreg ); p++;
pieces[ p ] = "13,22,19,26".split( splitreg ); p++;
pieces[ p ] = "13,23,18,25".split( splitreg ); p++;
pieces[ p ] = "13,23,23,17".split( splitreg ); p++;
pieces[ p ] = "13,25,16,16".split( splitreg ); p++;
pieces[ p ] = "13,25,17,23".split( splitreg ); p++;
pieces[ p ] = "13,25,22,19".split( splitreg ); p++;
pieces[ p ] = "13,25,27,23".split( splitreg ); p++;
pieces[ p ] = "14,16,22,22".split( splitreg ); p++;
pieces[ p ] = "14,17,24,17".split( splitreg ); p++;
pieces[ p ] = "14,17,25,20".split( splitreg ); p++;
pieces[ p ] = "14,18,24,20".split( splitreg ); p++;
pieces[ p ] = "14,18,24,28".split( splitreg ); p++;
pieces[ p ] = "14,19,28,21".split( splitreg ); p++;
pieces[ p ] = "14,20,20,18".split( splitreg ); p++;
pieces[ p ] = "14,21,23,18".split( splitreg ); p++;
pieces[ p ] = "14,21,26,23".split( splitreg ); p++;
pieces[ p ] = "14,21,26,25".split( splitreg ); p++;
pieces[ p ] = "14,22,25,16".split( splitreg ); p++;
pieces[ p ] = "14,22,28,19".split( splitreg ); p++;
pieces[ p ] = "14,23,19,25".split( splitreg ); p++;
pieces[ p ] = "14,24,18,20".split( splitreg ); p++;
pieces[ p ] = "14,26,18,22".split( splitreg ); p++;
pieces[ p ] = "14,26,26,19".split( splitreg ); p++;
pieces[ p ] = "14,27,18,24".split( splitreg ); p++;
pieces[ p ] = "14,27,26,27".split( splitreg ); p++;
pieces[ p ] = "15,15,24,20".split( splitreg ); p++;
pieces[ p ] = "15,15,25,23".split( splitreg ); p++;
pieces[ p ] = "15,17,15,20".split( splitreg ); p++;
pieces[ p ] = "15,21,21,24".split( splitreg ); p++;
pieces[ p ] = "15,21,21,26".split( splitreg ); p++;
pieces[ p ] = "15,21,25,17".split( splitreg ); p++;
pieces[ p ] = "15,23,15,24".split( splitreg ); p++;
pieces[ p ] = "15,25,20,19".split( splitreg ); p++;
pieces[ p ] = "15,27,18,22".split( splitreg ); p++;
pieces[ p ] = "15,28,28,21".split( splitreg ); p++;
pieces[ p ] = "16,16,19,26".split( splitreg ); p++;
pieces[ p ] = "16,18,17,25".split( splitreg ); p++;
pieces[ p ] = "16,22,19,19".split( splitreg ); p++;
pieces[ p ] = "16,22,24,18".split( splitreg ); p++;
pieces[ p ] = "16,23,23,19".split( splitreg ); p++;
pieces[ p ] = "16,24,19,25".split( splitreg ); p++;
pieces[ p ] = "16,27,24,23".split( splitreg ); p++;
pieces[ p ] = "16,27,26,17".split( splitreg ); p++;
pieces[ p ] = "17,20,28,20".split( splitreg ); p++;
pieces[ p ] = "17,24,25,18".split( splitreg ); p++;
pieces[ p ] = "17,24,26,20".split( splitreg ); p++;
pieces[ p ] = "17,26,28,26".split( splitreg ); p++;
pieces[ p ] = "17,27,19,28".split( splitreg ); p++;
pieces[ p ] = "17,28,23,19".split( splitreg ); p++;
pieces[ p ] = "17,28,27,25".split( splitreg ); p++;
pieces[ p ] = "18,18,21,27".split( splitreg ); p++;
pieces[ p ] = "18,23,21,20".split( splitreg ); p++;
pieces[ p ] = "18,25,24,19".split( splitreg ); p++;
pieces[ p ] = "18,26,24,24".split( splitreg ); p++;
pieces[ p ] = "18,26,25,20".split( splitreg ); p++;
pieces[ p ] = "18,27,28,19".split( splitreg ); p++;
pieces[ p ] = "18,28,26,28".split( splitreg ); p++;
pieces[ p ] = "19,19,28,28".split( splitreg ); p++;
pieces[ p ] = "19,24,23,23".split( splitreg ); p++;
pieces[ p ] = "19,27,22,25".split( splitreg ); p++;
pieces[ p ] = "20,23,25,24".split( splitreg ); p++;
pieces[ p ] = "20,26,21,28".split( splitreg ); p++;
pieces[ p ] = "20,26,26,23".split( splitreg ); p++;
pieces[ p ] = "21,28,25,27".split( splitreg ); p++;
pieces[ p ] = "21,28,28,28".split( splitreg ); p++;
pieces[ p ] = "23,24,23,27".split( splitreg ); p++;
pieces[ p ] = "24,28,25,25".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

