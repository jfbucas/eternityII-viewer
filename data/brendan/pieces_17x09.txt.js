
puzzles[ nb_puzzles ] = "brendan/pieces_17x09.txt.js,Brendan 17x09".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_17x09.txt.js" ) {

board_w = 17;
board_h = 9;


pieces[ p ] = "0,0,1,1".split( splitreg ); p++;
pieces[ p ] = "0,0,1,2".split( splitreg ); p++;
pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,0,3,4".split( splitreg ); p++;
pieces[ p ] = "0,1,5,3".split( splitreg ); p++;
pieces[ p ] = "0,1,6,3".split( splitreg ); p++;
pieces[ p ] = "0,1,7,2".split( splitreg ); p++;
pieces[ p ] = "0,1,7,4".split( splitreg ); p++;
pieces[ p ] = "0,1,9,4".split( splitreg ); p++;
pieces[ p ] = "0,1,11,2".split( splitreg ); p++;
pieces[ p ] = "0,1,12,1".split( splitreg ); p++;
pieces[ p ] = "0,1,13,1".split( splitreg ); p++;
pieces[ p ] = "0,1,16,2".split( splitreg ); p++;
pieces[ p ] = "0,1,17,4".split( splitreg ); p++;
pieces[ p ] = "0,2,5,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,4".split( splitreg ); p++;
pieces[ p ] = "0,2,9,1".split( splitreg ); p++;
pieces[ p ] = "0,2,9,2".split( splitreg ); p++;
pieces[ p ] = "0,2,9,3".split( splitreg ); p++;
pieces[ p ] = "0,2,10,2".split( splitreg ); p++;
pieces[ p ] = "0,2,10,4".split( splitreg ); p++;
pieces[ p ] = "0,2,11,3".split( splitreg ); p++;
pieces[ p ] = "0,2,11,4".split( splitreg ); p++;
pieces[ p ] = "0,2,14,1".split( splitreg ); p++;
pieces[ p ] = "0,2,17,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,2".split( splitreg ); p++;
pieces[ p ] = "0,3,6,4".split( splitreg ); p++;
pieces[ p ] = "0,3,7,1".split( splitreg ); p++;
pieces[ p ] = "0,3,8,3".split( splitreg ); p++;
pieces[ p ] = "0,3,10,3".split( splitreg ); p++;
pieces[ p ] = "0,3,13,1".split( splitreg ); p++;
pieces[ p ] = "0,3,13,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,3".split( splitreg ); p++;
pieces[ p ] = "0,3,15,2".split( splitreg ); p++;
pieces[ p ] = "0,3,15,3".split( splitreg ); p++;
pieces[ p ] = "0,3,17,4".split( splitreg ); p++;
pieces[ p ] = "0,4,5,1".split( splitreg ); p++;
pieces[ p ] = "0,4,6,4".split( splitreg ); p++;
pieces[ p ] = "0,4,7,3".split( splitreg ); p++;
pieces[ p ] = "0,4,8,1".split( splitreg ); p++;
pieces[ p ] = "0,4,9,3".split( splitreg ); p++;
pieces[ p ] = "0,4,9,4".split( splitreg ); p++;
pieces[ p ] = "0,4,10,4".split( splitreg ); p++;
pieces[ p ] = "0,4,12,1".split( splitreg ); p++;
pieces[ p ] = "0,4,13,2".split( splitreg ); p++;
pieces[ p ] = "0,4,15,2".split( splitreg ); p++;
pieces[ p ] = "0,4,16,1".split( splitreg ); p++;
pieces[ p ] = "0,4,16,2".split( splitreg ); p++;
pieces[ p ] = "5,5,9,7".split( splitreg ); p++;
pieces[ p ] = "5,5,11,8".split( splitreg ); p++;
pieces[ p ] = "5,6,6,7".split( splitreg ); p++;
pieces[ p ] = "5,6,6,9".split( splitreg ); p++;
pieces[ p ] = "5,6,9,13".split( splitreg ); p++;
pieces[ p ] = "5,6,14,14".split( splitreg ); p++;
pieces[ p ] = "5,8,7,9".split( splitreg ); p++;
pieces[ p ] = "5,8,9,12".split( splitreg ); p++;
pieces[ p ] = "5,8,17,11".split( splitreg ); p++;
pieces[ p ] = "5,9,7,10".split( splitreg ); p++;
pieces[ p ] = "5,9,14,17".split( splitreg ); p++;
pieces[ p ] = "5,10,8,6".split( splitreg ); p++;
pieces[ p ] = "5,10,8,9".split( splitreg ); p++;
pieces[ p ] = "5,11,7,17".split( splitreg ); p++;
pieces[ p ] = "5,11,11,6".split( splitreg ); p++;
pieces[ p ] = "5,11,12,17".split( splitreg ); p++;
pieces[ p ] = "5,12,9,17".split( splitreg ); p++;
pieces[ p ] = "5,12,13,10".split( splitreg ); p++;
pieces[ p ] = "5,12,16,6".split( splitreg ); p++;
pieces[ p ] = "5,13,10,11".split( splitreg ); p++;
pieces[ p ] = "5,13,17,12".split( splitreg ); p++;
pieces[ p ] = "5,14,6,14".split( splitreg ); p++;
pieces[ p ] = "5,14,10,9".split( splitreg ); p++;
pieces[ p ] = "5,15,6,10".split( splitreg ); p++;
pieces[ p ] = "5,15,8,17".split( splitreg ); p++;
pieces[ p ] = "5,15,10,9".split( splitreg ); p++;
pieces[ p ] = "5,15,16,8".split( splitreg ); p++;
pieces[ p ] = "5,16,12,12".split( splitreg ); p++;
pieces[ p ] = "5,16,13,12".split( splitreg ); p++;
pieces[ p ] = "5,16,14,12".split( splitreg ); p++;
pieces[ p ] = "5,17,7,15".split( splitreg ); p++;
pieces[ p ] = "6,6,16,13".split( splitreg ); p++;
pieces[ p ] = "6,7,14,13".split( splitreg ); p++;
pieces[ p ] = "6,7,16,15".split( splitreg ); p++;
pieces[ p ] = "6,8,8,17".split( splitreg ); p++;
pieces[ p ] = "6,8,11,17".split( splitreg ); p++;
pieces[ p ] = "6,9,12,11".split( splitreg ); p++;
pieces[ p ] = "6,10,7,10".split( splitreg ); p++;
pieces[ p ] = "6,10,8,12".split( splitreg ); p++;
pieces[ p ] = "6,10,15,13".split( splitreg ); p++;
pieces[ p ] = "6,10,16,14".split( splitreg ); p++;
pieces[ p ] = "6,11,7,14".split( splitreg ); p++;
pieces[ p ] = "6,12,7,12".split( splitreg ); p++;
pieces[ p ] = "6,12,7,16".split( splitreg ); p++;
pieces[ p ] = "6,13,8,7".split( splitreg ); p++;
pieces[ p ] = "6,13,11,17".split( splitreg ); p++;
pieces[ p ] = "6,13,16,11".split( splitreg ); p++;
pieces[ p ] = "6,14,17,14".split( splitreg ); p++;
pieces[ p ] = "6,15,10,16".split( splitreg ); p++;
pieces[ p ] = "6,16,7,8".split( splitreg ); p++;
pieces[ p ] = "6,17,14,15".split( splitreg ); p++;
pieces[ p ] = "7,7,8,9".split( splitreg ); p++;
pieces[ p ] = "7,7,8,16".split( splitreg ); p++;
pieces[ p ] = "7,7,9,16".split( splitreg ); p++;
pieces[ p ] = "7,7,11,13".split( splitreg ); p++;
pieces[ p ] = "7,10,8,12".split( splitreg ); p++;
pieces[ p ] = "7,11,11,15".split( splitreg ); p++;
pieces[ p ] = "7,11,15,16".split( splitreg ); p++;
pieces[ p ] = "7,12,14,12".split( splitreg ); p++;
pieces[ p ] = "7,13,11,14".split( splitreg ); p++;
pieces[ p ] = "7,13,14,13".split( splitreg ); p++;
pieces[ p ] = "7,17,8,13".split( splitreg ); p++;
pieces[ p ] = "7,17,10,15".split( splitreg ); p++;
pieces[ p ] = "7,17,17,14".split( splitreg ); p++;
pieces[ p ] = "8,9,8,17".split( splitreg ); p++;
pieces[ p ] = "8,9,9,11".split( splitreg ); p++;
pieces[ p ] = "8,10,10,16".split( splitreg ); p++;
pieces[ p ] = "8,11,11,16".split( splitreg ); p++;
pieces[ p ] = "8,12,10,15".split( splitreg ); p++;
pieces[ p ] = "8,12,12,10".split( splitreg ); p++;
pieces[ p ] = "8,12,14,10".split( splitreg ); p++;
pieces[ p ] = "8,12,14,12".split( splitreg ); p++;
pieces[ p ] = "8,12,17,10".split( splitreg ); p++;
pieces[ p ] = "8,13,12,11".split( splitreg ); p++;
pieces[ p ] = "8,14,14,14".split( splitreg ); p++;
pieces[ p ] = "8,15,11,15".split( splitreg ); p++;
pieces[ p ] = "8,16,10,17".split( splitreg ); p++;
pieces[ p ] = "8,16,17,11".split( splitreg ); p++;
pieces[ p ] = "8,17,12,13".split( splitreg ); p++;
pieces[ p ] = "9,9,11,12".split( splitreg ); p++;
pieces[ p ] = "9,9,14,16".split( splitreg ); p++;
pieces[ p ] = "9,10,9,13".split( splitreg ); p++;
pieces[ p ] = "9,10,13,13".split( splitreg ); p++;
pieces[ p ] = "9,12,15,14".split( splitreg ); p++;
pieces[ p ] = "9,13,11,16".split( splitreg ); p++;
pieces[ p ] = "9,15,11,16".split( splitreg ); p++;
pieces[ p ] = "9,15,16,13".split( splitreg ); p++;
pieces[ p ] = "9,16,15,12".split( splitreg ); p++;
pieces[ p ] = "9,17,13,15".split( splitreg ); p++;
pieces[ p ] = "10,10,14,14".split( splitreg ); p++;
pieces[ p ] = "10,11,13,13".split( splitreg ); p++;
pieces[ p ] = "10,14,11,16".split( splitreg ); p++;
pieces[ p ] = "10,14,12,11".split( splitreg ); p++;
pieces[ p ] = "10,15,14,15".split( splitreg ); p++;
pieces[ p ] = "10,17,16,11".split( splitreg ); p++;
pieces[ p ] = "11,14,15,13".split( splitreg ); p++;
pieces[ p ] = "11,15,16,12".split( splitreg ); p++;
pieces[ p ] = "11,16,17,15".split( splitreg ); p++;
pieces[ p ] = "12,15,14,17".split( splitreg ); p++;
pieces[ p ] = "12,17,14,16".split( splitreg ); p++;
pieces[ p ] = "13,13,13,17".split( splitreg ); p++;
pieces[ p ] = "13,16,17,16".split( splitreg ); p++;
pieces[ p ] = "13,17,15,15".split( splitreg ); p++;
pieces[ p ] = "14,15,15,15".split( splitreg ); p++;
pieces[ p ] = "14,15,17,15".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

