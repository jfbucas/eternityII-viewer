
puzzles[ nb_puzzles ] = "brendan/pieces_17x13.txt.js,Brendan 17x13".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_17x13.txt.js" ) {

board_w = 17;
board_h = 13;


pieces[ p ] = "0,0,1,2".split( splitreg ); p++;
pieces[ p ] = "0,0,3,4".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,0,5,5".split( splitreg ); p++;
pieces[ p ] = "0,1,6,1".split( splitreg ); p++;
pieces[ p ] = "0,1,8,1".split( splitreg ); p++;
pieces[ p ] = "0,1,8,3".split( splitreg ); p++;
pieces[ p ] = "0,1,9,2".split( splitreg ); p++;
pieces[ p ] = "0,1,9,3".split( splitreg ); p++;
pieces[ p ] = "0,1,12,5".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,18,3".split( splitreg ); p++;
pieces[ p ] = "0,1,18,4".split( splitreg ); p++;
pieces[ p ] = "0,1,19,1".split( splitreg ); p++;
pieces[ p ] = "0,1,19,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,1".split( splitreg ); p++;
pieces[ p ] = "0,2,7,2".split( splitreg ); p++;
pieces[ p ] = "0,2,11,5".split( splitreg ); p++;
pieces[ p ] = "0,2,13,2".split( splitreg ); p++;
pieces[ p ] = "0,2,13,5".split( splitreg ); p++;
pieces[ p ] = "0,2,14,5".split( splitreg ); p++;
pieces[ p ] = "0,2,16,3".split( splitreg ); p++;
pieces[ p ] = "0,2,17,5".split( splitreg ); p++;
pieces[ p ] = "0,2,18,5".split( splitreg ); p++;
pieces[ p ] = "0,2,19,2".split( splitreg ); p++;
pieces[ p ] = "0,2,19,3".split( splitreg ); p++;
pieces[ p ] = "0,3,7,1".split( splitreg ); p++;
pieces[ p ] = "0,3,9,4".split( splitreg ); p++;
pieces[ p ] = "0,3,11,1".split( splitreg ); p++;
pieces[ p ] = "0,3,11,2".split( splitreg ); p++;
pieces[ p ] = "0,3,12,4".split( splitreg ); p++;
pieces[ p ] = "0,3,13,5".split( splitreg ); p++;
pieces[ p ] = "0,3,19,1".split( splitreg ); p++;
pieces[ p ] = "0,3,19,4".split( splitreg ); p++;
pieces[ p ] = "0,3,20,3".split( splitreg ); p++;
pieces[ p ] = "0,3,21,5".split( splitreg ); p++;
pieces[ p ] = "0,4,8,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,3".split( splitreg ); p++;
pieces[ p ] = "0,4,14,3".split( splitreg ); p++;
pieces[ p ] = "0,4,14,4".split( splitreg ); p++;
pieces[ p ] = "0,4,15,5".split( splitreg ); p++;
pieces[ p ] = "0,4,16,4".split( splitreg ); p++;
pieces[ p ] = "0,4,17,5".split( splitreg ); p++;
pieces[ p ] = "0,4,18,4".split( splitreg ); p++;
pieces[ p ] = "0,4,19,1".split( splitreg ); p++;
pieces[ p ] = "0,4,20,1".split( splitreg ); p++;
pieces[ p ] = "0,5,6,4".split( splitreg ); p++;
pieces[ p ] = "0,5,10,1".split( splitreg ); p++;
pieces[ p ] = "0,5,15,1".split( splitreg ); p++;
pieces[ p ] = "0,5,15,2".split( splitreg ); p++;
pieces[ p ] = "0,5,16,3".split( splitreg ); p++;
pieces[ p ] = "0,5,16,4".split( splitreg ); p++;
pieces[ p ] = "0,5,18,2".split( splitreg ); p++;
pieces[ p ] = "0,5,20,1".split( splitreg ); p++;
pieces[ p ] = "0,5,20,2".split( splitreg ); p++;
pieces[ p ] = "0,5,20,4".split( splitreg ); p++;
pieces[ p ] = "6,6,12,17".split( splitreg ); p++;
pieces[ p ] = "6,6,20,21".split( splitreg ); p++;
pieces[ p ] = "6,7,8,7".split( splitreg ); p++;
pieces[ p ] = "6,7,8,11".split( splitreg ); p++;
pieces[ p ] = "6,7,14,7".split( splitreg ); p++;
pieces[ p ] = "6,8,14,9".split( splitreg ); p++;
pieces[ p ] = "6,8,18,10".split( splitreg ); p++;
pieces[ p ] = "6,9,7,7".split( splitreg ); p++;
pieces[ p ] = "6,10,6,19".split( splitreg ); p++;
pieces[ p ] = "6,10,8,18".split( splitreg ); p++;
pieces[ p ] = "6,10,9,12".split( splitreg ); p++;
pieces[ p ] = "6,10,14,8".split( splitreg ); p++;
pieces[ p ] = "6,10,15,10".split( splitreg ); p++;
pieces[ p ] = "6,10,17,19".split( splitreg ); p++;
pieces[ p ] = "6,11,8,21".split( splitreg ); p++;
pieces[ p ] = "6,11,9,18".split( splitreg ); p++;
pieces[ p ] = "6,11,10,12".split( splitreg ); p++;
pieces[ p ] = "6,11,14,15".split( splitreg ); p++;
pieces[ p ] = "6,11,21,14".split( splitreg ); p++;
pieces[ p ] = "6,12,11,10".split( splitreg ); p++;
pieces[ p ] = "6,13,7,7".split( splitreg ); p++;
pieces[ p ] = "6,13,10,11".split( splitreg ); p++;
pieces[ p ] = "6,13,13,11".split( splitreg ); p++;
pieces[ p ] = "6,14,9,20".split( splitreg ); p++;
pieces[ p ] = "6,14,14,12".split( splitreg ); p++;
pieces[ p ] = "6,14,16,12".split( splitreg ); p++;
pieces[ p ] = "6,15,8,20".split( splitreg ); p++;
pieces[ p ] = "6,15,21,11".split( splitreg ); p++;
pieces[ p ] = "6,16,7,19".split( splitreg ); p++;
pieces[ p ] = "6,17,9,9".split( splitreg ); p++;
pieces[ p ] = "6,17,11,13".split( splitreg ); p++;
pieces[ p ] = "6,17,16,10".split( splitreg ); p++;
pieces[ p ] = "6,17,18,13".split( splitreg ); p++;
pieces[ p ] = "6,18,15,9".split( splitreg ); p++;
pieces[ p ] = "6,18,15,15".split( splitreg ); p++;
pieces[ p ] = "6,19,15,8".split( splitreg ); p++;
pieces[ p ] = "6,20,8,8".split( splitreg ); p++;
pieces[ p ] = "6,20,17,7".split( splitreg ); p++;
pieces[ p ] = "6,20,21,10".split( splitreg ); p++;
pieces[ p ] = "6,21,11,11".split( splitreg ); p++;
pieces[ p ] = "6,21,15,10".split( splitreg ); p++;
pieces[ p ] = "7,7,21,13".split( splitreg ); p++;
pieces[ p ] = "7,8,10,18".split( splitreg ); p++;
pieces[ p ] = "7,8,11,15".split( splitreg ); p++;
pieces[ p ] = "7,8,13,20".split( splitreg ); p++;
pieces[ p ] = "7,8,16,9".split( splitreg ); p++;
pieces[ p ] = "7,9,16,17".split( splitreg ); p++;
pieces[ p ] = "7,9,21,18".split( splitreg ); p++;
pieces[ p ] = "7,10,14,17".split( splitreg ); p++;
pieces[ p ] = "7,10,14,21".split( splitreg ); p++;
pieces[ p ] = "7,10,21,12".split( splitreg ); p++;
pieces[ p ] = "7,11,11,11".split( splitreg ); p++;
pieces[ p ] = "7,11,15,9".split( splitreg ); p++;
pieces[ p ] = "7,11,20,13".split( splitreg ); p++;
pieces[ p ] = "7,12,8,14".split( splitreg ); p++;
pieces[ p ] = "7,12,9,21".split( splitreg ); p++;
pieces[ p ] = "7,12,12,18".split( splitreg ); p++;
pieces[ p ] = "7,12,19,13".split( splitreg ); p++;
pieces[ p ] = "7,12,19,21".split( splitreg ); p++;
pieces[ p ] = "7,14,8,15".split( splitreg ); p++;
pieces[ p ] = "7,14,20,13".split( splitreg ); p++;
pieces[ p ] = "7,15,12,17".split( splitreg ); p++;
pieces[ p ] = "7,15,13,10".split( splitreg ); p++;
pieces[ p ] = "7,15,15,9".split( splitreg ); p++;
pieces[ p ] = "7,15,15,16".split( splitreg ); p++;
pieces[ p ] = "7,16,10,12".split( splitreg ); p++;
pieces[ p ] = "7,16,16,17".split( splitreg ); p++;
pieces[ p ] = "7,16,17,11".split( splitreg ); p++;
pieces[ p ] = "7,17,14,17".split( splitreg ); p++;
pieces[ p ] = "7,20,14,11".split( splitreg ); p++;
pieces[ p ] = "7,21,17,14".split( splitreg ); p++;
pieces[ p ] = "7,21,18,17".split( splitreg ); p++;
pieces[ p ] = "8,9,9,21".split( splitreg ); p++;
pieces[ p ] = "8,9,10,13".split( splitreg ); p++;
pieces[ p ] = "8,9,10,14".split( splitreg ); p++;
pieces[ p ] = "8,9,16,13".split( splitreg ); p++;
pieces[ p ] = "8,10,16,17".split( splitreg ); p++;
pieces[ p ] = "8,11,10,18".split( splitreg ); p++;
pieces[ p ] = "8,11,16,15".split( splitreg ); p++;
pieces[ p ] = "8,11,19,12".split( splitreg ); p++;
pieces[ p ] = "8,12,13,9".split( splitreg ); p++;
pieces[ p ] = "8,12,13,12".split( splitreg ); p++;
pieces[ p ] = "8,12,13,16".split( splitreg ); p++;
pieces[ p ] = "8,13,19,11".split( splitreg ); p++;
pieces[ p ] = "8,14,9,15".split( splitreg ); p++;
pieces[ p ] = "8,14,12,21".split( splitreg ); p++;
pieces[ p ] = "8,14,20,16".split( splitreg ); p++;
pieces[ p ] = "8,16,14,10".split( splitreg ); p++;
pieces[ p ] = "8,16,15,20".split( splitreg ); p++;
pieces[ p ] = "8,16,17,19".split( splitreg ); p++;
pieces[ p ] = "8,17,9,21".split( splitreg ); p++;
pieces[ p ] = "8,17,18,18".split( splitreg ); p++;
pieces[ p ] = "8,19,10,19".split( splitreg ); p++;
pieces[ p ] = "8,19,10,20".split( splitreg ); p++;
pieces[ p ] = "8,19,16,21".split( splitreg ); p++;
pieces[ p ] = "8,21,15,19".split( splitreg ); p++;
pieces[ p ] = "8,21,17,21".split( splitreg ); p++;
pieces[ p ] = "8,21,19,12".split( splitreg ); p++;
pieces[ p ] = "9,9,19,20".split( splitreg ); p++;
pieces[ p ] = "9,11,10,18".split( splitreg ); p++;
pieces[ p ] = "9,12,14,16".split( splitreg ); p++;
pieces[ p ] = "9,12,16,11".split( splitreg ); p++;
pieces[ p ] = "9,13,15,18".split( splitreg ); p++;
pieces[ p ] = "9,13,18,16".split( splitreg ); p++;
pieces[ p ] = "9,14,12,12".split( splitreg ); p++;
pieces[ p ] = "9,14,13,10".split( splitreg ); p++;
pieces[ p ] = "9,14,18,17".split( splitreg ); p++;
pieces[ p ] = "9,14,19,12".split( splitreg ); p++;
pieces[ p ] = "9,14,20,16".split( splitreg ); p++;
pieces[ p ] = "9,16,15,10".split( splitreg ); p++;
pieces[ p ] = "9,16,19,15".split( splitreg ); p++;
pieces[ p ] = "9,17,11,21".split( splitreg ); p++;
pieces[ p ] = "9,17,14,17".split( splitreg ); p++;
pieces[ p ] = "9,17,18,21".split( splitreg ); p++;
pieces[ p ] = "9,18,21,13".split( splitreg ); p++;
pieces[ p ] = "9,19,16,14".split( splitreg ); p++;
pieces[ p ] = "9,19,18,15".split( splitreg ); p++;
pieces[ p ] = "9,21,11,20".split( splitreg ); p++;
pieces[ p ] = "10,10,21,11".split( splitreg ); p++;
pieces[ p ] = "10,12,14,12".split( splitreg ); p++;
pieces[ p ] = "10,13,17,13".split( splitreg ); p++;
pieces[ p ] = "10,14,20,15".split( splitreg ); p++;
pieces[ p ] = "10,16,18,20".split( splitreg ); p++;
pieces[ p ] = "10,17,11,19".split( splitreg ); p++;
pieces[ p ] = "10,17,15,19".split( splitreg ); p++;
pieces[ p ] = "10,17,17,15".split( splitreg ); p++;
pieces[ p ] = "10,18,18,20".split( splitreg ); p++;
pieces[ p ] = "10,20,12,20".split( splitreg ); p++;
pieces[ p ] = "10,21,12,14".split( splitreg ); p++;
pieces[ p ] = "11,12,14,20".split( splitreg ); p++;
pieces[ p ] = "11,12,17,21".split( splitreg ); p++;
pieces[ p ] = "11,13,19,16".split( splitreg ); p++;
pieces[ p ] = "11,13,21,17".split( splitreg ); p++;
pieces[ p ] = "11,13,21,19".split( splitreg ); p++;
pieces[ p ] = "11,14,20,16".split( splitreg ); p++;
pieces[ p ] = "11,16,17,12".split( splitreg ); p++;
pieces[ p ] = "11,18,12,20".split( splitreg ); p++;
pieces[ p ] = "11,18,18,16".split( splitreg ); p++;
pieces[ p ] = "11,19,20,19".split( splitreg ); p++;
pieces[ p ] = "12,13,13,21".split( splitreg ); p++;
pieces[ p ] = "12,16,20,16".split( splitreg ); p++;
pieces[ p ] = "12,16,21,14".split( splitreg ); p++;
pieces[ p ] = "12,18,16,15".split( splitreg ); p++;
pieces[ p ] = "12,19,19,18".split( splitreg ); p++;
pieces[ p ] = "12,21,13,21".split( splitreg ); p++;
pieces[ p ] = "12,21,19,15".split( splitreg ); p++;
pieces[ p ] = "13,13,18,17".split( splitreg ); p++;
pieces[ p ] = "13,15,17,17".split( splitreg ); p++;
pieces[ p ] = "13,15,19,17".split( splitreg ); p++;
pieces[ p ] = "13,15,19,20".split( splitreg ); p++;
pieces[ p ] = "13,16,15,15".split( splitreg ); p++;
pieces[ p ] = "13,19,20,17".split( splitreg ); p++;
pieces[ p ] = "13,20,19,20".split( splitreg ); p++;
pieces[ p ] = "13,20,20,20".split( splitreg ); p++;
pieces[ p ] = "13,21,21,19".split( splitreg ); p++;
pieces[ p ] = "14,15,21,18".split( splitreg ); p++;
pieces[ p ] = "14,16,21,18".split( splitreg ); p++;
pieces[ p ] = "14,18,18,19".split( splitreg ); p++;
pieces[ p ] = "14,20,18,15".split( splitreg ); p++;
pieces[ p ] = "14,21,20,15".split( splitreg ); p++;
pieces[ p ] = "15,16,21,18".split( splitreg ); p++;
pieces[ p ] = "15,20,18,18".split( splitreg ); p++;
pieces[ p ] = "16,17,18,20".split( splitreg ); p++;
pieces[ p ] = "16,18,20,17".split( splitreg ); p++;
pieces[ p ] = "17,19,19,20".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

