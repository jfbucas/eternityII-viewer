
puzzles[ nb_puzzles ] = "brendan/pieces_15x10.txt.js,Brendan 15x10".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_15x10.txt.js" ) {

board_w = 15;
board_h = 10;


pieces[ p ] = "0,0,1,2".split( splitreg ); p++;
pieces[ p ] = "0,0,1,4".split( splitreg ); p++;
pieces[ p ] = "0,0,2,1".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,1,6,1".split( splitreg ); p++;
pieces[ p ] = "0,1,7,3".split( splitreg ); p++;
pieces[ p ] = "0,1,8,1".split( splitreg ); p++;
pieces[ p ] = "0,1,9,1".split( splitreg ); p++;
pieces[ p ] = "0,1,9,2".split( splitreg ); p++;
pieces[ p ] = "0,1,9,3".split( splitreg ); p++;
pieces[ p ] = "0,1,9,4".split( splitreg ); p++;
pieces[ p ] = "0,1,10,1".split( splitreg ); p++;
pieces[ p ] = "0,1,12,3".split( splitreg ); p++;
pieces[ p ] = "0,1,13,4".split( splitreg ); p++;
pieces[ p ] = "0,2,6,4".split( splitreg ); p++;
pieces[ p ] = "0,2,8,2".split( splitreg ); p++;
pieces[ p ] = "0,2,11,1".split( splitreg ); p++;
pieces[ p ] = "0,2,11,4".split( splitreg ); p++;
pieces[ p ] = "0,2,12,1".split( splitreg ); p++;
pieces[ p ] = "0,2,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,14,3".split( splitreg ); p++;
pieces[ p ] = "0,2,14,4".split( splitreg ); p++;
pieces[ p ] = "0,2,15,1".split( splitreg ); p++;
pieces[ p ] = "0,2,15,2".split( splitreg ); p++;
pieces[ p ] = "0,2,17,3".split( splitreg ); p++;
pieces[ p ] = "0,3,5,1".split( splitreg ); p++;
pieces[ p ] = "0,3,7,2".split( splitreg ); p++;
pieces[ p ] = "0,3,8,3".split( splitreg ); p++;
pieces[ p ] = "0,3,9,3".split( splitreg ); p++;
pieces[ p ] = "0,3,9,4".split( splitreg ); p++;
pieces[ p ] = "0,3,10,1".split( splitreg ); p++;
pieces[ p ] = "0,3,10,2".split( splitreg ); p++;
pieces[ p ] = "0,3,11,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,17,1".split( splitreg ); p++;
pieces[ p ] = "0,4,5,2".split( splitreg ); p++;
pieces[ p ] = "0,4,7,2".split( splitreg ); p++;
pieces[ p ] = "0,4,7,3".split( splitreg ); p++;
pieces[ p ] = "0,4,8,3".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,12,4".split( splitreg ); p++;
pieces[ p ] = "0,4,14,3".split( splitreg ); p++;
pieces[ p ] = "0,4,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,16,4".split( splitreg ); p++;
pieces[ p ] = "0,4,17,4".split( splitreg ); p++;
pieces[ p ] = "5,5,7,16".split( splitreg ); p++;
pieces[ p ] = "5,5,17,6".split( splitreg ); p++;
pieces[ p ] = "5,5,17,13".split( splitreg ); p++;
pieces[ p ] = "5,6,13,15".split( splitreg ); p++;
pieces[ p ] = "5,7,8,9".split( splitreg ); p++;
pieces[ p ] = "5,7,10,16".split( splitreg ); p++;
pieces[ p ] = "5,7,11,11".split( splitreg ); p++;
pieces[ p ] = "5,7,13,13".split( splitreg ); p++;
pieces[ p ] = "5,7,16,10".split( splitreg ); p++;
pieces[ p ] = "5,8,8,11".split( splitreg ); p++;
pieces[ p ] = "5,8,11,12".split( splitreg ); p++;
pieces[ p ] = "5,8,11,15".split( splitreg ); p++;
pieces[ p ] = "5,9,15,13".split( splitreg ); p++;
pieces[ p ] = "5,10,9,9".split( splitreg ); p++;
pieces[ p ] = "5,10,12,6".split( splitreg ); p++;
pieces[ p ] = "5,10,12,17".split( splitreg ); p++;
pieces[ p ] = "5,10,14,14".split( splitreg ); p++;
pieces[ p ] = "5,11,9,15".split( splitreg ); p++;
pieces[ p ] = "5,12,15,6".split( splitreg ); p++;
pieces[ p ] = "5,13,6,7".split( splitreg ); p++;
pieces[ p ] = "5,13,7,16".split( splitreg ); p++;
pieces[ p ] = "5,13,9,10".split( splitreg ); p++;
pieces[ p ] = "5,13,13,6".split( splitreg ); p++;
pieces[ p ] = "5,13,14,12".split( splitreg ); p++;
pieces[ p ] = "5,13,14,17".split( splitreg ); p++;
pieces[ p ] = "5,14,12,8".split( splitreg ); p++;
pieces[ p ] = "5,14,17,9".split( splitreg ); p++;
pieces[ p ] = "5,16,11,6".split( splitreg ); p++;
pieces[ p ] = "5,16,17,9".split( splitreg ); p++;
pieces[ p ] = "5,17,12,8".split( splitreg ); p++;
pieces[ p ] = "5,17,17,8".split( splitreg ); p++;
pieces[ p ] = "6,6,12,8".split( splitreg ); p++;
pieces[ p ] = "6,7,13,15".split( splitreg ); p++;
pieces[ p ] = "6,8,13,14".split( splitreg ); p++;
pieces[ p ] = "6,8,16,12".split( splitreg ); p++;
pieces[ p ] = "6,9,8,12".split( splitreg ); p++;
pieces[ p ] = "6,10,9,7".split( splitreg ); p++;
pieces[ p ] = "6,11,6,17".split( splitreg ); p++;
pieces[ p ] = "6,11,7,17".split( splitreg ); p++;
pieces[ p ] = "6,11,12,10".split( splitreg ); p++;
pieces[ p ] = "6,11,14,7".split( splitreg ); p++;
pieces[ p ] = "6,11,17,12".split( splitreg ); p++;
pieces[ p ] = "6,12,9,11".split( splitreg ); p++;
pieces[ p ] = "6,12,9,15".split( splitreg ); p++;
pieces[ p ] = "6,12,16,8".split( splitreg ); p++;
pieces[ p ] = "6,13,6,17".split( splitreg ); p++;
pieces[ p ] = "6,13,7,14".split( splitreg ); p++;
pieces[ p ] = "6,14,16,16".split( splitreg ); p++;
pieces[ p ] = "6,15,9,12".split( splitreg ); p++;
pieces[ p ] = "6,15,16,15".split( splitreg ); p++;
pieces[ p ] = "6,15,17,16".split( splitreg ); p++;
pieces[ p ] = "6,16,10,12".split( splitreg ); p++;
pieces[ p ] = "6,16,17,11".split( splitreg ); p++;
pieces[ p ] = "6,17,13,7".split( splitreg ); p++;
pieces[ p ] = "6,17,15,11".split( splitreg ); p++;
pieces[ p ] = "7,7,7,10".split( splitreg ); p++;
pieces[ p ] = "7,8,8,10".split( splitreg ); p++;
pieces[ p ] = "7,9,7,17".split( splitreg ); p++;
pieces[ p ] = "7,9,14,15".split( splitreg ); p++;
pieces[ p ] = "7,10,8,11".split( splitreg ); p++;
pieces[ p ] = "7,10,16,15".split( splitreg ); p++;
pieces[ p ] = "7,11,9,15".split( splitreg ); p++;
pieces[ p ] = "7,12,15,9".split( splitreg ); p++;
pieces[ p ] = "7,12,15,11".split( splitreg ); p++;
pieces[ p ] = "7,13,15,13".split( splitreg ); p++;
pieces[ p ] = "7,14,7,16".split( splitreg ); p++;
pieces[ p ] = "7,15,15,14".split( splitreg ); p++;
pieces[ p ] = "7,15,16,10".split( splitreg ); p++;
pieces[ p ] = "7,16,12,12".split( splitreg ); p++;
pieces[ p ] = "8,8,8,14".split( splitreg ); p++;
pieces[ p ] = "8,9,8,11".split( splitreg ); p++;
pieces[ p ] = "8,9,16,12".split( splitreg ); p++;
pieces[ p ] = "8,9,17,16".split( splitreg ); p++;
pieces[ p ] = "8,11,14,12".split( splitreg ); p++;
pieces[ p ] = "8,12,9,11".split( splitreg ); p++;
pieces[ p ] = "8,13,9,16".split( splitreg ); p++;
pieces[ p ] = "8,13,11,10".split( splitreg ); p++;
pieces[ p ] = "8,14,10,17".split( splitreg ); p++;
pieces[ p ] = "8,15,11,15".split( splitreg ); p++;
pieces[ p ] = "8,16,10,13".split( splitreg ); p++;
pieces[ p ] = "8,16,10,14".split( splitreg ); p++;
pieces[ p ] = "8,17,17,11".split( splitreg ); p++;
pieces[ p ] = "9,9,9,13".split( splitreg ); p++;
pieces[ p ] = "9,9,16,15".split( splitreg ); p++;
pieces[ p ] = "9,11,13,12".split( splitreg ); p++;
pieces[ p ] = "9,12,16,12".split( splitreg ); p++;
pieces[ p ] = "9,16,16,14".split( splitreg ); p++;
pieces[ p ] = "10,10,10,15".split( splitreg ); p++;
pieces[ p ] = "10,10,13,11".split( splitreg ); p++;
pieces[ p ] = "10,10,17,14".split( splitreg ); p++;
pieces[ p ] = "10,12,13,15".split( splitreg ); p++;
pieces[ p ] = "10,13,15,17".split( splitreg ); p++;
pieces[ p ] = "10,14,13,12".split( splitreg ); p++;
pieces[ p ] = "10,15,11,13".split( splitreg ); p++;
pieces[ p ] = "10,17,13,14".split( splitreg ); p++;
pieces[ p ] = "10,17,16,13".split( splitreg ); p++;
pieces[ p ] = "11,11,17,12".split( splitreg ); p++;
pieces[ p ] = "11,15,11,16".split( splitreg ); p++;
pieces[ p ] = "11,15,16,12".split( splitreg ); p++;
pieces[ p ] = "11,17,17,14".split( splitreg ); p++;
pieces[ p ] = "12,14,16,14".split( splitreg ); p++;
pieces[ p ] = "12,17,14,17".split( splitreg ); p++;
pieces[ p ] = "13,14,16,16".split( splitreg ); p++;
pieces[ p ] = "14,14,14,15".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

