
puzzles[ nb_puzzles ] = "brendan/pieces_13x09.txt.js,Brendan 13x09".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_13x09.txt.js" ) {

board_w = 13;
board_h = 9;


pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,0,3,4".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,1,6,2".split( splitreg ); p++;
pieces[ p ] = "0,1,6,4".split( splitreg ); p++;
pieces[ p ] = "0,1,9,1".split( splitreg ); p++;
pieces[ p ] = "0,1,9,2".split( splitreg ); p++;
pieces[ p ] = "0,1,10,3".split( splitreg ); p++;
pieces[ p ] = "0,1,11,3".split( splitreg ); p++;
pieces[ p ] = "0,1,12,3".split( splitreg ); p++;
pieces[ p ] = "0,1,13,1".split( splitreg ); p++;
pieces[ p ] = "0,1,14,2".split( splitreg ); p++;
pieces[ p ] = "0,1,15,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,4".split( splitreg ); p++;
pieces[ p ] = "0,2,8,3".split( splitreg ); p++;
pieces[ p ] = "0,2,9,3".split( splitreg ); p++;
pieces[ p ] = "0,2,11,1".split( splitreg ); p++;
pieces[ p ] = "0,2,13,1".split( splitreg ); p++;
pieces[ p ] = "0,2,13,2".split( splitreg ); p++;
pieces[ p ] = "0,2,14,1".split( splitreg ); p++;
pieces[ p ] = "0,2,15,4".split( splitreg ); p++;
pieces[ p ] = "0,3,5,4".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,7,2".split( splitreg ); p++;
pieces[ p ] = "0,3,8,2".split( splitreg ); p++;
pieces[ p ] = "0,3,10,4".split( splitreg ); p++;
pieces[ p ] = "0,3,13,1".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,15,3".split( splitreg ); p++;
pieces[ p ] = "0,4,5,1".split( splitreg ); p++;
pieces[ p ] = "0,4,6,3".split( splitreg ); p++;
pieces[ p ] = "0,4,7,1".split( splitreg ); p++;
pieces[ p ] = "0,4,7,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,4".split( splitreg ); p++;
pieces[ p ] = "0,4,11,4".split( splitreg ); p++;
pieces[ p ] = "0,4,12,4".split( splitreg ); p++;
pieces[ p ] = "0,4,14,3".split( splitreg ); p++;
pieces[ p ] = "5,5,10,6".split( splitreg ); p++;
pieces[ p ] = "5,6,12,9".split( splitreg ); p++;
pieces[ p ] = "5,6,14,8".split( splitreg ); p++;
pieces[ p ] = "5,7,13,6".split( splitreg ); p++;
pieces[ p ] = "5,7,13,7".split( splitreg ); p++;
pieces[ p ] = "5,7,15,11".split( splitreg ); p++;
pieces[ p ] = "5,8,5,14".split( splitreg ); p++;
pieces[ p ] = "5,8,5,15".split( splitreg ); p++;
pieces[ p ] = "5,8,7,9".split( splitreg ); p++;
pieces[ p ] = "5,8,8,14".split( splitreg ); p++;
pieces[ p ] = "5,8,15,9".split( splitreg ); p++;
pieces[ p ] = "5,9,6,12".split( splitreg ); p++;
pieces[ p ] = "5,9,8,9".split( splitreg ); p++;
pieces[ p ] = "5,9,8,15".split( splitreg ); p++;
pieces[ p ] = "5,9,10,15".split( splitreg ); p++;
pieces[ p ] = "5,9,15,6".split( splitreg ); p++;
pieces[ p ] = "5,10,8,14".split( splitreg ); p++;
pieces[ p ] = "5,10,11,8".split( splitreg ); p++;
pieces[ p ] = "5,11,8,8".split( splitreg ); p++;
pieces[ p ] = "5,11,9,8".split( splitreg ); p++;
pieces[ p ] = "5,12,6,12".split( splitreg ); p++;
pieces[ p ] = "5,12,7,6".split( splitreg ); p++;
pieces[ p ] = "5,13,11,6".split( splitreg ); p++;
pieces[ p ] = "5,14,9,12".split( splitreg ); p++;
pieces[ p ] = "5,15,7,15".split( splitreg ); p++;
pieces[ p ] = "5,15,8,8".split( splitreg ); p++;
pieces[ p ] = "5,15,13,7".split( splitreg ); p++;
pieces[ p ] = "6,6,8,7".split( splitreg ); p++;
pieces[ p ] = "6,6,9,7".split( splitreg ); p++;
pieces[ p ] = "6,7,6,8".split( splitreg ); p++;
pieces[ p ] = "6,7,7,14".split( splitreg ); p++;
pieces[ p ] = "6,7,10,8".split( splitreg ); p++;
pieces[ p ] = "6,11,9,9".split( splitreg ); p++;
pieces[ p ] = "6,11,11,11".split( splitreg ); p++;
pieces[ p ] = "6,11,13,10".split( splitreg ); p++;
pieces[ p ] = "6,11,14,11".split( splitreg ); p++;
pieces[ p ] = "6,12,11,13".split( splitreg ); p++;
pieces[ p ] = "6,12,15,7".split( splitreg ); p++;
pieces[ p ] = "6,13,11,15".split( splitreg ); p++;
pieces[ p ] = "6,13,15,12".split( splitreg ); p++;
pieces[ p ] = "6,14,10,12".split( splitreg ); p++;
pieces[ p ] = "6,15,9,11".split( splitreg ); p++;
pieces[ p ] = "6,15,9,12".split( splitreg ); p++;
pieces[ p ] = "7,7,12,9".split( splitreg ); p++;
pieces[ p ] = "7,7,14,10".split( splitreg ); p++;
pieces[ p ] = "7,8,9,9".split( splitreg ); p++;
pieces[ p ] = "7,9,12,9".split( splitreg ); p++;
pieces[ p ] = "7,9,15,13".split( splitreg ); p++;
pieces[ p ] = "7,10,9,8".split( splitreg ); p++;
pieces[ p ] = "7,10,9,14".split( splitreg ); p++;
pieces[ p ] = "7,12,10,9".split( splitreg ); p++;
pieces[ p ] = "7,13,10,11".split( splitreg ); p++;
pieces[ p ] = "7,13,15,12".split( splitreg ); p++;
pieces[ p ] = "7,14,12,8".split( splitreg ); p++;
pieces[ p ] = "8,8,15,11".split( splitreg ); p++;
pieces[ p ] = "8,10,8,15".split( splitreg ); p++;
pieces[ p ] = "8,11,10,14".split( splitreg ); p++;
pieces[ p ] = "8,11,14,11".split( splitreg ); p++;
pieces[ p ] = "8,13,10,13".split( splitreg ); p++;
pieces[ p ] = "8,14,10,13".split( splitreg ); p++;
pieces[ p ] = "9,10,12,14".split( splitreg ); p++;
pieces[ p ] = "9,11,11,10".split( splitreg ); p++;
pieces[ p ] = "9,12,13,14".split( splitreg ); p++;
pieces[ p ] = "9,14,15,13".split( splitreg ); p++;
pieces[ p ] = "10,10,11,15".split( splitreg ); p++;
pieces[ p ] = "10,10,13,13".split( splitreg ); p++;
pieces[ p ] = "10,13,12,11".split( splitreg ); p++;
pieces[ p ] = "10,13,13,11".split( splitreg ); p++;
pieces[ p ] = "10,13,14,15".split( splitreg ); p++;
pieces[ p ] = "10,14,12,12".split( splitreg ); p++;
pieces[ p ] = "10,14,15,12".split( splitreg ); p++;
pieces[ p ] = "10,15,12,12".split( splitreg ); p++;
pieces[ p ] = "11,12,15,15".split( splitreg ); p++;
pieces[ p ] = "11,13,14,14".split( splitreg ); p++;
pieces[ p ] = "11,14,12,12".split( splitreg ); p++;
pieces[ p ] = "11,14,13,15".split( splitreg ); p++;
pieces[ p ] = "12,14,13,13".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

