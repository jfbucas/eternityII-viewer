
puzzles[ nb_puzzles ] = "brendan/pieces_13x10.txt.js,Brendan 13x10".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_13x10.txt.js" ) {

board_w = 13;
board_h = 10;


pieces[ p ] = "0,0,1,1".split( splitreg ); p++;
pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,2,1".split( splitreg ); p++;
pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,1,5,1".split( splitreg ); p++;
pieces[ p ] = "0,1,5,2".split( splitreg ); p++;
pieces[ p ] = "0,1,8,2".split( splitreg ); p++;
pieces[ p ] = "0,1,9,4".split( splitreg ); p++;
pieces[ p ] = "0,1,10,1".split( splitreg ); p++;
pieces[ p ] = "0,1,10,2".split( splitreg ); p++;
pieces[ p ] = "0,1,11,4".split( splitreg ); p++;
pieces[ p ] = "0,1,14,3".split( splitreg ); p++;
pieces[ p ] = "0,1,15,4".split( splitreg ); p++;
pieces[ p ] = "0,2,6,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,2".split( splitreg ); p++;
pieces[ p ] = "0,2,8,3".split( splitreg ); p++;
pieces[ p ] = "0,2,9,4".split( splitreg ); p++;
pieces[ p ] = "0,2,10,2".split( splitreg ); p++;
pieces[ p ] = "0,2,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,14,1".split( splitreg ); p++;
pieces[ p ] = "0,2,14,2".split( splitreg ); p++;
pieces[ p ] = "0,2,15,4".split( splitreg ); p++;
pieces[ p ] = "0,3,5,4".split( splitreg ); p++;
pieces[ p ] = "0,3,8,1".split( splitreg ); p++;
pieces[ p ] = "0,3,8,2".split( splitreg ); p++;
pieces[ p ] = "0,3,12,1".split( splitreg ); p++;
pieces[ p ] = "0,3,12,4".split( splitreg ); p++;
pieces[ p ] = "0,3,14,3".split( splitreg ); p++;
pieces[ p ] = "0,3,15,1".split( splitreg ); p++;
pieces[ p ] = "0,3,15,2".split( splitreg ); p++;
pieces[ p ] = "0,3,15,3".split( splitreg ); p++;
pieces[ p ] = "0,3,16,2".split( splitreg ); p++;
pieces[ p ] = "0,4,5,1".split( splitreg ); p++;
pieces[ p ] = "0,4,6,3".split( splitreg ); p++;
pieces[ p ] = "0,4,7,3".split( splitreg ); p++;
pieces[ p ] = "0,4,7,4".split( splitreg ); p++;
pieces[ p ] = "0,4,9,1".split( splitreg ); p++;
pieces[ p ] = "0,4,11,3".split( splitreg ); p++;
pieces[ p ] = "0,4,13,1".split( splitreg ); p++;
pieces[ p ] = "0,4,14,4".split( splitreg ); p++;
pieces[ p ] = "0,4,16,2".split( splitreg ); p++;
pieces[ p ] = "0,4,16,4".split( splitreg ); p++;
pieces[ p ] = "5,5,6,7".split( splitreg ); p++;
pieces[ p ] = "5,5,7,7".split( splitreg ); p++;
pieces[ p ] = "5,5,16,10".split( splitreg ); p++;
pieces[ p ] = "5,6,11,16".split( splitreg ); p++;
pieces[ p ] = "5,7,6,8".split( splitreg ); p++;
pieces[ p ] = "5,8,5,15".split( splitreg ); p++;
pieces[ p ] = "5,8,8,8".split( splitreg ); p++;
pieces[ p ] = "5,8,12,12".split( splitreg ); p++;
pieces[ p ] = "5,8,12,14".split( splitreg ); p++;
pieces[ p ] = "5,8,16,6".split( splitreg ); p++;
pieces[ p ] = "5,9,10,7".split( splitreg ); p++;
pieces[ p ] = "5,9,11,9".split( splitreg ); p++;
pieces[ p ] = "5,10,9,16".split( splitreg ); p++;
pieces[ p ] = "5,10,12,15".split( splitreg ); p++;
pieces[ p ] = "5,12,10,16".split( splitreg ); p++;
pieces[ p ] = "5,12,12,11".split( splitreg ); p++;
pieces[ p ] = "5,13,5,16".split( splitreg ); p++;
pieces[ p ] = "5,13,10,13".split( splitreg ); p++;
pieces[ p ] = "5,13,11,12".split( splitreg ); p++;
pieces[ p ] = "5,14,8,13".split( splitreg ); p++;
pieces[ p ] = "5,14,13,6".split( splitreg ); p++;
pieces[ p ] = "5,14,13,11".split( splitreg ); p++;
pieces[ p ] = "5,14,16,15".split( splitreg ); p++;
pieces[ p ] = "5,15,7,6".split( splitreg ); p++;
pieces[ p ] = "5,16,9,7".split( splitreg ); p++;
pieces[ p ] = "6,6,8,9".split( splitreg ); p++;
pieces[ p ] = "6,6,11,9".split( splitreg ); p++;
pieces[ p ] = "6,6,14,15".split( splitreg ); p++;
pieces[ p ] = "6,7,9,7".split( splitreg ); p++;
pieces[ p ] = "6,7,15,8".split( splitreg ); p++;
pieces[ p ] = "6,9,6,11".split( splitreg ); p++;
pieces[ p ] = "6,9,6,12".split( splitreg ); p++;
pieces[ p ] = "6,9,7,14".split( splitreg ); p++;
pieces[ p ] = "6,9,10,13".split( splitreg ); p++;
pieces[ p ] = "6,9,12,15".split( splitreg ); p++;
pieces[ p ] = "6,9,13,12".split( splitreg ); p++;
pieces[ p ] = "6,10,8,9".split( splitreg ); p++;
pieces[ p ] = "6,11,12,15".split( splitreg ); p++;
pieces[ p ] = "6,11,14,14".split( splitreg ); p++;
pieces[ p ] = "6,12,11,7".split( splitreg ); p++;
pieces[ p ] = "6,12,12,9".split( splitreg ); p++;
pieces[ p ] = "6,12,12,14".split( splitreg ); p++;
pieces[ p ] = "6,14,11,7".split( splitreg ); p++;
pieces[ p ] = "6,14,13,8".split( splitreg ); p++;
pieces[ p ] = "6,15,8,16".split( splitreg ); p++;
pieces[ p ] = "6,15,12,16".split( splitreg ); p++;
pieces[ p ] = "7,7,7,14".split( splitreg ); p++;
pieces[ p ] = "7,7,7,15".split( splitreg ); p++;
pieces[ p ] = "7,9,10,15".split( splitreg ); p++;
pieces[ p ] = "7,10,12,8".split( splitreg ); p++;
pieces[ p ] = "7,10,13,11".split( splitreg ); p++;
pieces[ p ] = "7,10,15,16".split( splitreg ); p++;
pieces[ p ] = "7,12,14,14".split( splitreg ); p++;
pieces[ p ] = "7,13,8,14".split( splitreg ); p++;
pieces[ p ] = "7,13,9,16".split( splitreg ); p++;
pieces[ p ] = "7,13,16,13".split( splitreg ); p++;
pieces[ p ] = "7,14,12,16".split( splitreg ); p++;
pieces[ p ] = "7,14,15,15".split( splitreg ); p++;
pieces[ p ] = "7,16,10,15".split( splitreg ); p++;
pieces[ p ] = "7,16,13,8".split( splitreg ); p++;
pieces[ p ] = "8,8,11,13".split( splitreg ); p++;
pieces[ p ] = "8,10,11,11".split( splitreg ); p++;
pieces[ p ] = "8,10,14,14".split( splitreg ); p++;
pieces[ p ] = "8,11,13,15".split( splitreg ); p++;
pieces[ p ] = "8,13,16,13".split( splitreg ); p++;
pieces[ p ] = "8,14,10,12".split( splitreg ); p++;
pieces[ p ] = "8,15,14,16".split( splitreg ); p++;
pieces[ p ] = "8,15,16,13".split( splitreg ); p++;
pieces[ p ] = "8,16,9,10".split( splitreg ); p++;
pieces[ p ] = "8,16,11,10".split( splitreg ); p++;
pieces[ p ] = "9,9,13,11".split( splitreg ); p++;
pieces[ p ] = "9,10,9,11".split( splitreg ); p++;
pieces[ p ] = "9,10,12,15".split( splitreg ); p++;
pieces[ p ] = "9,11,16,11".split( splitreg ); p++;
pieces[ p ] = "9,13,14,11".split( splitreg ); p++;
pieces[ p ] = "9,15,11,10".split( splitreg ); p++;
pieces[ p ] = "9,15,13,11".split( splitreg ); p++;
pieces[ p ] = "9,16,10,11".split( splitreg ); p++;
pieces[ p ] = "10,11,16,15".split( splitreg ); p++;
pieces[ p ] = "10,13,15,15".split( splitreg ); p++;
pieces[ p ] = "10,14,13,16".split( splitreg ); p++;
pieces[ p ] = "10,14,15,12".split( splitreg ); p++;
pieces[ p ] = "10,14,16,11".split( splitreg ); p++;
pieces[ p ] = "10,15,13,12".split( splitreg ); p++;
pieces[ p ] = "10,16,12,13".split( splitreg ); p++;
pieces[ p ] = "11,11,16,12".split( splitreg ); p++;
pieces[ p ] = "11,16,12,12".split( splitreg ); p++;
pieces[ p ] = "12,13,13,14".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

