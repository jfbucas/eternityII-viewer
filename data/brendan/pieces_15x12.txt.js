
puzzles[ nb_puzzles ] = "brendan/pieces_15x12.txt.js,Brendan 15x12".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_15x12.txt.js" ) {

board_w = 15;
board_h = 12;


pieces[ p ] = "0,0,1,4".split( splitreg ); p++;
pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,0,3,5".split( splitreg ); p++;
pieces[ p ] = "0,1,6,3".split( splitreg ); p++;
pieces[ p ] = "0,1,8,2".split( splitreg ); p++;
pieces[ p ] = "0,1,11,1".split( splitreg ); p++;
pieces[ p ] = "0,1,11,4".split( splitreg ); p++;
pieces[ p ] = "0,1,16,5".split( splitreg ); p++;
pieces[ p ] = "0,1,18,1".split( splitreg ); p++;
pieces[ p ] = "0,1,18,2".split( splitreg ); p++;
pieces[ p ] = "0,1,18,3".split( splitreg ); p++;
pieces[ p ] = "0,1,19,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,2".split( splitreg ); p++;
pieces[ p ] = "0,2,11,4".split( splitreg ); p++;
pieces[ p ] = "0,2,11,5".split( splitreg ); p++;
pieces[ p ] = "0,2,13,4".split( splitreg ); p++;
pieces[ p ] = "0,2,16,1".split( splitreg ); p++;
pieces[ p ] = "0,2,18,4".split( splitreg ); p++;
pieces[ p ] = "0,2,19,3".split( splitreg ); p++;
pieces[ p ] = "0,2,19,5".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,3".split( splitreg ); p++;
pieces[ p ] = "0,3,7,3".split( splitreg ); p++;
pieces[ p ] = "0,3,12,3".split( splitreg ); p++;
pieces[ p ] = "0,3,13,5".split( splitreg ); p++;
pieces[ p ] = "0,3,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,16,1".split( splitreg ); p++;
pieces[ p ] = "0,3,18,5".split( splitreg ); p++;
pieces[ p ] = "0,3,19,1".split( splitreg ); p++;
pieces[ p ] = "0,4,6,5".split( splitreg ); p++;
pieces[ p ] = "0,4,8,2".split( splitreg ); p++;
pieces[ p ] = "0,4,13,4".split( splitreg ); p++;
pieces[ p ] = "0,4,14,3".split( splitreg ); p++;
pieces[ p ] = "0,4,15,5".split( splitreg ); p++;
pieces[ p ] = "0,4,16,1".split( splitreg ); p++;
pieces[ p ] = "0,4,17,2".split( splitreg ); p++;
pieces[ p ] = "0,4,18,1".split( splitreg ); p++;
pieces[ p ] = "0,4,18,4".split( splitreg ); p++;
pieces[ p ] = "0,4,19,2".split( splitreg ); p++;
pieces[ p ] = "0,5,7,1".split( splitreg ); p++;
pieces[ p ] = "0,5,8,5".split( splitreg ); p++;
pieces[ p ] = "0,5,9,3".split( splitreg ); p++;
pieces[ p ] = "0,5,9,4".split( splitreg ); p++;
pieces[ p ] = "0,5,11,5".split( splitreg ); p++;
pieces[ p ] = "0,5,12,3".split( splitreg ); p++;
pieces[ p ] = "0,5,13,2".split( splitreg ); p++;
pieces[ p ] = "0,5,14,4".split( splitreg ); p++;
pieces[ p ] = "0,5,15,1".split( splitreg ); p++;
pieces[ p ] = "0,5,17,2".split( splitreg ); p++;
pieces[ p ] = "6,6,10,12".split( splitreg ); p++;
pieces[ p ] = "6,7,7,17".split( splitreg ); p++;
pieces[ p ] = "6,7,7,19".split( splitreg ); p++;
pieces[ p ] = "6,7,18,12".split( splitreg ); p++;
pieces[ p ] = "6,8,10,15".split( splitreg ); p++;
pieces[ p ] = "6,9,10,14".split( splitreg ); p++;
pieces[ p ] = "6,9,10,15".split( splitreg ); p++;
pieces[ p ] = "6,9,18,11".split( splitreg ); p++;
pieces[ p ] = "6,11,6,14".split( splitreg ); p++;
pieces[ p ] = "6,11,9,15".split( splitreg ); p++;
pieces[ p ] = "6,11,16,16".split( splitreg ); p++;
pieces[ p ] = "6,11,18,12".split( splitreg ); p++;
pieces[ p ] = "6,12,7,17".split( splitreg ); p++;
pieces[ p ] = "6,12,8,9".split( splitreg ); p++;
pieces[ p ] = "6,12,11,9".split( splitreg ); p++;
pieces[ p ] = "6,12,12,13".split( splitreg ); p++;
pieces[ p ] = "6,12,17,8".split( splitreg ); p++;
pieces[ p ] = "6,13,7,15".split( splitreg ); p++;
pieces[ p ] = "6,13,8,8".split( splitreg ); p++;
pieces[ p ] = "6,14,11,9".split( splitreg ); p++;
pieces[ p ] = "6,14,14,15".split( splitreg ); p++;
pieces[ p ] = "6,15,7,13".split( splitreg ); p++;
pieces[ p ] = "6,15,12,13".split( splitreg ); p++;
pieces[ p ] = "6,15,16,12".split( splitreg ); p++;
pieces[ p ] = "6,15,16,14".split( splitreg ); p++;
pieces[ p ] = "6,16,9,10".split( splitreg ); p++;
pieces[ p ] = "6,16,19,17".split( splitreg ); p++;
pieces[ p ] = "6,17,6,19".split( splitreg ); p++;
pieces[ p ] = "6,17,15,10".split( splitreg ); p++;
pieces[ p ] = "6,18,11,11".split( splitreg ); p++;
pieces[ p ] = "6,18,14,17".split( splitreg ); p++;
pieces[ p ] = "6,18,15,10".split( splitreg ); p++;
pieces[ p ] = "6,18,16,13".split( splitreg ); p++;
pieces[ p ] = "6,18,19,17".split( splitreg ); p++;
pieces[ p ] = "6,19,19,17".split( splitreg ); p++;
pieces[ p ] = "7,7,7,8".split( splitreg ); p++;
pieces[ p ] = "7,7,16,9".split( splitreg ); p++;
pieces[ p ] = "7,8,10,19".split( splitreg ); p++;
pieces[ p ] = "7,8,13,19".split( splitreg ); p++;
pieces[ p ] = "7,9,14,16".split( splitreg ); p++;
pieces[ p ] = "7,10,10,13".split( splitreg ); p++;
pieces[ p ] = "7,10,16,8".split( splitreg ); p++;
pieces[ p ] = "7,11,12,10".split( splitreg ); p++;
pieces[ p ] = "7,11,14,9".split( splitreg ); p++;
pieces[ p ] = "7,12,7,18".split( splitreg ); p++;
pieces[ p ] = "7,12,12,9".split( splitreg ); p++;
pieces[ p ] = "7,12,19,14".split( splitreg ); p++;
pieces[ p ] = "7,14,17,9".split( splitreg ); p++;
pieces[ p ] = "7,14,19,16".split( splitreg ); p++;
pieces[ p ] = "7,15,8,13".split( splitreg ); p++;
pieces[ p ] = "7,15,16,15".split( splitreg ); p++;
pieces[ p ] = "7,15,19,9".split( splitreg ); p++;
pieces[ p ] = "7,15,19,18".split( splitreg ); p++;
pieces[ p ] = "7,16,9,9".split( splitreg ); p++;
pieces[ p ] = "7,16,14,19".split( splitreg ); p++;
pieces[ p ] = "7,16,17,11".split( splitreg ); p++;
pieces[ p ] = "7,16,19,11".split( splitreg ); p++;
pieces[ p ] = "7,17,14,11".split( splitreg ); p++;
pieces[ p ] = "7,17,17,18".split( splitreg ); p++;
pieces[ p ] = "7,18,17,15".split( splitreg ); p++;
pieces[ p ] = "7,19,9,18".split( splitreg ); p++;
pieces[ p ] = "7,19,11,13".split( splitreg ); p++;
pieces[ p ] = "8,8,8,18".split( splitreg ); p++;
pieces[ p ] = "8,8,9,17".split( splitreg ); p++;
pieces[ p ] = "8,8,14,10".split( splitreg ); p++;
pieces[ p ] = "8,8,15,13".split( splitreg ); p++;
pieces[ p ] = "8,8,18,13".split( splitreg ); p++;
pieces[ p ] = "8,9,11,15".split( splitreg ); p++;
pieces[ p ] = "8,10,14,14".split( splitreg ); p++;
pieces[ p ] = "8,10,18,15".split( splitreg ); p++;
pieces[ p ] = "8,11,10,10".split( splitreg ); p++;
pieces[ p ] = "8,11,14,11".split( splitreg ); p++;
pieces[ p ] = "8,12,10,13".split( splitreg ); p++;
pieces[ p ] = "8,12,16,15".split( splitreg ); p++;
pieces[ p ] = "8,12,18,17".split( splitreg ); p++;
pieces[ p ] = "8,13,9,10".split( splitreg ); p++;
pieces[ p ] = "8,13,9,14".split( splitreg ); p++;
pieces[ p ] = "8,13,15,19".split( splitreg ); p++;
pieces[ p ] = "8,15,12,9".split( splitreg ); p++;
pieces[ p ] = "8,15,19,19".split( splitreg ); p++;
pieces[ p ] = "8,16,9,14".split( splitreg ); p++;
pieces[ p ] = "8,16,13,17".split( splitreg ); p++;
pieces[ p ] = "8,17,17,15".split( splitreg ); p++;
pieces[ p ] = "8,18,16,15".split( splitreg ); p++;
pieces[ p ] = "8,19,14,19".split( splitreg ); p++;
pieces[ p ] = "9,9,11,15".split( splitreg ); p++;
pieces[ p ] = "9,10,17,11".split( splitreg ); p++;
pieces[ p ] = "9,11,16,16".split( splitreg ); p++;
pieces[ p ] = "9,11,18,10".split( splitreg ); p++;
pieces[ p ] = "9,12,10,10".split( splitreg ); p++;
pieces[ p ] = "9,14,13,11".split( splitreg ); p++;
pieces[ p ] = "9,15,10,18".split( splitreg ); p++;
pieces[ p ] = "9,16,16,12".split( splitreg ); p++;
pieces[ p ] = "9,17,16,18".split( splitreg ); p++;
pieces[ p ] = "9,17,18,12".split( splitreg ); p++;
pieces[ p ] = "9,18,18,12".split( splitreg ); p++;
pieces[ p ] = "9,18,19,17".split( splitreg ); p++;
pieces[ p ] = "9,19,10,14".split( splitreg ); p++;
pieces[ p ] = "9,19,12,11".split( splitreg ); p++;
pieces[ p ] = "10,10,13,11".split( splitreg ); p++;
pieces[ p ] = "10,10,15,13".split( splitreg ); p++;
pieces[ p ] = "10,12,15,16".split( splitreg ); p++;
pieces[ p ] = "10,12,15,17".split( splitreg ); p++;
pieces[ p ] = "10,13,11,11".split( splitreg ); p++;
pieces[ p ] = "10,13,14,17".split( splitreg ); p++;
pieces[ p ] = "10,14,14,16".split( splitreg ); p++;
pieces[ p ] = "10,15,12,19".split( splitreg ); p++;
pieces[ p ] = "10,15,16,16".split( splitreg ); p++;
pieces[ p ] = "10,16,18,11".split( splitreg ); p++;
pieces[ p ] = "10,17,12,12".split( splitreg ); p++;
pieces[ p ] = "10,17,16,12".split( splitreg ); p++;
pieces[ p ] = "10,19,13,19".split( splitreg ); p++;
pieces[ p ] = "11,12,14,18".split( splitreg ); p++;
pieces[ p ] = "11,16,14,14".split( splitreg ); p++;
pieces[ p ] = "11,17,13,18".split( splitreg ); p++;
pieces[ p ] = "11,17,13,19".split( splitreg ); p++;
pieces[ p ] = "11,18,13,16".split( splitreg ); p++;
pieces[ p ] = "11,19,19,14".split( splitreg ); p++;
pieces[ p ] = "12,12,14,14".split( splitreg ); p++;
pieces[ p ] = "12,12,19,17".split( splitreg ); p++;
pieces[ p ] = "12,14,15,18".split( splitreg ); p++;
pieces[ p ] = "12,16,13,17".split( splitreg ); p++;
pieces[ p ] = "13,13,16,17".split( splitreg ); p++;
pieces[ p ] = "13,13,18,19".split( splitreg ); p++;
pieces[ p ] = "13,14,14,19".split( splitreg ); p++;
pieces[ p ] = "13,15,15,18".split( splitreg ); p++;
pieces[ p ] = "13,17,17,17".split( splitreg ); p++;
pieces[ p ] = "13,17,18,16".split( splitreg ); p++;
pieces[ p ] = "13,19,14,19".split( splitreg ); p++;
pieces[ p ] = "14,15,15,17".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

