
puzzles[ nb_puzzles ] = "brendan/pieces_19x08.txt.js,Brendan 19x08".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_19x08.txt.js" ) {

board_w = 19;
board_h = 8;


pieces[ p ] = "0,0,3,3".split( splitreg ); p++;
pieces[ p ] = "0,0,3,4".split( splitreg ); p++;
pieces[ p ] = "0,0,4,2".split( splitreg ); p++;
pieces[ p ] = "0,0,5,2".split( splitreg ); p++;
pieces[ p ] = "0,1,7,3".split( splitreg ); p++;
pieces[ p ] = "0,1,7,4".split( splitreg ); p++;
pieces[ p ] = "0,1,8,2".split( splitreg ); p++;
pieces[ p ] = "0,1,8,5".split( splitreg ); p++;
pieces[ p ] = "0,1,10,2".split( splitreg ); p++;
pieces[ p ] = "0,1,10,4".split( splitreg ); p++;
pieces[ p ] = "0,1,11,3".split( splitreg ); p++;
pieces[ p ] = "0,1,12,5".split( splitreg ); p++;
pieces[ p ] = "0,1,13,5".split( splitreg ); p++;
pieces[ p ] = "0,1,17,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,1".split( splitreg ); p++;
pieces[ p ] = "0,2,9,1".split( splitreg ); p++;
pieces[ p ] = "0,2,10,1".split( splitreg ); p++;
pieces[ p ] = "0,2,12,4".split( splitreg ); p++;
pieces[ p ] = "0,2,13,1".split( splitreg ); p++;
pieces[ p ] = "0,2,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,15,2".split( splitreg ); p++;
pieces[ p ] = "0,2,15,4".split( splitreg ); p++;
pieces[ p ] = "0,2,15,5".split( splitreg ); p++;
pieces[ p ] = "0,2,16,5".split( splitreg ); p++;
pieces[ p ] = "0,3,10,3".split( splitreg ); p++;
pieces[ p ] = "0,3,10,4".split( splitreg ); p++;
pieces[ p ] = "0,3,12,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,1".split( splitreg ); p++;
pieces[ p ] = "0,3,15,3".split( splitreg ); p++;
pieces[ p ] = "0,3,16,4".split( splitreg ); p++;
pieces[ p ] = "0,3,17,1".split( splitreg ); p++;
pieces[ p ] = "0,3,17,5".split( splitreg ); p++;
pieces[ p ] = "0,4,9,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,4".split( splitreg ); p++;
pieces[ p ] = "0,4,11,3".split( splitreg ); p++;
pieces[ p ] = "0,4,14,5".split( splitreg ); p++;
pieces[ p ] = "0,4,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,16,3".split( splitreg ); p++;
pieces[ p ] = "0,4,16,5".split( splitreg ); p++;
pieces[ p ] = "0,4,17,1".split( splitreg ); p++;
pieces[ p ] = "0,5,7,5".split( splitreg ); p++;
pieces[ p ] = "0,5,10,4".split( splitreg ); p++;
pieces[ p ] = "0,5,12,4".split( splitreg ); p++;
pieces[ p ] = "0,5,14,5".split( splitreg ); p++;
pieces[ p ] = "0,5,15,1".split( splitreg ); p++;
pieces[ p ] = "0,5,15,2".split( splitreg ); p++;
pieces[ p ] = "0,5,15,3".split( splitreg ); p++;
pieces[ p ] = "0,5,17,1".split( splitreg ); p++;
pieces[ p ] = "0,5,17,2".split( splitreg ); p++;
pieces[ p ] = "6,6,6,12".split( splitreg ); p++;
pieces[ p ] = "6,6,12,8".split( splitreg ); p++;
pieces[ p ] = "6,6,12,17".split( splitreg ); p++;
pieces[ p ] = "6,7,11,14".split( splitreg ); p++;
pieces[ p ] = "6,7,14,11".split( splitreg ); p++;
pieces[ p ] = "6,8,9,17".split( splitreg ); p++;
pieces[ p ] = "6,8,15,9".split( splitreg ); p++;
pieces[ p ] = "6,8,17,13".split( splitreg ); p++;
pieces[ p ] = "6,9,12,8".split( splitreg ); p++;
pieces[ p ] = "6,9,13,14".split( splitreg ); p++;
pieces[ p ] = "6,9,16,10".split( splitreg ); p++;
pieces[ p ] = "6,10,7,10".split( splitreg ); p++;
pieces[ p ] = "6,10,13,13".split( splitreg ); p++;
pieces[ p ] = "6,10,13,16".split( splitreg ); p++;
pieces[ p ] = "6,11,6,15".split( splitreg ); p++;
pieces[ p ] = "6,11,9,11".split( splitreg ); p++;
pieces[ p ] = "6,11,10,12".split( splitreg ); p++;
pieces[ p ] = "6,11,14,10".split( splitreg ); p++;
pieces[ p ] = "6,11,16,7".split( splitreg ); p++;
pieces[ p ] = "6,11,16,8".split( splitreg ); p++;
pieces[ p ] = "6,11,17,16".split( splitreg ); p++;
pieces[ p ] = "6,12,6,15".split( splitreg ); p++;
pieces[ p ] = "6,12,7,11".split( splitreg ); p++;
pieces[ p ] = "6,12,9,11".split( splitreg ); p++;
pieces[ p ] = "6,13,9,9".split( splitreg ); p++;
pieces[ p ] = "6,13,16,11".split( splitreg ); p++;
pieces[ p ] = "6,15,7,14".split( splitreg ); p++;
pieces[ p ] = "6,15,9,8".split( splitreg ); p++;
pieces[ p ] = "6,15,12,14".split( splitreg ); p++;
pieces[ p ] = "6,16,14,8".split( splitreg ); p++;
pieces[ p ] = "6,17,11,11".split( splitreg ); p++;
pieces[ p ] = "6,17,16,10".split( splitreg ); p++;
pieces[ p ] = "7,7,7,14".split( splitreg ); p++;
pieces[ p ] = "7,7,8,8".split( splitreg ); p++;
pieces[ p ] = "7,7,12,9".split( splitreg ); p++;
pieces[ p ] = "7,7,12,11".split( splitreg ); p++;
pieces[ p ] = "7,8,13,16".split( splitreg ); p++;
pieces[ p ] = "7,8,16,16".split( splitreg ); p++;
pieces[ p ] = "7,10,11,10".split( splitreg ); p++;
pieces[ p ] = "7,10,13,13".split( splitreg ); p++;
pieces[ p ] = "7,10,16,12".split( splitreg ); p++;
pieces[ p ] = "7,11,10,16".split( splitreg ); p++;
pieces[ p ] = "7,11,12,15".split( splitreg ); p++;
pieces[ p ] = "7,11,14,14".split( splitreg ); p++;
pieces[ p ] = "7,12,12,15".split( splitreg ); p++;
pieces[ p ] = "7,13,8,17".split( splitreg ); p++;
pieces[ p ] = "7,13,15,12".split( splitreg ); p++;
pieces[ p ] = "7,13,17,16".split( splitreg ); p++;
pieces[ p ] = "7,14,13,16".split( splitreg ); p++;
pieces[ p ] = "7,15,14,8".split( splitreg ); p++;
pieces[ p ] = "7,16,8,11".split( splitreg ); p++;
pieces[ p ] = "7,16,9,12".split( splitreg ); p++;
pieces[ p ] = "7,16,11,17".split( splitreg ); p++;
pieces[ p ] = "7,17,10,9".split( splitreg ); p++;
pieces[ p ] = "7,17,10,11".split( splitreg ); p++;
pieces[ p ] = "8,8,10,12".split( splitreg ); p++;
pieces[ p ] = "8,8,14,9".split( splitreg ); p++;
pieces[ p ] = "8,8,15,16".split( splitreg ); p++;
pieces[ p ] = "8,9,9,12".split( splitreg ); p++;
pieces[ p ] = "8,10,8,15".split( splitreg ); p++;
pieces[ p ] = "8,11,10,9".split( splitreg ); p++;
pieces[ p ] = "8,12,9,10".split( splitreg ); p++;
pieces[ p ] = "8,12,16,17".split( splitreg ); p++;
pieces[ p ] = "8,13,10,11".split( splitreg ); p++;
pieces[ p ] = "8,13,14,10".split( splitreg ); p++;
pieces[ p ] = "8,13,15,17".split( splitreg ); p++;
pieces[ p ] = "8,14,15,12".split( splitreg ); p++;
pieces[ p ] = "8,14,17,14".split( splitreg ); p++;
pieces[ p ] = "8,15,9,15".split( splitreg ); p++;
pieces[ p ] = "8,15,14,11".split( splitreg ); p++;
pieces[ p ] = "8,15,16,13".split( splitreg ); p++;
pieces[ p ] = "8,17,9,10".split( splitreg ); p++;
pieces[ p ] = "9,9,10,15".split( splitreg ); p++;
pieces[ p ] = "9,12,11,17".split( splitreg ); p++;
pieces[ p ] = "9,12,14,14".split( splitreg ); p++;
pieces[ p ] = "9,13,11,17".split( splitreg ); p++;
pieces[ p ] = "9,13,14,13".split( splitreg ); p++;
pieces[ p ] = "9,13,14,14".split( splitreg ); p++;
pieces[ p ] = "9,13,15,16".split( splitreg ); p++;
pieces[ p ] = "9,13,17,13".split( splitreg ); p++;
pieces[ p ] = "9,15,16,16".split( splitreg ); p++;
pieces[ p ] = "9,16,11,12".split( splitreg ); p++;
pieces[ p ] = "9,16,14,10".split( splitreg ); p++;
pieces[ p ] = "9,17,11,11".split( splitreg ); p++;
pieces[ p ] = "9,17,14,13".split( splitreg ); p++;
pieces[ p ] = "9,17,15,16".split( splitreg ); p++;
pieces[ p ] = "9,17,17,14".split( splitreg ); p++;
pieces[ p ] = "10,12,11,15".split( splitreg ); p++;
pieces[ p ] = "10,12,12,17".split( splitreg ); p++;
pieces[ p ] = "10,13,10,16".split( splitreg ); p++;
pieces[ p ] = "10,15,13,13".split( splitreg ); p++;
pieces[ p ] = "10,15,16,14".split( splitreg ); p++;
pieces[ p ] = "11,12,16,15".split( splitreg ); p++;
pieces[ p ] = "11,13,11,17".split( splitreg ); p++;
pieces[ p ] = "11,14,17,15".split( splitreg ); p++;
pieces[ p ] = "12,12,12,14".split( splitreg ); p++;
pieces[ p ] = "12,14,14,13".split( splitreg ); p++;
pieces[ p ] = "12,15,16,13".split( splitreg ); p++;
pieces[ p ] = "13,14,15,17".split( splitreg ); p++;
pieces[ p ] = "13,14,17,14".split( splitreg ); p++;
pieces[ p ] = "13,17,14,16".split( splitreg ); p++;
pieces[ p ] = "15,16,17,16".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

