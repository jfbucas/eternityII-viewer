
puzzles[ nb_puzzles ] = "brendan/pieces_20x11.txt.js,Brendan 20x11".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_20x11.txt.js" ) {

board_w = 20;
board_h = 11;


pieces[ p ] = "0,0,1,2".split( splitreg ); p++;
pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,2,4".split( splitreg ); p++;
pieces[ p ] = "0,0,5,5".split( splitreg ); p++;
pieces[ p ] = "0,1,6,1".split( splitreg ); p++;
pieces[ p ] = "0,1,6,3".split( splitreg ); p++;
pieces[ p ] = "0,1,8,3".split( splitreg ); p++;
pieces[ p ] = "0,1,9,2".split( splitreg ); p++;
pieces[ p ] = "0,1,10,4".split( splitreg ); p++;
pieces[ p ] = "0,1,10,5".split( splitreg ); p++;
pieces[ p ] = "0,1,11,5".split( splitreg ); p++;
pieces[ p ] = "0,1,14,4".split( splitreg ); p++;
pieces[ p ] = "0,1,17,5".split( splitreg ); p++;
pieces[ p ] = "0,1,18,1".split( splitreg ); p++;
pieces[ p ] = "0,2,8,2".split( splitreg ); p++;
pieces[ p ] = "0,2,9,3".split( splitreg ); p++;
pieces[ p ] = "0,2,11,2".split( splitreg ); p++;
pieces[ p ] = "0,2,15,1".split( splitreg ); p++;
pieces[ p ] = "0,2,15,2".split( splitreg ); p++;
pieces[ p ] = "0,2,16,4".split( splitreg ); p++;
pieces[ p ] = "0,2,17,3".split( splitreg ); p++;
pieces[ p ] = "0,2,18,3".split( splitreg ); p++;
pieces[ p ] = "0,2,19,4".split( splitreg ); p++;
pieces[ p ] = "0,2,20,2".split( splitreg ); p++;
pieces[ p ] = "0,2,20,3".split( splitreg ); p++;
pieces[ p ] = "0,3,6,5".split( splitreg ); p++;
pieces[ p ] = "0,3,7,1".split( splitreg ); p++;
pieces[ p ] = "0,3,11,4".split( splitreg ); p++;
pieces[ p ] = "0,3,11,5".split( splitreg ); p++;
pieces[ p ] = "0,3,12,1".split( splitreg ); p++;
pieces[ p ] = "0,3,12,5".split( splitreg ); p++;
pieces[ p ] = "0,3,15,3".split( splitreg ); p++;
pieces[ p ] = "0,3,15,5".split( splitreg ); p++;
pieces[ p ] = "0,3,16,1".split( splitreg ); p++;
pieces[ p ] = "0,3,16,5".split( splitreg ); p++;
pieces[ p ] = "0,3,18,3".split( splitreg ); p++;
pieces[ p ] = "0,3,20,4".split( splitreg ); p++;
pieces[ p ] = "0,4,7,1".split( splitreg ); p++;
pieces[ p ] = "0,4,7,3".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,12,1".split( splitreg ); p++;
pieces[ p ] = "0,4,13,1".split( splitreg ); p++;
pieces[ p ] = "0,4,16,4".split( splitreg ); p++;
pieces[ p ] = "0,4,18,1".split( splitreg ); p++;
pieces[ p ] = "0,4,19,3".split( splitreg ); p++;
pieces[ p ] = "0,4,19,4".split( splitreg ); p++;
pieces[ p ] = "0,4,20,2".split( splitreg ); p++;
pieces[ p ] = "0,4,21,2".split( splitreg ); p++;
pieces[ p ] = "0,5,6,4".split( splitreg ); p++;
pieces[ p ] = "0,5,10,1".split( splitreg ); p++;
pieces[ p ] = "0,5,11,5".split( splitreg ); p++;
pieces[ p ] = "0,5,12,4".split( splitreg ); p++;
pieces[ p ] = "0,5,14,2".split( splitreg ); p++;
pieces[ p ] = "0,5,15,1".split( splitreg ); p++;
pieces[ p ] = "0,5,16,3".split( splitreg ); p++;
pieces[ p ] = "0,5,19,5".split( splitreg ); p++;
pieces[ p ] = "0,5,20,2".split( splitreg ); p++;
pieces[ p ] = "0,5,21,2".split( splitreg ); p++;
pieces[ p ] = "6,6,11,21".split( splitreg ); p++;
pieces[ p ] = "6,7,6,21".split( splitreg ); p++;
pieces[ p ] = "6,8,6,15".split( splitreg ); p++;
pieces[ p ] = "6,8,13,11".split( splitreg ); p++;
pieces[ p ] = "6,8,13,21".split( splitreg ); p++;
pieces[ p ] = "6,8,21,17".split( splitreg ); p++;
pieces[ p ] = "6,10,9,20".split( splitreg ); p++;
pieces[ p ] = "6,10,12,9".split( splitreg ); p++;
pieces[ p ] = "6,10,12,16".split( splitreg ); p++;
pieces[ p ] = "6,11,7,17".split( splitreg ); p++;
pieces[ p ] = "6,11,13,8".split( splitreg ); p++;
pieces[ p ] = "6,11,16,13".split( splitreg ); p++;
pieces[ p ] = "6,12,15,21".split( splitreg ); p++;
pieces[ p ] = "6,12,18,17".split( splitreg ); p++;
pieces[ p ] = "6,13,7,21".split( splitreg ); p++;
pieces[ p ] = "6,13,11,10".split( splitreg ); p++;
pieces[ p ] = "6,13,16,8".split( splitreg ); p++;
pieces[ p ] = "6,14,10,21".split( splitreg ); p++;
pieces[ p ] = "6,14,14,17".split( splitreg ); p++;
pieces[ p ] = "6,15,10,11".split( splitreg ); p++;
pieces[ p ] = "6,15,19,7".split( splitreg ); p++;
pieces[ p ] = "6,16,11,13".split( splitreg ); p++;
pieces[ p ] = "6,16,16,8".split( splitreg ); p++;
pieces[ p ] = "6,16,17,17".split( splitreg ); p++;
pieces[ p ] = "6,17,10,14".split( splitreg ); p++;
pieces[ p ] = "6,17,16,15".split( splitreg ); p++;
pieces[ p ] = "6,18,9,7".split( splitreg ); p++;
pieces[ p ] = "6,18,9,9".split( splitreg ); p++;
pieces[ p ] = "6,18,18,13".split( splitreg ); p++;
pieces[ p ] = "6,19,9,13".split( splitreg ); p++;
pieces[ p ] = "6,19,10,19".split( splitreg ); p++;
pieces[ p ] = "6,19,13,13".split( splitreg ); p++;
pieces[ p ] = "6,19,13,15".split( splitreg ); p++;
pieces[ p ] = "6,19,18,19".split( splitreg ); p++;
pieces[ p ] = "6,19,20,16".split( splitreg ); p++;
pieces[ p ] = "6,20,12,7".split( splitreg ); p++;
pieces[ p ] = "6,20,18,14".split( splitreg ); p++;
pieces[ p ] = "7,7,12,18".split( splitreg ); p++;
pieces[ p ] = "7,7,20,17".split( splitreg ); p++;
pieces[ p ] = "7,8,10,17".split( splitreg ); p++;
pieces[ p ] = "7,8,20,15".split( splitreg ); p++;
pieces[ p ] = "7,8,20,17".split( splitreg ); p++;
pieces[ p ] = "7,9,7,14".split( splitreg ); p++;
pieces[ p ] = "7,9,19,17".split( splitreg ); p++;
pieces[ p ] = "7,9,19,18".split( splitreg ); p++;
pieces[ p ] = "7,9,20,8".split( splitreg ); p++;
pieces[ p ] = "7,10,19,11".split( splitreg ); p++;
pieces[ p ] = "7,10,19,13".split( splitreg ); p++;
pieces[ p ] = "7,11,12,21".split( splitreg ); p++;
pieces[ p ] = "7,11,13,10".split( splitreg ); p++;
pieces[ p ] = "7,12,11,10".split( splitreg ); p++;
pieces[ p ] = "7,12,18,14".split( splitreg ); p++;
pieces[ p ] = "7,13,15,13".split( splitreg ); p++;
pieces[ p ] = "7,13,20,17".split( splitreg ); p++;
pieces[ p ] = "7,14,16,10".split( splitreg ); p++;
pieces[ p ] = "7,14,16,12".split( splitreg ); p++;
pieces[ p ] = "7,14,18,15".split( splitreg ); p++;
pieces[ p ] = "7,15,7,17".split( splitreg ); p++;
pieces[ p ] = "7,15,19,9".split( splitreg ); p++;
pieces[ p ] = "7,16,13,11".split( splitreg ); p++;
pieces[ p ] = "7,16,19,17".split( splitreg ); p++;
pieces[ p ] = "7,17,10,8".split( splitreg ); p++;
pieces[ p ] = "7,20,14,11".split( splitreg ); p++;
pieces[ p ] = "7,20,20,11".split( splitreg ); p++;
pieces[ p ] = "7,20,20,19".split( splitreg ); p++;
pieces[ p ] = "7,21,9,8".split( splitreg ); p++;
pieces[ p ] = "7,21,13,8".split( splitreg ); p++;
pieces[ p ] = "7,21,18,21".split( splitreg ); p++;
pieces[ p ] = "8,8,14,15".split( splitreg ); p++;
pieces[ p ] = "8,8,16,15".split( splitreg ); p++;
pieces[ p ] = "8,8,17,20".split( splitreg ); p++;
pieces[ p ] = "8,9,10,9".split( splitreg ); p++;
pieces[ p ] = "8,10,10,15".split( splitreg ); p++;
pieces[ p ] = "8,10,11,19".split( splitreg ); p++;
pieces[ p ] = "8,10,14,19".split( splitreg ); p++;
pieces[ p ] = "8,10,17,12".split( splitreg ); p++;
pieces[ p ] = "8,10,19,16".split( splitreg ); p++;
pieces[ p ] = "8,11,16,15".split( splitreg ); p++;
pieces[ p ] = "8,12,13,11".split( splitreg ); p++;
pieces[ p ] = "8,12,14,12".split( splitreg ); p++;
pieces[ p ] = "8,12,18,12".split( splitreg ); p++;
pieces[ p ] = "8,12,18,16".split( splitreg ); p++;
pieces[ p ] = "8,12,20,19".split( splitreg ); p++;
pieces[ p ] = "8,12,21,17".split( splitreg ); p++;
pieces[ p ] = "8,14,9,9".split( splitreg ); p++;
pieces[ p ] = "8,15,8,16".split( splitreg ); p++;
pieces[ p ] = "8,15,12,18".split( splitreg ); p++;
pieces[ p ] = "8,18,11,13".split( splitreg ); p++;
pieces[ p ] = "8,18,12,15".split( splitreg ); p++;
pieces[ p ] = "8,18,21,15".split( splitreg ); p++;
pieces[ p ] = "8,19,13,9".split( splitreg ); p++;
pieces[ p ] = "8,20,17,9".split( splitreg ); p++;
pieces[ p ] = "9,9,21,12".split( splitreg ); p++;
pieces[ p ] = "9,10,17,10".split( splitreg ); p++;
pieces[ p ] = "9,11,21,17".split( splitreg ); p++;
pieces[ p ] = "9,12,15,10".split( splitreg ); p++;
pieces[ p ] = "9,12,18,11".split( splitreg ); p++;
pieces[ p ] = "9,12,18,21".split( splitreg ); p++;
pieces[ p ] = "9,13,10,19".split( splitreg ); p++;
pieces[ p ] = "9,13,15,19".split( splitreg ); p++;
pieces[ p ] = "9,13,16,21".split( splitreg ); p++;
pieces[ p ] = "9,13,20,20".split( splitreg ); p++;
pieces[ p ] = "9,14,11,13".split( splitreg ); p++;
pieces[ p ] = "9,14,12,21".split( splitreg ); p++;
pieces[ p ] = "9,14,14,20".split( splitreg ); p++;
pieces[ p ] = "9,15,16,12".split( splitreg ); p++;
pieces[ p ] = "9,15,21,21".split( splitreg ); p++;
pieces[ p ] = "9,16,17,15".split( splitreg ); p++;
pieces[ p ] = "9,18,15,13".split( splitreg ); p++;
pieces[ p ] = "9,18,15,15".split( splitreg ); p++;
pieces[ p ] = "9,19,12,13".split( splitreg ); p++;
pieces[ p ] = "9,19,16,15".split( splitreg ); p++;
pieces[ p ] = "9,19,19,14".split( splitreg ); p++;
pieces[ p ] = "9,21,13,12".split( splitreg ); p++;
pieces[ p ] = "9,21,16,10".split( splitreg ); p++;
pieces[ p ] = "10,11,17,18".split( splitreg ); p++;
pieces[ p ] = "10,11,18,21".split( splitreg ); p++;
pieces[ p ] = "10,14,10,19".split( splitreg ); p++;
pieces[ p ] = "10,14,16,13".split( splitreg ); p++;
pieces[ p ] = "10,14,18,12".split( splitreg ); p++;
pieces[ p ] = "10,14,19,20".split( splitreg ); p++;
pieces[ p ] = "10,14,20,17".split( splitreg ); p++;
pieces[ p ] = "10,14,20,20".split( splitreg ); p++;
pieces[ p ] = "10,18,11,21".split( splitreg ); p++;
pieces[ p ] = "10,18,17,20".split( splitreg ); p++;
pieces[ p ] = "10,19,12,12".split( splitreg ); p++;
pieces[ p ] = "10,21,13,20".split( splitreg ); p++;
pieces[ p ] = "11,11,13,17".split( splitreg ); p++;
pieces[ p ] = "11,11,17,21".split( splitreg ); p++;
pieces[ p ] = "11,11,18,14".split( splitreg ); p++;
pieces[ p ] = "11,13,14,15".split( splitreg ); p++;
pieces[ p ] = "11,13,18,17".split( splitreg ); p++;
pieces[ p ] = "11,13,20,19".split( splitreg ); p++;
pieces[ p ] = "11,16,13,14".split( splitreg ); p++;
pieces[ p ] = "11,19,21,14".split( splitreg ); p++;
pieces[ p ] = "11,21,12,20".split( splitreg ); p++;
pieces[ p ] = "11,21,15,12".split( splitreg ); p++;
pieces[ p ] = "11,21,18,19".split( splitreg ); p++;
pieces[ p ] = "12,12,19,19".split( splitreg ); p++;
pieces[ p ] = "12,18,20,14".split( splitreg ); p++;
pieces[ p ] = "12,20,16,18".split( splitreg ); p++;
pieces[ p ] = "12,20,20,17".split( splitreg ); p++;
pieces[ p ] = "12,21,14,19".split( splitreg ); p++;
pieces[ p ] = "13,16,14,17".split( splitreg ); p++;
pieces[ p ] = "13,16,16,17".split( splitreg ); p++;
pieces[ p ] = "13,17,17,14".split( splitreg ); p++;
pieces[ p ] = "13,17,18,20".split( splitreg ); p++;
pieces[ p ] = "13,18,15,15".split( splitreg ); p++;
pieces[ p ] = "14,16,18,16".split( splitreg ); p++;
pieces[ p ] = "14,17,15,15".split( splitreg ); p++;
pieces[ p ] = "14,17,20,18".split( splitreg ); p++;
pieces[ p ] = "14,18,14,21".split( splitreg ); p++;
pieces[ p ] = "14,20,16,19".split( splitreg ); p++;
pieces[ p ] = "14,20,20,16".split( splitreg ); p++;
pieces[ p ] = "14,21,17,15".split( splitreg ); p++;
pieces[ p ] = "15,16,20,16".split( splitreg ); p++;
pieces[ p ] = "15,17,20,21".split( splitreg ); p++;
pieces[ p ] = "15,19,16,21".split( splitreg ); p++;
pieces[ p ] = "15,21,17,16".split( splitreg ); p++;
pieces[ p ] = "16,16,18,18".split( splitreg ); p++;
pieces[ p ] = "17,21,19,19".split( splitreg ); p++;
pieces[ p ] = "17,21,21,18".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

