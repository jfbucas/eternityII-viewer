
puzzles[ nb_puzzles ] = "brendan/pieces_12x12.txt.js,Brendan 12x12".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_12x12.txt.js" ) {

board_w = 12;
board_h = 12;


pieces[ p ] = "0,0,1,1".split( splitreg ); p++;
pieces[ p ] = "0,0,3,2".split( splitreg ); p++;
pieces[ p ] = "0,0,4,1".split( splitreg ); p++;
pieces[ p ] = "0,0,4,4".split( splitreg ); p++;
pieces[ p ] = "0,1,5,2".split( splitreg ); p++;
pieces[ p ] = "0,1,5,3".split( splitreg ); p++;
pieces[ p ] = "0,1,7,1".split( splitreg ); p++;
pieces[ p ] = "0,1,7,2".split( splitreg ); p++;
pieces[ p ] = "0,1,8,2".split( splitreg ); p++;
pieces[ p ] = "0,1,8,4".split( splitreg ); p++;
pieces[ p ] = "0,1,11,2".split( splitreg ); p++;
pieces[ p ] = "0,1,13,4".split( splitreg ); p++;
pieces[ p ] = "0,1,14,3".split( splitreg ); p++;
pieces[ p ] = "0,1,15,4".split( splitreg ); p++;
pieces[ p ] = "0,2,5,2".split( splitreg ); p++;
pieces[ p ] = "0,2,8,2".split( splitreg ); p++;
pieces[ p ] = "0,2,8,3".split( splitreg ); p++;
pieces[ p ] = "0,2,9,1".split( splitreg ); p++;
pieces[ p ] = "0,2,10,1".split( splitreg ); p++;
pieces[ p ] = "0,2,11,4".split( splitreg ); p++;
pieces[ p ] = "0,2,12,4".split( splitreg ); p++;
pieces[ p ] = "0,2,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,14,4".split( splitreg ); p++;
pieces[ p ] = "0,2,15,2".split( splitreg ); p++;
pieces[ p ] = "0,2,16,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,3".split( splitreg ); p++;
pieces[ p ] = "0,3,8,3".split( splitreg ); p++;
pieces[ p ] = "0,3,9,1".split( splitreg ); p++;
pieces[ p ] = "0,3,9,4".split( splitreg ); p++;
pieces[ p ] = "0,3,10,1".split( splitreg ); p++;
pieces[ p ] = "0,3,11,4".split( splitreg ); p++;
pieces[ p ] = "0,3,15,2".split( splitreg ); p++;
pieces[ p ] = "0,3,15,3".split( splitreg ); p++;
pieces[ p ] = "0,3,16,2".split( splitreg ); p++;
pieces[ p ] = "0,3,16,3".split( splitreg ); p++;
pieces[ p ] = "0,4,6,3".split( splitreg ); p++;
pieces[ p ] = "0,4,7,1".split( splitreg ); p++;
pieces[ p ] = "0,4,8,3".split( splitreg ); p++;
pieces[ p ] = "0,4,10,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,3".split( splitreg ); p++;
pieces[ p ] = "0,4,11,2".split( splitreg ); p++;
pieces[ p ] = "0,4,13,4".split( splitreg ); p++;
pieces[ p ] = "0,4,14,1".split( splitreg ); p++;
pieces[ p ] = "0,4,15,4".split( splitreg ); p++;
pieces[ p ] = "5,5,5,7".split( splitreg ); p++;
pieces[ p ] = "5,5,6,11".split( splitreg ); p++;
pieces[ p ] = "5,5,10,7".split( splitreg ); p++;
pieces[ p ] = "5,5,12,16".split( splitreg ); p++;
pieces[ p ] = "5,5,14,7".split( splitreg ); p++;
pieces[ p ] = "5,6,5,13".split( splitreg ); p++;
pieces[ p ] = "5,6,13,12".split( splitreg ); p++;
pieces[ p ] = "5,6,16,13".split( splitreg ); p++;
pieces[ p ] = "5,7,11,9".split( splitreg ); p++;
pieces[ p ] = "5,7,12,10".split( splitreg ); p++;
pieces[ p ] = "5,8,7,9".split( splitreg ); p++;
pieces[ p ] = "5,8,8,8".split( splitreg ); p++;
pieces[ p ] = "5,8,13,15".split( splitreg ); p++;
pieces[ p ] = "5,8,14,8".split( splitreg ); p++;
pieces[ p ] = "5,8,15,7".split( splitreg ); p++;
pieces[ p ] = "5,9,9,15".split( splitreg ); p++;
pieces[ p ] = "5,9,10,12".split( splitreg ); p++;
pieces[ p ] = "5,10,8,11".split( splitreg ); p++;
pieces[ p ] = "5,11,9,7".split( splitreg ); p++;
pieces[ p ] = "5,11,14,7".split( splitreg ); p++;
pieces[ p ] = "5,12,10,8".split( splitreg ); p++;
pieces[ p ] = "5,12,12,12".split( splitreg ); p++;
pieces[ p ] = "5,12,16,8".split( splitreg ); p++;
pieces[ p ] = "5,13,11,15".split( splitreg ); p++;
pieces[ p ] = "5,15,8,9".split( splitreg ); p++;
pieces[ p ] = "5,15,10,13".split( splitreg ); p++;
pieces[ p ] = "5,16,7,12".split( splitreg ); p++;
pieces[ p ] = "5,16,11,7".split( splitreg ); p++;
pieces[ p ] = "6,6,10,14".split( splitreg ); p++;
pieces[ p ] = "6,6,16,9".split( splitreg ); p++;
pieces[ p ] = "6,7,8,14".split( splitreg ); p++;
pieces[ p ] = "6,7,12,13".split( splitreg ); p++;
pieces[ p ] = "6,7,15,16".split( splitreg ); p++;
pieces[ p ] = "6,7,16,13".split( splitreg ); p++;
pieces[ p ] = "6,7,16,16".split( splitreg ); p++;
pieces[ p ] = "6,8,13,7".split( splitreg ); p++;
pieces[ p ] = "6,8,14,11".split( splitreg ); p++;
pieces[ p ] = "6,9,8,12".split( splitreg ); p++;
pieces[ p ] = "6,9,10,13".split( splitreg ); p++;
pieces[ p ] = "6,9,11,14".split( splitreg ); p++;
pieces[ p ] = "6,9,12,12".split( splitreg ); p++;
pieces[ p ] = "6,9,14,8".split( splitreg ); p++;
pieces[ p ] = "6,9,14,16".split( splitreg ); p++;
pieces[ p ] = "6,10,8,14".split( splitreg ); p++;
pieces[ p ] = "6,10,10,8".split( splitreg ); p++;
pieces[ p ] = "6,10,10,10".split( splitreg ); p++;
pieces[ p ] = "6,10,14,15".split( splitreg ); p++;
pieces[ p ] = "6,11,6,14".split( splitreg ); p++;
pieces[ p ] = "6,13,8,7".split( splitreg ); p++;
pieces[ p ] = "6,13,14,10".split( splitreg ); p++;
pieces[ p ] = "6,13,15,11".split( splitreg ); p++;
pieces[ p ] = "6,13,16,14".split( splitreg ); p++;
pieces[ p ] = "6,14,13,9".split( splitreg ); p++;
pieces[ p ] = "6,15,7,9".split( splitreg ); p++;
pieces[ p ] = "6,15,16,12".split( splitreg ); p++;
pieces[ p ] = "6,16,14,7".split( splitreg ); p++;
pieces[ p ] = "6,16,16,11".split( splitreg ); p++;
pieces[ p ] = "7,7,7,11".split( splitreg ); p++;
pieces[ p ] = "7,9,12,14".split( splitreg ); p++;
pieces[ p ] = "7,9,13,15".split( splitreg ); p++;
pieces[ p ] = "7,10,13,11".split( splitreg ); p++;
pieces[ p ] = "7,10,15,10".split( splitreg ); p++;
pieces[ p ] = "7,12,8,10".split( splitreg ); p++;
pieces[ p ] = "7,12,14,9".split( splitreg ); p++;
pieces[ p ] = "7,12,14,10".split( splitreg ); p++;
pieces[ p ] = "7,12,16,12".split( splitreg ); p++;
pieces[ p ] = "7,14,9,16".split( splitreg ); p++;
pieces[ p ] = "7,14,14,12".split( splitreg ); p++;
pieces[ p ] = "7,14,16,12".split( splitreg ); p++;
pieces[ p ] = "7,16,11,16".split( splitreg ); p++;
pieces[ p ] = "8,10,9,10".split( splitreg ); p++;
pieces[ p ] = "8,11,12,13".split( splitreg ); p++;
pieces[ p ] = "8,11,15,10".split( splitreg ); p++;
pieces[ p ] = "8,12,8,13".split( splitreg ); p++;
pieces[ p ] = "8,12,9,9".split( splitreg ); p++;
pieces[ p ] = "8,12,10,15".split( splitreg ); p++;
pieces[ p ] = "8,13,16,14".split( splitreg ); p++;
pieces[ p ] = "8,15,9,9".split( splitreg ); p++;
pieces[ p ] = "8,15,13,13".split( splitreg ); p++;
pieces[ p ] = "8,16,9,13".split( splitreg ); p++;
pieces[ p ] = "9,12,9,15".split( splitreg ); p++;
pieces[ p ] = "9,12,12,15".split( splitreg ); p++;
pieces[ p ] = "9,13,15,12".split( splitreg ); p++;
pieces[ p ] = "9,15,11,11".split( splitreg ); p++;
pieces[ p ] = "9,15,13,10".split( splitreg ); p++;
pieces[ p ] = "9,16,16,14".split( splitreg ); p++;
pieces[ p ] = "10,11,14,11".split( splitreg ); p++;
pieces[ p ] = "10,11,16,16".split( splitreg ); p++;
pieces[ p ] = "10,12,15,13".split( splitreg ); p++;
pieces[ p ] = "10,13,15,13".split( splitreg ); p++;
pieces[ p ] = "10,14,11,16".split( splitreg ); p++;
pieces[ p ] = "10,15,16,14".split( splitreg ); p++;
pieces[ p ] = "11,11,11,15".split( splitreg ); p++;
pieces[ p ] = "11,11,12,16".split( splitreg ); p++;
pieces[ p ] = "11,11,13,15".split( splitreg ); p++;
pieces[ p ] = "11,11,13,16".split( splitreg ); p++;
pieces[ p ] = "12,12,13,14".split( splitreg ); p++;
pieces[ p ] = "13,15,15,14".split( splitreg ); p++;
pieces[ p ] = "13,16,14,14".split( splitreg ); p++;
pieces[ p ] = "14,16,15,15".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

