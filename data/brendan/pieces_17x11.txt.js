
puzzles[ nb_puzzles ] = "brendan/pieces_17x11.txt.js,Brendan 17x11".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_17x11.txt.js" ) {

board_w = 17;
board_h = 11;


pieces[ p ] = "0,0,2,2".split( splitreg ); p++;
pieces[ p ] = "0,0,3,2".split( splitreg ); p++;
pieces[ p ] = "0,0,3,3".split( splitreg ); p++;
pieces[ p ] = "0,0,4,5".split( splitreg ); p++;
pieces[ p ] = "0,1,8,4".split( splitreg ); p++;
pieces[ p ] = "0,1,8,5".split( splitreg ); p++;
pieces[ p ] = "0,1,13,1".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,3".split( splitreg ); p++;
pieces[ p ] = "0,1,14,5".split( splitreg ); p++;
pieces[ p ] = "0,1,15,4".split( splitreg ); p++;
pieces[ p ] = "0,1,16,3".split( splitreg ); p++;
pieces[ p ] = "0,1,17,2".split( splitreg ); p++;
pieces[ p ] = "0,1,19,4".split( splitreg ); p++;
pieces[ p ] = "0,1,19,5".split( splitreg ); p++;
pieces[ p ] = "0,2,6,2".split( splitreg ); p++;
pieces[ p ] = "0,2,6,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,1".split( splitreg ); p++;
pieces[ p ] = "0,2,7,4".split( splitreg ); p++;
pieces[ p ] = "0,2,10,3".split( splitreg ); p++;
pieces[ p ] = "0,2,12,2".split( splitreg ); p++;
pieces[ p ] = "0,2,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,14,2".split( splitreg ); p++;
pieces[ p ] = "0,2,16,1".split( splitreg ); p++;
pieces[ p ] = "0,2,18,5".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,5".split( splitreg ); p++;
pieces[ p ] = "0,3,7,4".split( splitreg ); p++;
pieces[ p ] = "0,3,10,2".split( splitreg ); p++;
pieces[ p ] = "0,3,10,5".split( splitreg ); p++;
pieces[ p ] = "0,3,15,2".split( splitreg ); p++;
pieces[ p ] = "0,3,16,4".split( splitreg ); p++;
pieces[ p ] = "0,3,19,1".split( splitreg ); p++;
pieces[ p ] = "0,4,6,2".split( splitreg ); p++;
pieces[ p ] = "0,4,7,1".split( splitreg ); p++;
pieces[ p ] = "0,4,9,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,1".split( splitreg ); p++;
pieces[ p ] = "0,4,10,4".split( splitreg ); p++;
pieces[ p ] = "0,4,12,3".split( splitreg ); p++;
pieces[ p ] = "0,4,14,1".split( splitreg ); p++;
pieces[ p ] = "0,4,14,5".split( splitreg ); p++;
pieces[ p ] = "0,4,19,3".split( splitreg ); p++;
pieces[ p ] = "0,5,7,2".split( splitreg ); p++;
pieces[ p ] = "0,5,8,4".split( splitreg ); p++;
pieces[ p ] = "0,5,11,4".split( splitreg ); p++;
pieces[ p ] = "0,5,13,1".split( splitreg ); p++;
pieces[ p ] = "0,5,13,4".split( splitreg ); p++;
pieces[ p ] = "0,5,13,5".split( splitreg ); p++;
pieces[ p ] = "0,5,18,2".split( splitreg ); p++;
pieces[ p ] = "0,5,18,5".split( splitreg ); p++;
pieces[ p ] = "0,5,19,1".split( splitreg ); p++;
pieces[ p ] = "0,5,19,3".split( splitreg ); p++;
pieces[ p ] = "6,6,9,16".split( splitreg ); p++;
pieces[ p ] = "6,6,10,10".split( splitreg ); p++;
pieces[ p ] = "6,7,7,13".split( splitreg ); p++;
pieces[ p ] = "6,7,10,16".split( splitreg ); p++;
pieces[ p ] = "6,7,14,9".split( splitreg ); p++;
pieces[ p ] = "6,8,11,17".split( splitreg ); p++;
pieces[ p ] = "6,9,8,11".split( splitreg ); p++;
pieces[ p ] = "6,9,10,13".split( splitreg ); p++;
pieces[ p ] = "6,12,9,15".split( splitreg ); p++;
pieces[ p ] = "6,12,12,12".split( splitreg ); p++;
pieces[ p ] = "6,12,12,17".split( splitreg ); p++;
pieces[ p ] = "6,12,19,11".split( splitreg ); p++;
pieces[ p ] = "6,13,7,18".split( splitreg ); p++;
pieces[ p ] = "6,14,18,9".split( splitreg ); p++;
pieces[ p ] = "6,14,19,17".split( splitreg ); p++;
pieces[ p ] = "6,15,7,11".split( splitreg ); p++;
pieces[ p ] = "6,15,10,8".split( splitreg ); p++;
pieces[ p ] = "6,15,14,15".split( splitreg ); p++;
pieces[ p ] = "6,15,14,18".split( splitreg ); p++;
pieces[ p ] = "6,16,7,12".split( splitreg ); p++;
pieces[ p ] = "6,16,9,13".split( splitreg ); p++;
pieces[ p ] = "6,16,12,9".split( splitreg ); p++;
pieces[ p ] = "6,17,7,11".split( splitreg ); p++;
pieces[ p ] = "6,17,10,18".split( splitreg ); p++;
pieces[ p ] = "6,17,12,12".split( splitreg ); p++;
pieces[ p ] = "6,17,15,8".split( splitreg ); p++;
pieces[ p ] = "6,17,15,17".split( splitreg ); p++;
pieces[ p ] = "6,17,19,13".split( splitreg ); p++;
pieces[ p ] = "6,18,13,18".split( splitreg ); p++;
pieces[ p ] = "6,18,15,11".split( splitreg ); p++;
pieces[ p ] = "6,18,19,11".split( splitreg ); p++;
pieces[ p ] = "6,19,10,9".split( splitreg ); p++;
pieces[ p ] = "6,19,16,11".split( splitreg ); p++;
pieces[ p ] = "6,19,16,18".split( splitreg ); p++;
pieces[ p ] = "6,19,19,18".split( splitreg ); p++;
pieces[ p ] = "7,7,10,11".split( splitreg ); p++;
pieces[ p ] = "7,8,7,9".split( splitreg ); p++;
pieces[ p ] = "7,8,10,19".split( splitreg ); p++;
pieces[ p ] = "7,8,15,10".split( splitreg ); p++;
pieces[ p ] = "7,8,16,19".split( splitreg ); p++;
pieces[ p ] = "7,9,8,17".split( splitreg ); p++;
pieces[ p ] = "7,9,10,8".split( splitreg ); p++;
pieces[ p ] = "7,9,11,12".split( splitreg ); p++;
pieces[ p ] = "7,9,15,19".split( splitreg ); p++;
pieces[ p ] = "7,9,16,9".split( splitreg ); p++;
pieces[ p ] = "7,9,16,14".split( splitreg ); p++;
pieces[ p ] = "7,10,16,18".split( splitreg ); p++;
pieces[ p ] = "7,10,17,15".split( splitreg ); p++;
pieces[ p ] = "7,11,10,14".split( splitreg ); p++;
pieces[ p ] = "7,11,14,18".split( splitreg ); p++;
pieces[ p ] = "7,12,7,16".split( splitreg ); p++;
pieces[ p ] = "7,13,8,10".split( splitreg ); p++;
pieces[ p ] = "7,14,15,12".split( splitreg ); p++;
pieces[ p ] = "7,14,16,13".split( splitreg ); p++;
pieces[ p ] = "7,15,12,19".split( splitreg ); p++;
pieces[ p ] = "7,16,18,19".split( splitreg ); p++;
pieces[ p ] = "7,17,12,9".split( splitreg ); p++;
pieces[ p ] = "7,18,15,19".split( splitreg ); p++;
pieces[ p ] = "7,19,10,16".split( splitreg ); p++;
pieces[ p ] = "7,19,16,15".split( splitreg ); p++;
pieces[ p ] = "7,19,17,9".split( splitreg ); p++;
pieces[ p ] = "8,8,13,10".split( splitreg ); p++;
pieces[ p ] = "8,8,19,14".split( splitreg ); p++;
pieces[ p ] = "8,9,11,19".split( splitreg ); p++;
pieces[ p ] = "8,9,17,16".split( splitreg ); p++;
pieces[ p ] = "8,11,8,13".split( splitreg ); p++;
pieces[ p ] = "8,11,9,15".split( splitreg ); p++;
pieces[ p ] = "8,11,11,15".split( splitreg ); p++;
pieces[ p ] = "8,11,14,16".split( splitreg ); p++;
pieces[ p ] = "8,12,9,16".split( splitreg ); p++;
pieces[ p ] = "8,12,11,10".split( splitreg ); p++;
pieces[ p ] = "8,12,19,14".split( splitreg ); p++;
pieces[ p ] = "8,13,14,10".split( splitreg ); p++;
pieces[ p ] = "8,13,14,12".split( splitreg ); p++;
pieces[ p ] = "8,13,18,10".split( splitreg ); p++;
pieces[ p ] = "8,13,18,15".split( splitreg ); p++;
pieces[ p ] = "8,14,17,14".split( splitreg ); p++;
pieces[ p ] = "8,15,14,9".split( splitreg ); p++;
pieces[ p ] = "8,15,15,15".split( splitreg ); p++;
pieces[ p ] = "8,15,18,17".split( splitreg ); p++;
pieces[ p ] = "8,16,17,11".split( splitreg ); p++;
pieces[ p ] = "8,17,9,19".split( splitreg ); p++;
pieces[ p ] = "8,17,12,10".split( splitreg ); p++;
pieces[ p ] = "8,17,17,16".split( splitreg ); p++;
pieces[ p ] = "8,18,10,14".split( splitreg ); p++;
pieces[ p ] = "8,19,14,12".split( splitreg ); p++;
pieces[ p ] = "9,9,14,18".split( splitreg ); p++;
pieces[ p ] = "9,9,18,14".split( splitreg ); p++;
pieces[ p ] = "9,10,15,16".split( splitreg ); p++;
pieces[ p ] = "9,13,13,14".split( splitreg ); p++;
pieces[ p ] = "9,14,11,17".split( splitreg ); p++;
pieces[ p ] = "9,14,15,18".split( splitreg ); p++;
pieces[ p ] = "9,15,16,15".split( splitreg ); p++;
pieces[ p ] = "9,15,17,10".split( splitreg ); p++;
pieces[ p ] = "9,16,10,13".split( splitreg ); p++;
pieces[ p ] = "9,17,10,10".split( splitreg ); p++;
pieces[ p ] = "9,17,18,13".split( splitreg ); p++;
pieces[ p ] = "9,18,11,14".split( splitreg ); p++;
pieces[ p ] = "9,19,11,18".split( splitreg ); p++;
pieces[ p ] = "9,19,13,18".split( splitreg ); p++;
pieces[ p ] = "10,11,12,17".split( splitreg ); p++;
pieces[ p ] = "10,11,15,12".split( splitreg ); p++;
pieces[ p ] = "10,12,10,17".split( splitreg ); p++;
pieces[ p ] = "10,12,16,13".split( splitreg ); p++;
pieces[ p ] = "10,12,18,14".split( splitreg ); p++;
pieces[ p ] = "10,15,13,16".split( splitreg ); p++;
pieces[ p ] = "10,16,16,12".split( splitreg ); p++;
pieces[ p ] = "10,17,12,13".split( splitreg ); p++;
pieces[ p ] = "10,19,19,17".split( splitreg ); p++;
pieces[ p ] = "11,11,11,18".split( splitreg ); p++;
pieces[ p ] = "11,12,13,14".split( splitreg ); p++;
pieces[ p ] = "11,15,19,16".split( splitreg ); p++;
pieces[ p ] = "11,16,11,19".split( splitreg ); p++;
pieces[ p ] = "11,16,18,14".split( splitreg ); p++;
pieces[ p ] = "11,16,19,13".split( splitreg ); p++;
pieces[ p ] = "11,17,17,15".split( splitreg ); p++;
pieces[ p ] = "11,17,17,19".split( splitreg ); p++;
pieces[ p ] = "11,18,13,17".split( splitreg ); p++;
pieces[ p ] = "11,18,13,19".split( splitreg ); p++;
pieces[ p ] = "11,18,15,15".split( splitreg ); p++;
pieces[ p ] = "11,18,15,17".split( splitreg ); p++;
pieces[ p ] = "11,18,16,13".split( splitreg ); p++;
pieces[ p ] = "12,12,13,17".split( splitreg ); p++;
pieces[ p ] = "12,15,13,13".split( splitreg ); p++;
pieces[ p ] = "12,16,14,13".split( splitreg ); p++;
pieces[ p ] = "12,16,17,13".split( splitreg ); p++;
pieces[ p ] = "12,17,14,13".split( splitreg ); p++;
pieces[ p ] = "12,17,14,18".split( splitreg ); p++;
pieces[ p ] = "12,18,13,16".split( splitreg ); p++;
pieces[ p ] = "12,18,19,15".split( splitreg ); p++;
pieces[ p ] = "12,19,15,14".split( splitreg ); p++;
pieces[ p ] = "13,14,18,16".split( splitreg ); p++;
pieces[ p ] = "13,19,14,15".split( splitreg ); p++;
pieces[ p ] = "14,16,17,16".split( splitreg ); p++;
pieces[ p ] = "14,18,19,18".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

