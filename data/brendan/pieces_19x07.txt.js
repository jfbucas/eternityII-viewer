
puzzles[ nb_puzzles ] = "brendan/pieces_19x07.txt.js,Brendan 19x07".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_19x07.txt.js" ) {

board_w = 19;
board_h = 7;


pieces[ p ] = "0,0,3,3".split( splitreg ); p++;
pieces[ p ] = "0,0,3,4".split( splitreg ); p++;
pieces[ p ] = "0,0,3,5".split( splitreg ); p++;
pieces[ p ] = "0,0,5,1".split( splitreg ); p++;
pieces[ p ] = "0,1,6,4".split( splitreg ); p++;
pieces[ p ] = "0,1,8,1".split( splitreg ); p++;
pieces[ p ] = "0,1,9,2".split( splitreg ); p++;
pieces[ p ] = "0,1,11,3".split( splitreg ); p++;
pieces[ p ] = "0,1,12,3".split( splitreg ); p++;
pieces[ p ] = "0,1,13,1".split( splitreg ); p++;
pieces[ p ] = "0,1,14,5".split( splitreg ); p++;
pieces[ p ] = "0,1,15,1".split( splitreg ); p++;
pieces[ p ] = "0,1,16,2".split( splitreg ); p++;
pieces[ p ] = "0,1,16,3".split( splitreg ); p++;
pieces[ p ] = "0,2,6,5".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,4".split( splitreg ); p++;
pieces[ p ] = "0,2,8,2".split( splitreg ); p++;
pieces[ p ] = "0,2,10,2".split( splitreg ); p++;
pieces[ p ] = "0,2,11,3".split( splitreg ); p++;
pieces[ p ] = "0,2,12,5".split( splitreg ); p++;
pieces[ p ] = "0,2,14,2".split( splitreg ); p++;
pieces[ p ] = "0,2,14,4".split( splitreg ); p++;
pieces[ p ] = "0,2,15,1".split( splitreg ); p++;
pieces[ p ] = "0,3,6,1".split( splitreg ); p++;
pieces[ p ] = "0,3,9,3".split( splitreg ); p++;
pieces[ p ] = "0,3,13,4".split( splitreg ); p++;
pieces[ p ] = "0,3,14,3".split( splitreg ); p++;
pieces[ p ] = "0,3,14,5".split( splitreg ); p++;
pieces[ p ] = "0,3,15,2".split( splitreg ); p++;
pieces[ p ] = "0,3,16,4".split( splitreg ); p++;
pieces[ p ] = "0,4,7,1".split( splitreg ); p++;
pieces[ p ] = "0,4,7,2".split( splitreg ); p++;
pieces[ p ] = "0,4,12,2".split( splitreg ); p++;
pieces[ p ] = "0,4,13,3".split( splitreg ); p++;
pieces[ p ] = "0,4,13,5".split( splitreg ); p++;
pieces[ p ] = "0,4,14,2".split( splitreg ); p++;
pieces[ p ] = "0,4,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,15,3".split( splitreg ); p++;
pieces[ p ] = "0,4,16,4".split( splitreg ); p++;
pieces[ p ] = "0,5,6,1".split( splitreg ); p++;
pieces[ p ] = "0,5,7,1".split( splitreg ); p++;
pieces[ p ] = "0,5,7,2".split( splitreg ); p++;
pieces[ p ] = "0,5,8,4".split( splitreg ); p++;
pieces[ p ] = "0,5,9,5".split( splitreg ); p++;
pieces[ p ] = "0,5,10,4".split( splitreg ); p++;
pieces[ p ] = "0,5,10,5".split( splitreg ); p++;
pieces[ p ] = "0,5,15,5".split( splitreg ); p++;
pieces[ p ] = "6,6,14,12".split( splitreg ); p++;
pieces[ p ] = "6,7,6,9".split( splitreg ); p++;
pieces[ p ] = "6,7,13,11".split( splitreg ); p++;
pieces[ p ] = "6,7,15,9".split( splitreg ); p++;
pieces[ p ] = "6,8,6,11".split( splitreg ); p++;
pieces[ p ] = "6,8,10,10".split( splitreg ); p++;
pieces[ p ] = "6,8,11,10".split( splitreg ); p++;
pieces[ p ] = "6,8,12,13".split( splitreg ); p++;
pieces[ p ] = "6,9,7,12".split( splitreg ); p++;
pieces[ p ] = "6,9,10,11".split( splitreg ); p++;
pieces[ p ] = "6,9,12,7".split( splitreg ); p++;
pieces[ p ] = "6,9,12,8".split( splitreg ); p++;
pieces[ p ] = "6,10,6,16".split( splitreg ); p++;
pieces[ p ] = "6,10,7,16".split( splitreg ); p++;
pieces[ p ] = "6,10,15,9".split( splitreg ); p++;
pieces[ p ] = "6,11,12,16".split( splitreg ); p++;
pieces[ p ] = "6,11,14,13".split( splitreg ); p++;
pieces[ p ] = "6,11,16,7".split( splitreg ); p++;
pieces[ p ] = "6,11,16,9".split( splitreg ); p++;
pieces[ p ] = "6,12,7,12".split( splitreg ); p++;
pieces[ p ] = "6,12,16,8".split( splitreg ); p++;
pieces[ p ] = "6,13,13,9".split( splitreg ); p++;
pieces[ p ] = "6,13,13,15".split( splitreg ); p++;
pieces[ p ] = "6,13,15,16".split( splitreg ); p++;
pieces[ p ] = "6,14,7,13".split( splitreg ); p++;
pieces[ p ] = "6,14,10,15".split( splitreg ); p++;
pieces[ p ] = "6,15,7,8".split( splitreg ); p++;
pieces[ p ] = "6,15,16,12".split( splitreg ); p++;
pieces[ p ] = "7,7,8,12".split( splitreg ); p++;
pieces[ p ] = "7,8,9,15".split( splitreg ); p++;
pieces[ p ] = "7,8,16,10".split( splitreg ); p++;
pieces[ p ] = "7,9,9,15".split( splitreg ); p++;
pieces[ p ] = "7,10,7,16".split( splitreg ); p++;
pieces[ p ] = "7,10,12,14".split( splitreg ); p++;
pieces[ p ] = "7,10,15,16".split( splitreg ); p++;
pieces[ p ] = "7,10,16,11".split( splitreg ); p++;
pieces[ p ] = "7,11,7,15".split( splitreg ); p++;
pieces[ p ] = "7,12,12,13".split( splitreg ); p++;
pieces[ p ] = "7,12,16,15".split( splitreg ); p++;
pieces[ p ] = "7,13,8,11".split( splitreg ); p++;
pieces[ p ] = "7,13,12,8".split( splitreg ); p++;
pieces[ p ] = "7,14,9,16".split( splitreg ); p++;
pieces[ p ] = "7,14,12,8".split( splitreg ); p++;
pieces[ p ] = "7,14,12,13".split( splitreg ); p++;
pieces[ p ] = "7,15,16,9".split( splitreg ); p++;
pieces[ p ] = "8,8,10,10".split( splitreg ); p++;
pieces[ p ] = "8,8,10,13".split( splitreg ); p++;
pieces[ p ] = "8,8,11,16".split( splitreg ); p++;
pieces[ p ] = "8,8,16,14".split( splitreg ); p++;
pieces[ p ] = "8,9,10,11".split( splitreg ); p++;
pieces[ p ] = "8,9,14,15".split( splitreg ); p++;
pieces[ p ] = "8,10,15,12".split( splitreg ); p++;
pieces[ p ] = "8,10,15,13".split( splitreg ); p++;
pieces[ p ] = "8,11,14,9".split( splitreg ); p++;
pieces[ p ] = "8,11,16,10".split( splitreg ); p++;
pieces[ p ] = "8,13,8,15".split( splitreg ); p++;
pieces[ p ] = "8,14,9,12".split( splitreg ); p++;
pieces[ p ] = "8,14,11,9".split( splitreg ); p++;
pieces[ p ] = "8,15,10,11".split( splitreg ); p++;
pieces[ p ] = "8,16,9,9".split( splitreg ); p++;
pieces[ p ] = "9,9,16,14".split( splitreg ); p++;
pieces[ p ] = "9,9,16,15".split( splitreg ); p++;
pieces[ p ] = "9,10,16,14".split( splitreg ); p++;
pieces[ p ] = "9,11,16,11".split( splitreg ); p++;
pieces[ p ] = "9,12,10,15".split( splitreg ); p++;
pieces[ p ] = "9,14,11,12".split( splitreg ); p++;
pieces[ p ] = "9,14,14,16".split( splitreg ); p++;
pieces[ p ] = "9,15,10,16".split( splitreg ); p++;
pieces[ p ] = "9,16,10,14".split( splitreg ); p++;
pieces[ p ] = "9,16,15,12".split( splitreg ); p++;
pieces[ p ] = "10,11,14,12".split( splitreg ); p++;
pieces[ p ] = "10,12,13,13".split( splitreg ); p++;
pieces[ p ] = "10,13,12,14".split( splitreg ); p++;
pieces[ p ] = "10,13,13,12".split( splitreg ); p++;
pieces[ p ] = "10,13,14,14".split( splitreg ); p++;
pieces[ p ] = "10,14,11,11".split( splitreg ); p++;
pieces[ p ] = "10,14,15,11".split( splitreg ); p++;
pieces[ p ] = "10,15,11,11".split( splitreg ); p++;
pieces[ p ] = "11,11,15,13".split( splitreg ); p++;
pieces[ p ] = "11,13,12,12".split( splitreg ); p++;
pieces[ p ] = "11,13,14,15".split( splitreg ); p++;
pieces[ p ] = "11,15,11,16".split( splitreg ); p++;
pieces[ p ] = "12,13,14,14".split( splitreg ); p++;
pieces[ p ] = "12,16,16,13".split( splitreg ); p++;
pieces[ p ] = "13,13,13,15".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

