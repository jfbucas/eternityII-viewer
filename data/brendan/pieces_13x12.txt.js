
puzzles[ nb_puzzles ] = "brendan/pieces_13x12.txt.js,Brendan 13x12".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_13x12.txt.js" ) {

board_w = 13;
board_h = 12;


pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,2,4".split( splitreg ); p++;
pieces[ p ] = "0,0,3,2".split( splitreg ); p++;
pieces[ p ] = "0,0,4,4".split( splitreg ); p++;
pieces[ p ] = "0,1,5,1".split( splitreg ); p++;
pieces[ p ] = "0,1,5,4".split( splitreg ); p++;
pieces[ p ] = "0,1,8,2".split( splitreg ); p++;
pieces[ p ] = "0,1,9,1".split( splitreg ); p++;
pieces[ p ] = "0,1,10,1".split( splitreg ); p++;
pieces[ p ] = "0,1,10,3".split( splitreg ); p++;
pieces[ p ] = "0,1,13,3".split( splitreg ); p++;
pieces[ p ] = "0,1,13,4".split( splitreg ); p++;
pieces[ p ] = "0,1,14,2".split( splitreg ); p++;
pieces[ p ] = "0,1,16,1".split( splitreg ); p++;
pieces[ p ] = "0,1,17,1".split( splitreg ); p++;
pieces[ p ] = "0,2,6,2".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,8,3".split( splitreg ); p++;
pieces[ p ] = "0,2,8,4".split( splitreg ); p++;
pieces[ p ] = "0,2,9,2".split( splitreg ); p++;
pieces[ p ] = "0,2,10,1".split( splitreg ); p++;
pieces[ p ] = "0,2,10,2".split( splitreg ); p++;
pieces[ p ] = "0,2,11,3".split( splitreg ); p++;
pieces[ p ] = "0,2,12,3".split( splitreg ); p++;
pieces[ p ] = "0,2,13,3".split( splitreg ); p++;
pieces[ p ] = "0,2,14,4".split( splitreg ); p++;
pieces[ p ] = "0,3,6,3".split( splitreg ); p++;
pieces[ p ] = "0,3,9,3".split( splitreg ); p++;
pieces[ p ] = "0,3,12,1".split( splitreg ); p++;
pieces[ p ] = "0,3,13,1".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,15,2".split( splitreg ); p++;
pieces[ p ] = "0,3,15,3".split( splitreg ); p++;
pieces[ p ] = "0,3,16,4".split( splitreg ); p++;
pieces[ p ] = "0,3,17,2".split( splitreg ); p++;
pieces[ p ] = "0,3,17,4".split( splitreg ); p++;
pieces[ p ] = "0,4,5,2".split( splitreg ); p++;
pieces[ p ] = "0,4,7,2".split( splitreg ); p++;
pieces[ p ] = "0,4,8,1".split( splitreg ); p++;
pieces[ p ] = "0,4,12,4".split( splitreg ); p++;
pieces[ p ] = "0,4,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,15,4".split( splitreg ); p++;
pieces[ p ] = "0,4,16,1".split( splitreg ); p++;
pieces[ p ] = "0,4,17,1".split( splitreg ); p++;
pieces[ p ] = "0,4,17,2".split( splitreg ); p++;
pieces[ p ] = "0,4,17,4".split( splitreg ); p++;
pieces[ p ] = "5,5,6,10".split( splitreg ); p++;
pieces[ p ] = "5,5,15,6".split( splitreg ); p++;
pieces[ p ] = "5,6,14,15".split( splitreg ); p++;
pieces[ p ] = "5,7,11,7".split( splitreg ); p++;
pieces[ p ] = "5,7,11,11".split( splitreg ); p++;
pieces[ p ] = "5,7,12,6".split( splitreg ); p++;
pieces[ p ] = "5,8,5,13".split( splitreg ); p++;
pieces[ p ] = "5,8,9,7".split( splitreg ); p++;
pieces[ p ] = "5,8,15,13".split( splitreg ); p++;
pieces[ p ] = "5,8,16,6".split( splitreg ); p++;
pieces[ p ] = "5,9,11,17".split( splitreg ); p++;
pieces[ p ] = "5,10,6,6".split( splitreg ); p++;
pieces[ p ] = "5,10,7,11".split( splitreg ); p++;
pieces[ p ] = "5,10,10,13".split( splitreg ); p++;
pieces[ p ] = "5,10,10,17".split( splitreg ); p++;
pieces[ p ] = "5,10,11,7".split( splitreg ); p++;
pieces[ p ] = "5,10,17,7".split( splitreg ); p++;
pieces[ p ] = "5,11,9,16".split( splitreg ); p++;
pieces[ p ] = "5,11,14,11".split( splitreg ); p++;
pieces[ p ] = "5,11,15,13".split( splitreg ); p++;
pieces[ p ] = "5,11,17,9".split( splitreg ); p++;
pieces[ p ] = "5,11,17,11".split( splitreg ); p++;
pieces[ p ] = "5,12,12,13".split( splitreg ); p++;
pieces[ p ] = "5,13,7,6".split( splitreg ); p++;
pieces[ p ] = "5,13,10,9".split( splitreg ); p++;
pieces[ p ] = "5,13,11,12".split( splitreg ); p++;
pieces[ p ] = "5,14,13,10".split( splitreg ); p++;
pieces[ p ] = "5,15,6,11".split( splitreg ); p++;
pieces[ p ] = "5,15,10,11".split( splitreg ); p++;
pieces[ p ] = "5,16,12,14".split( splitreg ); p++;
pieces[ p ] = "5,16,14,16".split( splitreg ); p++;
pieces[ p ] = "5,17,7,17".split( splitreg ); p++;
pieces[ p ] = "6,6,14,17".split( splitreg ); p++;
pieces[ p ] = "6,7,17,17".split( splitreg ); p++;
pieces[ p ] = "6,8,6,15".split( splitreg ); p++;
pieces[ p ] = "6,8,14,10".split( splitreg ); p++;
pieces[ p ] = "6,9,8,9".split( splitreg ); p++;
pieces[ p ] = "6,9,9,16".split( splitreg ); p++;
pieces[ p ] = "6,9,10,7".split( splitreg ); p++;
pieces[ p ] = "6,9,13,7".split( splitreg ); p++;
pieces[ p ] = "6,10,14,13".split( splitreg ); p++;
pieces[ p ] = "6,10,17,9".split( splitreg ); p++;
pieces[ p ] = "6,11,15,9".split( splitreg ); p++;
pieces[ p ] = "6,12,8,16".split( splitreg ); p++;
pieces[ p ] = "6,12,16,11".split( splitreg ); p++;
pieces[ p ] = "6,13,8,15".split( splitreg ); p++;
pieces[ p ] = "6,13,10,8".split( splitreg ); p++;
pieces[ p ] = "6,13,10,17".split( splitreg ); p++;
pieces[ p ] = "6,13,11,12".split( splitreg ); p++;
pieces[ p ] = "6,13,12,17".split( splitreg ); p++;
pieces[ p ] = "6,13,14,17".split( splitreg ); p++;
pieces[ p ] = "6,13,16,9".split( splitreg ); p++;
pieces[ p ] = "6,15,9,14".split( splitreg ); p++;
pieces[ p ] = "6,15,11,8".split( splitreg ); p++;
pieces[ p ] = "6,15,15,7".split( splitreg ); p++;
pieces[ p ] = "6,15,17,13".split( splitreg ); p++;
pieces[ p ] = "6,17,8,14".split( splitreg ); p++;
pieces[ p ] = "7,7,7,16".split( splitreg ); p++;
pieces[ p ] = "7,7,13,14".split( splitreg ); p++;
pieces[ p ] = "7,8,12,10".split( splitreg ); p++;
pieces[ p ] = "7,8,15,15".split( splitreg ); p++;
pieces[ p ] = "7,9,9,15".split( splitreg ); p++;
pieces[ p ] = "7,9,10,12".split( splitreg ); p++;
pieces[ p ] = "7,9,16,12".split( splitreg ); p++;
pieces[ p ] = "7,9,17,14".split( splitreg ); p++;
pieces[ p ] = "7,11,10,10".split( splitreg ); p++;
pieces[ p ] = "7,11,10,12".split( splitreg ); p++;
pieces[ p ] = "7,12,16,12".split( splitreg ); p++;
pieces[ p ] = "7,12,16,15".split( splitreg ); p++;
pieces[ p ] = "7,12,17,8".split( splitreg ); p++;
pieces[ p ] = "7,14,10,14".split( splitreg ); p++;
pieces[ p ] = "7,14,13,12".split( splitreg ); p++;
pieces[ p ] = "7,15,8,14".split( splitreg ); p++;
pieces[ p ] = "7,15,11,14".split( splitreg ); p++;
pieces[ p ] = "7,16,11,15".split( splitreg ); p++;
pieces[ p ] = "7,16,13,9".split( splitreg ); p++;
pieces[ p ] = "8,8,8,9".split( splitreg ); p++;
pieces[ p ] = "8,8,12,10".split( splitreg ); p++;
pieces[ p ] = "8,8,15,16".split( splitreg ); p++;
pieces[ p ] = "8,9,15,14".split( splitreg ); p++;
pieces[ p ] = "8,10,11,16".split( splitreg ); p++;
pieces[ p ] = "8,10,17,11".split( splitreg ); p++;
pieces[ p ] = "8,10,17,15".split( splitreg ); p++;
pieces[ p ] = "8,12,11,13".split( splitreg ); p++;
pieces[ p ] = "8,14,12,9".split( splitreg ); p++;
pieces[ p ] = "8,14,17,9".split( splitreg ); p++;
pieces[ p ] = "8,14,17,13".split( splitreg ); p++;
pieces[ p ] = "8,16,15,14".split( splitreg ); p++;
pieces[ p ] = "8,17,11,10".split( splitreg ); p++;
pieces[ p ] = "8,17,16,11".split( splitreg ); p++;
pieces[ p ] = "9,12,11,11".split( splitreg ); p++;
pieces[ p ] = "9,12,12,10".split( splitreg ); p++;
pieces[ p ] = "9,14,12,16".split( splitreg ); p++;
pieces[ p ] = "9,14,13,12".split( splitreg ); p++;
pieces[ p ] = "9,15,12,13".split( splitreg ); p++;
pieces[ p ] = "9,15,15,11".split( splitreg ); p++;
pieces[ p ] = "9,16,11,16".split( splitreg ); p++;
pieces[ p ] = "9,16,16,11".split( splitreg ); p++;
pieces[ p ] = "9,16,16,12".split( splitreg ); p++;
pieces[ p ] = "9,17,13,12".split( splitreg ); p++;
pieces[ p ] = "10,14,16,13".split( splitreg ); p++;
pieces[ p ] = "10,16,11,12".split( splitreg ); p++;
pieces[ p ] = "10,16,11,15".split( splitreg ); p++;
pieces[ p ] = "10,17,11,16".split( splitreg ); p++;
pieces[ p ] = "12,14,16,14".split( splitreg ); p++;
pieces[ p ] = "12,15,17,14".split( splitreg ); p++;
pieces[ p ] = "12,17,15,17".split( splitreg ); p++;
pieces[ p ] = "13,13,16,16".split( splitreg ); p++;
pieces[ p ] = "13,14,14,17".split( splitreg ); p++;
pieces[ p ] = "13,15,14,14".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

