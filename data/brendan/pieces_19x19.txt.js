
puzzles[ nb_puzzles ] = "brendan/pieces_19x19.txt.js,Brendan 19x19".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_19x19.txt.js" ) {

board_w = 19;
board_h = 19;


pieces[ p ] = "0,0,2,3".split( splitreg ); p++;
pieces[ p ] = "0,0,2,5".split( splitreg ); p++;
pieces[ p ] = "0,0,3,2".split( splitreg ); p++;
pieces[ p ] = "0,0,5,5".split( splitreg ); p++;
pieces[ p ] = "0,1,6,2".split( splitreg ); p++;
pieces[ p ] = "0,1,7,3".split( splitreg ); p++;
pieces[ p ] = "0,1,8,4".split( splitreg ); p++;
pieces[ p ] = "0,1,9,1".split( splitreg ); p++;
pieces[ p ] = "0,1,14,5".split( splitreg ); p++;
pieces[ p ] = "0,1,15,2".split( splitreg ); p++;
pieces[ p ] = "0,1,16,3".split( splitreg ); p++;
pieces[ p ] = "0,1,18,1".split( splitreg ); p++;
pieces[ p ] = "0,1,18,4".split( splitreg ); p++;
pieces[ p ] = "0,1,22,4".split( splitreg ); p++;
pieces[ p ] = "0,1,23,2".split( splitreg ); p++;
pieces[ p ] = "0,1,23,4".split( splitreg ); p++;
pieces[ p ] = "0,1,23,5".split( splitreg ); p++;
pieces[ p ] = "0,1,24,4".split( splitreg ); p++;
pieces[ p ] = "0,1,26,3".split( splitreg ); p++;
pieces[ p ] = "0,2,7,3".split( splitreg ); p++;
pieces[ p ] = "0,2,8,1".split( splitreg ); p++;
pieces[ p ] = "0,2,13,5".split( splitreg ); p++;
pieces[ p ] = "0,2,15,3".split( splitreg ); p++;
pieces[ p ] = "0,2,18,5".split( splitreg ); p++;
pieces[ p ] = "0,2,20,1".split( splitreg ); p++;
pieces[ p ] = "0,2,21,1".split( splitreg ); p++;
pieces[ p ] = "0,2,22,1".split( splitreg ); p++;
pieces[ p ] = "0,2,22,2".split( splitreg ); p++;
pieces[ p ] = "0,2,23,2".split( splitreg ); p++;
pieces[ p ] = "0,2,25,4".split( splitreg ); p++;
pieces[ p ] = "0,2,26,2".split( splitreg ); p++;
pieces[ p ] = "0,2,26,4".split( splitreg ); p++;
pieces[ p ] = "0,3,6,5".split( splitreg ); p++;
pieces[ p ] = "0,3,7,3".split( splitreg ); p++;
pieces[ p ] = "0,3,7,5".split( splitreg ); p++;
pieces[ p ] = "0,3,11,2".split( splitreg ); p++;
pieces[ p ] = "0,3,11,3".split( splitreg ); p++;
pieces[ p ] = "0,3,12,2".split( splitreg ); p++;
pieces[ p ] = "0,3,13,1".split( splitreg ); p++;
pieces[ p ] = "0,3,14,2".split( splitreg ); p++;
pieces[ p ] = "0,3,14,3".split( splitreg ); p++;
pieces[ p ] = "0,3,17,5".split( splitreg ); p++;
pieces[ p ] = "0,3,18,1".split( splitreg ); p++;
pieces[ p ] = "0,3,19,3".split( splitreg ); p++;
pieces[ p ] = "0,3,26,2".split( splitreg ); p++;
pieces[ p ] = "0,4,8,4".split( splitreg ); p++;
pieces[ p ] = "0,4,9,4".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,11,1".split( splitreg ); p++;
pieces[ p ] = "0,4,12,2".split( splitreg ); p++;
pieces[ p ] = "0,4,12,5".split( splitreg ); p++;
pieces[ p ] = "0,4,13,4".split( splitreg ); p++;
pieces[ p ] = "0,4,15,1".split( splitreg ); p++;
pieces[ p ] = "0,4,15,5".split( splitreg ); p++;
pieces[ p ] = "0,4,16,2".split( splitreg ); p++;
pieces[ p ] = "0,4,19,1".split( splitreg ); p++;
pieces[ p ] = "0,4,22,3".split( splitreg ); p++;
pieces[ p ] = "0,4,25,3".split( splitreg ); p++;
pieces[ p ] = "0,4,26,5".split( splitreg ); p++;
pieces[ p ] = "0,5,6,4".split( splitreg ); p++;
pieces[ p ] = "0,5,7,3".split( splitreg ); p++;
pieces[ p ] = "0,5,9,1".split( splitreg ); p++;
pieces[ p ] = "0,5,12,4".split( splitreg ); p++;
pieces[ p ] = "0,5,14,1".split( splitreg ); p++;
pieces[ p ] = "0,5,16,2".split( splitreg ); p++;
pieces[ p ] = "0,5,17,5".split( splitreg ); p++;
pieces[ p ] = "0,5,19,3".split( splitreg ); p++;
pieces[ p ] = "0,5,19,5".split( splitreg ); p++;
pieces[ p ] = "0,5,21,4".split( splitreg ); p++;
pieces[ p ] = "0,5,24,1".split( splitreg ); p++;
pieces[ p ] = "0,5,25,1".split( splitreg ); p++;
pieces[ p ] = "0,5,25,4".split( splitreg ); p++;
pieces[ p ] = "6,6,11,20".split( splitreg ); p++;
pieces[ p ] = "6,6,14,16".split( splitreg ); p++;
pieces[ p ] = "6,6,16,9".split( splitreg ); p++;
pieces[ p ] = "6,7,7,13".split( splitreg ); p++;
pieces[ p ] = "6,7,19,10".split( splitreg ); p++;
pieces[ p ] = "6,7,24,25".split( splitreg ); p++;
pieces[ p ] = "6,8,15,24".split( splitreg ); p++;
pieces[ p ] = "6,8,16,11".split( splitreg ); p++;
pieces[ p ] = "6,8,23,25".split( splitreg ); p++;
pieces[ p ] = "6,9,12,11".split( splitreg ); p++;
pieces[ p ] = "6,9,14,7".split( splitreg ); p++;
pieces[ p ] = "6,9,26,7".split( splitreg ); p++;
pieces[ p ] = "6,10,15,20".split( splitreg ); p++;
pieces[ p ] = "6,10,17,18".split( splitreg ); p++;
pieces[ p ] = "6,10,22,25".split( splitreg ); p++;
pieces[ p ] = "6,11,10,20".split( splitreg ); p++;
pieces[ p ] = "6,11,11,18".split( splitreg ); p++;
pieces[ p ] = "6,11,20,20".split( splitreg ); p++;
pieces[ p ] = "6,11,20,25".split( splitreg ); p++;
pieces[ p ] = "6,12,15,7".split( splitreg ); p++;
pieces[ p ] = "6,12,15,21".split( splitreg ); p++;
pieces[ p ] = "6,12,19,16".split( splitreg ); p++;
pieces[ p ] = "6,12,21,10".split( splitreg ); p++;
pieces[ p ] = "6,13,7,9".split( splitreg ); p++;
pieces[ p ] = "6,13,14,9".split( splitreg ); p++;
pieces[ p ] = "6,13,22,17".split( splitreg ); p++;
pieces[ p ] = "6,14,25,21".split( splitreg ); p++;
pieces[ p ] = "6,15,8,22".split( splitreg ); p++;
pieces[ p ] = "6,15,21,25".split( splitreg ); p++;
pieces[ p ] = "6,15,22,20".split( splitreg ); p++;
pieces[ p ] = "6,16,14,25".split( splitreg ); p++;
pieces[ p ] = "6,16,18,20".split( splitreg ); p++;
pieces[ p ] = "6,16,20,12".split( splitreg ); p++;
pieces[ p ] = "6,16,26,18".split( splitreg ); p++;
pieces[ p ] = "6,17,20,8".split( splitreg ); p++;
pieces[ p ] = "6,18,24,11".split( splitreg ); p++;
pieces[ p ] = "6,18,25,12".split( splitreg ); p++;
pieces[ p ] = "6,19,17,11".split( splitreg ); p++;
pieces[ p ] = "6,21,8,20".split( splitreg ); p++;
pieces[ p ] = "6,21,9,23".split( splitreg ); p++;
pieces[ p ] = "6,21,10,7".split( splitreg ); p++;
pieces[ p ] = "6,21,18,15".split( splitreg ); p++;
pieces[ p ] = "6,22,7,8".split( splitreg ); p++;
pieces[ p ] = "6,22,24,21".split( splitreg ); p++;
pieces[ p ] = "6,23,15,16".split( splitreg ); p++;
pieces[ p ] = "6,23,18,18".split( splitreg ); p++;
pieces[ p ] = "6,23,22,25".split( splitreg ); p++;
pieces[ p ] = "6,23,23,10".split( splitreg ); p++;
pieces[ p ] = "6,24,18,13".split( splitreg ); p++;
pieces[ p ] = "6,24,18,21".split( splitreg ); p++;
pieces[ p ] = "6,24,19,18".split( splitreg ); p++;
pieces[ p ] = "6,24,21,7".split( splitreg ); p++;
pieces[ p ] = "6,24,23,20".split( splitreg ); p++;
pieces[ p ] = "6,26,21,21".split( splitreg ); p++;
pieces[ p ] = "7,7,25,21".split( splitreg ); p++;
pieces[ p ] = "7,8,10,9".split( splitreg ); p++;
pieces[ p ] = "7,8,15,12".split( splitreg ); p++;
pieces[ p ] = "7,8,17,12".split( splitreg ); p++;
pieces[ p ] = "7,8,19,8".split( splitreg ); p++;
pieces[ p ] = "7,8,19,17".split( splitreg ); p++;
pieces[ p ] = "7,8,20,26".split( splitreg ); p++;
pieces[ p ] = "7,8,25,17".split( splitreg ); p++;
pieces[ p ] = "7,9,13,18".split( splitreg ); p++;
pieces[ p ] = "7,9,14,8".split( splitreg ); p++;
pieces[ p ] = "7,11,22,10".split( splitreg ); p++;
pieces[ p ] = "7,12,11,21".split( splitreg ); p++;
pieces[ p ] = "7,13,14,9".split( splitreg ); p++;
pieces[ p ] = "7,13,23,10".split( splitreg ); p++;
pieces[ p ] = "7,13,23,12".split( splitreg ); p++;
pieces[ p ] = "7,13,24,15".split( splitreg ); p++;
pieces[ p ] = "7,15,22,11".split( splitreg ); p++;
pieces[ p ] = "7,16,7,24".split( splitreg ); p++;
pieces[ p ] = "7,16,14,11".split( splitreg ); p++;
pieces[ p ] = "7,16,15,26".split( splitreg ); p++;
pieces[ p ] = "7,18,12,25".split( splitreg ); p++;
pieces[ p ] = "7,19,21,10".split( splitreg ); p++;
pieces[ p ] = "7,19,21,22".split( splitreg ); p++;
pieces[ p ] = "7,20,13,12".split( splitreg ); p++;
pieces[ p ] = "7,20,15,15".split( splitreg ); p++;
pieces[ p ] = "7,21,21,15".split( splitreg ); p++;
pieces[ p ] = "7,21,25,23".split( splitreg ); p++;
pieces[ p ] = "7,23,9,9".split( splitreg ); p++;
pieces[ p ] = "7,23,9,19".split( splitreg ); p++;
pieces[ p ] = "7,23,19,17".split( splitreg ); p++;
pieces[ p ] = "7,23,26,10".split( splitreg ); p++;
pieces[ p ] = "7,24,9,15".split( splitreg ); p++;
pieces[ p ] = "7,24,9,25".split( splitreg ); p++;
pieces[ p ] = "7,24,20,14".split( splitreg ); p++;
pieces[ p ] = "7,24,24,20".split( splitreg ); p++;
pieces[ p ] = "7,24,26,24".split( splitreg ); p++;
pieces[ p ] = "7,25,8,19".split( splitreg ); p++;
pieces[ p ] = "7,25,9,25".split( splitreg ); p++;
pieces[ p ] = "7,25,12,12".split( splitreg ); p++;
pieces[ p ] = "7,25,17,16".split( splitreg ); p++;
pieces[ p ] = "7,25,26,24".split( splitreg ); p++;
pieces[ p ] = "7,26,24,19".split( splitreg ); p++;
pieces[ p ] = "8,8,10,23".split( splitreg ); p++;
pieces[ p ] = "8,8,20,24".split( splitreg ); p++;
pieces[ p ] = "8,9,24,10".split( splitreg ); p++;
pieces[ p ] = "8,10,16,21".split( splitreg ); p++;
pieces[ p ] = "8,10,20,12".split( splitreg ); p++;
pieces[ p ] = "8,10,25,17".split( splitreg ); p++;
pieces[ p ] = "8,11,18,14".split( splitreg ); p++;
pieces[ p ] = "8,12,11,26".split( splitreg ); p++;
pieces[ p ] = "8,12,13,15".split( splitreg ); p++;
pieces[ p ] = "8,12,19,15".split( splitreg ); p++;
pieces[ p ] = "8,12,23,25".split( splitreg ); p++;
pieces[ p ] = "8,13,13,9".split( splitreg ); p++;
pieces[ p ] = "8,13,13,10".split( splitreg ); p++;
pieces[ p ] = "8,13,17,21".split( splitreg ); p++;
pieces[ p ] = "8,13,18,14".split( splitreg ); p++;
pieces[ p ] = "8,13,20,14".split( splitreg ); p++;
pieces[ p ] = "8,13,22,9".split( splitreg ); p++;
pieces[ p ] = "8,14,16,26".split( splitreg ); p++;
pieces[ p ] = "8,15,24,19".split( splitreg ); p++;
pieces[ p ] = "8,16,11,16".split( splitreg ); p++;
pieces[ p ] = "8,16,26,20".split( splitreg ); p++;
pieces[ p ] = "8,17,13,19".split( splitreg ); p++;
pieces[ p ] = "8,17,14,22".split( splitreg ); p++;
pieces[ p ] = "8,17,23,26".split( splitreg ); p++;
pieces[ p ] = "8,18,22,13".split( splitreg ); p++;
pieces[ p ] = "8,19,11,18".split( splitreg ); p++;
pieces[ p ] = "8,20,12,13".split( splitreg ); p++;
pieces[ p ] = "8,20,17,26".split( splitreg ); p++;
pieces[ p ] = "8,21,10,14".split( splitreg ); p++;
pieces[ p ] = "8,21,15,15".split( splitreg ); p++;
pieces[ p ] = "8,22,14,19".split( splitreg ); p++;
pieces[ p ] = "8,22,25,22".split( splitreg ); p++;
pieces[ p ] = "8,24,17,10".split( splitreg ); p++;
pieces[ p ] = "8,24,20,25".split( splitreg ); p++;
pieces[ p ] = "8,25,21,23".split( splitreg ); p++;
pieces[ p ] = "8,26,9,22".split( splitreg ); p++;
pieces[ p ] = "8,26,14,9".split( splitreg ); p++;
pieces[ p ] = "8,26,20,9".split( splitreg ); p++;
pieces[ p ] = "9,9,10,26".split( splitreg ); p++;
pieces[ p ] = "9,11,14,13".split( splitreg ); p++;
pieces[ p ] = "9,11,20,18".split( splitreg ); p++;
pieces[ p ] = "9,11,23,24".split( splitreg ); p++;
pieces[ p ] = "9,12,12,19".split( splitreg ); p++;
pieces[ p ] = "9,12,12,26".split( splitreg ); p++;
pieces[ p ] = "9,12,17,23".split( splitreg ); p++;
pieces[ p ] = "9,12,20,12".split( splitreg ); p++;
pieces[ p ] = "9,13,20,17".split( splitreg ); p++;
pieces[ p ] = "9,14,20,14".split( splitreg ); p++;
pieces[ p ] = "9,16,11,26".split( splitreg ); p++;
pieces[ p ] = "9,16,13,22".split( splitreg ); p++;
pieces[ p ] = "9,17,13,23".split( splitreg ); p++;
pieces[ p ] = "9,17,18,15".split( splitreg ); p++;
pieces[ p ] = "9,17,24,16".split( splitreg ); p++;
pieces[ p ] = "9,18,14,18".split( splitreg ); p++;
pieces[ p ] = "9,18,20,12".split( splitreg ); p++;
pieces[ p ] = "9,18,20,23".split( splitreg ); p++;
pieces[ p ] = "9,18,21,14".split( splitreg ); p++;
pieces[ p ] = "9,19,16,24".split( splitreg ); p++;
pieces[ p ] = "9,19,17,14".split( splitreg ); p++;
pieces[ p ] = "9,19,23,21".split( splitreg ); p++;
pieces[ p ] = "9,22,9,25".split( splitreg ); p++;
pieces[ p ] = "9,22,19,20".split( splitreg ); p++;
pieces[ p ] = "9,22,26,17".split( splitreg ); p++;
pieces[ p ] = "9,23,18,25".split( splitreg ); p++;
pieces[ p ] = "9,24,21,24".split( splitreg ); p++;
pieces[ p ] = "9,25,11,23".split( splitreg ); p++;
pieces[ p ] = "9,25,15,11".split( splitreg ); p++;
pieces[ p ] = "9,26,25,17".split( splitreg ); p++;
pieces[ p ] = "10,10,20,14".split( splitreg ); p++;
pieces[ p ] = "10,10,20,21".split( splitreg ); p++;
pieces[ p ] = "10,10,22,23".split( splitreg ); p++;
pieces[ p ] = "10,10,26,17".split( splitreg ); p++;
pieces[ p ] = "10,12,14,18".split( splitreg ); p++;
pieces[ p ] = "10,12,21,13".split( splitreg ); p++;
pieces[ p ] = "10,13,11,16".split( splitreg ); p++;
pieces[ p ] = "10,13,11,17".split( splitreg ); p++;
pieces[ p ] = "10,13,19,19".split( splitreg ); p++;
pieces[ p ] = "10,14,10,24".split( splitreg ); p++;
pieces[ p ] = "10,14,14,21".split( splitreg ); p++;
pieces[ p ] = "10,14,16,14".split( splitreg ); p++;
pieces[ p ] = "10,14,21,26".split( splitreg ); p++;
pieces[ p ] = "10,14,25,15".split( splitreg ); p++;
pieces[ p ] = "10,15,16,20".split( splitreg ); p++;
pieces[ p ] = "10,16,19,26".split( splitreg ); p++;
pieces[ p ] = "10,16,20,26".split( splitreg ); p++;
pieces[ p ] = "10,19,16,11".split( splitreg ); p++;
pieces[ p ] = "10,19,19,11".split( splitreg ); p++;
pieces[ p ] = "10,21,18,11".split( splitreg ); p++;
pieces[ p ] = "10,21,23,24".split( splitreg ); p++;
pieces[ p ] = "10,21,26,19".split( splitreg ); p++;
pieces[ p ] = "10,22,11,22".split( splitreg ); p++;
pieces[ p ] = "10,22,14,12".split( splitreg ); p++;
pieces[ p ] = "10,22,26,14".split( splitreg ); p++;
pieces[ p ] = "10,23,18,11".split( splitreg ); p++;
pieces[ p ] = "10,24,21,13".split( splitreg ); p++;
pieces[ p ] = "10,25,14,15".split( splitreg ); p++;
pieces[ p ] = "10,26,17,11".split( splitreg ); p++;
pieces[ p ] = "10,26,18,11".split( splitreg ); p++;
pieces[ p ] = "11,11,18,15".split( splitreg ); p++;
pieces[ p ] = "11,12,23,13".split( splitreg ); p++;
pieces[ p ] = "11,16,12,13".split( splitreg ); p++;
pieces[ p ] = "11,16,24,22".split( splitreg ); p++;
pieces[ p ] = "11,17,21,19".split( splitreg ); p++;
pieces[ p ] = "11,17,23,26".split( splitreg ); p++;
pieces[ p ] = "11,18,13,22".split( splitreg ); p++;
pieces[ p ] = "11,18,22,23".split( splitreg ); p++;
pieces[ p ] = "11,19,11,22".split( splitreg ); p++;
pieces[ p ] = "11,19,15,18".split( splitreg ); p++;
pieces[ p ] = "11,20,12,22".split( splitreg ); p++;
pieces[ p ] = "11,20,20,19".split( splitreg ); p++;
pieces[ p ] = "11,20,23,20".split( splitreg ); p++;
pieces[ p ] = "11,21,17,25".split( splitreg ); p++;
pieces[ p ] = "11,22,13,21".split( splitreg ); p++;
pieces[ p ] = "11,23,15,23".split( splitreg ); p++;
pieces[ p ] = "11,25,13,18".split( splitreg ); p++;
pieces[ p ] = "11,25,20,26".split( splitreg ); p++;
pieces[ p ] = "11,25,24,12".split( splitreg ); p++;
pieces[ p ] = "11,26,19,16".split( splitreg ); p++;
pieces[ p ] = "12,13,12,22".split( splitreg ); p++;
pieces[ p ] = "12,14,21,26".split( splitreg ); p++;
pieces[ p ] = "12,15,21,17".split( splitreg ); p++;
pieces[ p ] = "12,16,12,25".split( splitreg ); p++;
pieces[ p ] = "12,17,15,25".split( splitreg ); p++;
pieces[ p ] = "12,17,16,18".split( splitreg ); p++;
pieces[ p ] = "12,17,19,15".split( splitreg ); p++;
pieces[ p ] = "12,17,23,23".split( splitreg ); p++;
pieces[ p ] = "12,18,18,16".split( splitreg ); p++;
pieces[ p ] = "12,19,14,20".split( splitreg ); p++;
pieces[ p ] = "12,22,19,13".split( splitreg ); p++;
pieces[ p ] = "12,22,23,19".split( splitreg ); p++;
pieces[ p ] = "12,23,17,19".split( splitreg ); p++;
pieces[ p ] = "12,24,25,26".split( splitreg ); p++;
pieces[ p ] = "12,24,26,18".split( splitreg ); p++;
pieces[ p ] = "12,26,26,18".split( splitreg ); p++;
pieces[ p ] = "13,13,26,19".split( splitreg ); p++;
pieces[ p ] = "13,16,15,21".split( splitreg ); p++;
pieces[ p ] = "13,16,17,15".split( splitreg ); p++;
pieces[ p ] = "13,16,21,21".split( splitreg ); p++;
pieces[ p ] = "13,16,22,25".split( splitreg ); p++;
pieces[ p ] = "13,16,24,22".split( splitreg ); p++;
pieces[ p ] = "13,17,26,22".split( splitreg ); p++;
pieces[ p ] = "13,21,15,15".split( splitreg ); p++;
pieces[ p ] = "13,23,14,17".split( splitreg ); p++;
pieces[ p ] = "13,23,14,21".split( splitreg ); p++;
pieces[ p ] = "13,23,23,18".split( splitreg ); p++;
pieces[ p ] = "13,24,17,14".split( splitreg ); p++;
pieces[ p ] = "13,25,14,14".split( splitreg ); p++;
pieces[ p ] = "13,25,20,26".split( splitreg ); p++;
pieces[ p ] = "13,25,22,17".split( splitreg ); p++;
pieces[ p ] = "14,14,14,20".split( splitreg ); p++;
pieces[ p ] = "14,14,17,20".split( splitreg ); p++;
pieces[ p ] = "14,16,19,18".split( splitreg ); p++;
pieces[ p ] = "14,17,19,22".split( splitreg ); p++;
pieces[ p ] = "14,20,15,24".split( splitreg ); p++;
pieces[ p ] = "14,23,20,15".split( splitreg ); p++;
pieces[ p ] = "14,25,21,24".split( splitreg ); p++;
pieces[ p ] = "14,26,17,19".split( splitreg ); p++;
pieces[ p ] = "14,26,20,23".split( splitreg ); p++;
pieces[ p ] = "15,15,20,17".split( splitreg ); p++;
pieces[ p ] = "15,15,26,24".split( splitreg ); p++;
pieces[ p ] = "15,16,20,16".split( splitreg ); p++;
pieces[ p ] = "15,16,24,16".split( splitreg ); p++;
pieces[ p ] = "15,19,21,17".split( splitreg ); p++;
pieces[ p ] = "15,19,23,16".split( splitreg ); p++;
pieces[ p ] = "15,20,17,25".split( splitreg ); p++;
pieces[ p ] = "15,21,15,24".split( splitreg ); p++;
pieces[ p ] = "15,22,16,22".split( splitreg ); p++;
pieces[ p ] = "15,22,21,17".split( splitreg ); p++;
pieces[ p ] = "15,23,25,23".split( splitreg ); p++;
pieces[ p ] = "15,24,24,18".split( splitreg ); p++;
pieces[ p ] = "16,16,19,25".split( splitreg ); p++;
pieces[ p ] = "16,17,19,24".split( splitreg ); p++;
pieces[ p ] = "16,18,23,26".split( splitreg ); p++;
pieces[ p ] = "16,18,26,17".split( splitreg ); p++;
pieces[ p ] = "16,21,20,19".split( splitreg ); p++;
pieces[ p ] = "16,21,26,26".split( splitreg ); p++;
pieces[ p ] = "16,24,23,18".split( splitreg ); p++;
pieces[ p ] = "16,26,22,18".split( splitreg ); p++;
pieces[ p ] = "17,18,25,22".split( splitreg ); p++;
pieces[ p ] = "17,19,24,25".split( splitreg ); p++;
pieces[ p ] = "17,20,18,22".split( splitreg ); p++;
pieces[ p ] = "17,21,22,19".split( splitreg ); p++;
pieces[ p ] = "17,22,22,22".split( splitreg ); p++;
pieces[ p ] = "17,25,18,26".split( splitreg ); p++;
pieces[ p ] = "18,22,24,23".split( splitreg ); p++;
pieces[ p ] = "18,23,21,24".split( splitreg ); p++;
pieces[ p ] = "18,24,22,22".split( splitreg ); p++;
pieces[ p ] = "18,26,19,22".split( splitreg ); p++;
pieces[ p ] = "19,19,20,25".split( splitreg ); p++;
pieces[ p ] = "19,23,25,25".split( splitreg ); p++;
pieces[ p ] = "20,24,24,21".split( splitreg ); p++;
pieces[ p ] = "20,26,21,24".split( splitreg ); p++;
pieces[ p ] = "23,24,26,25".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

