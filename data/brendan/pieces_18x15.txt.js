
puzzles[ nb_puzzles ] = "brendan/pieces_18x15.txt.js,Brendan 18x15".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_18x15.txt.js" ) {

board_w = 18;
board_h = 15;


pieces[ p ] = "0,0,1,2".split( splitreg ); p++;
pieces[ p ] = "0,0,2,1".split( splitreg ); p++;
pieces[ p ] = "0,0,4,1".split( splitreg ); p++;
pieces[ p ] = "0,0,5,4".split( splitreg ); p++;
pieces[ p ] = "0,1,8,5".split( splitreg ); p++;
pieces[ p ] = "0,1,9,5".split( splitreg ); p++;
pieces[ p ] = "0,1,10,1".split( splitreg ); p++;
pieces[ p ] = "0,1,10,4".split( splitreg ); p++;
pieces[ p ] = "0,1,10,5".split( splitreg ); p++;
pieces[ p ] = "0,1,11,5".split( splitreg ); p++;
pieces[ p ] = "0,1,16,3".split( splitreg ); p++;
pieces[ p ] = "0,1,17,1".split( splitreg ); p++;
pieces[ p ] = "0,1,17,5".split( splitreg ); p++;
pieces[ p ] = "0,1,18,4".split( splitreg ); p++;
pieces[ p ] = "0,1,22,2".split( splitreg ); p++;
pieces[ p ] = "0,1,23,1".split( splitreg ); p++;
pieces[ p ] = "0,2,6,5".split( splitreg ); p++;
pieces[ p ] = "0,2,7,1".split( splitreg ); p++;
pieces[ p ] = "0,2,7,5".split( splitreg ); p++;
pieces[ p ] = "0,2,9,4".split( splitreg ); p++;
pieces[ p ] = "0,2,9,5".split( splitreg ); p++;
pieces[ p ] = "0,2,11,2".split( splitreg ); p++;
pieces[ p ] = "0,2,12,2".split( splitreg ); p++;
pieces[ p ] = "0,2,12,3".split( splitreg ); p++;
pieces[ p ] = "0,2,13,2".split( splitreg ); p++;
pieces[ p ] = "0,2,14,4".split( splitreg ); p++;
pieces[ p ] = "0,2,23,3".split( splitreg ); p++;
pieces[ p ] = "0,2,23,4".split( splitreg ); p++;
pieces[ p ] = "0,3,6,5".split( splitreg ); p++;
pieces[ p ] = "0,3,8,2".split( splitreg ); p++;
pieces[ p ] = "0,3,8,5".split( splitreg ); p++;
pieces[ p ] = "0,3,10,3".split( splitreg ); p++;
pieces[ p ] = "0,3,13,1".split( splitreg ); p++;
pieces[ p ] = "0,3,14,1".split( splitreg ); p++;
pieces[ p ] = "0,3,14,3".split( splitreg ); p++;
pieces[ p ] = "0,3,18,2".split( splitreg ); p++;
pieces[ p ] = "0,3,18,3".split( splitreg ); p++;
pieces[ p ] = "0,3,19,4".split( splitreg ); p++;
pieces[ p ] = "0,3,21,1".split( splitreg ); p++;
pieces[ p ] = "0,3,22,4".split( splitreg ); p++;
pieces[ p ] = "0,4,6,1".split( splitreg ); p++;
pieces[ p ] = "0,4,8,2".split( splitreg ); p++;
pieces[ p ] = "0,4,8,4".split( splitreg ); p++;
pieces[ p ] = "0,4,9,3".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,4".split( splitreg ); p++;
pieces[ p ] = "0,4,19,5".split( splitreg ); p++;
pieces[ p ] = "0,4,20,1".split( splitreg ); p++;
pieces[ p ] = "0,4,22,1".split( splitreg ); p++;
pieces[ p ] = "0,4,23,3".split( splitreg ); p++;
pieces[ p ] = "0,4,23,4".split( splitreg ); p++;
pieces[ p ] = "0,5,9,1".split( splitreg ); p++;
pieces[ p ] = "0,5,10,2".split( splitreg ); p++;
pieces[ p ] = "0,5,10,3".split( splitreg ); p++;
pieces[ p ] = "0,5,11,3".split( splitreg ); p++;
pieces[ p ] = "0,5,12,2".split( splitreg ); p++;
pieces[ p ] = "0,5,13,4".split( splitreg ); p++;
pieces[ p ] = "0,5,14,3".split( splitreg ); p++;
pieces[ p ] = "0,5,17,2".split( splitreg ); p++;
pieces[ p ] = "0,5,18,2".split( splitreg ); p++;
pieces[ p ] = "0,5,21,3".split( splitreg ); p++;
pieces[ p ] = "0,5,23,5".split( splitreg ); p++;
pieces[ p ] = "6,6,23,7".split( splitreg ); p++;
pieces[ p ] = "6,6,23,16".split( splitreg ); p++;
pieces[ p ] = "6,7,7,8".split( splitreg ); p++;
pieces[ p ] = "6,7,7,16".split( splitreg ); p++;
pieces[ p ] = "6,8,8,23".split( splitreg ); p++;
pieces[ p ] = "6,8,11,20".split( splitreg ); p++;
pieces[ p ] = "6,9,8,23".split( splitreg ); p++;
pieces[ p ] = "6,9,9,10".split( splitreg ); p++;
pieces[ p ] = "6,9,11,13".split( splitreg ); p++;
pieces[ p ] = "6,9,16,11".split( splitreg ); p++;
pieces[ p ] = "6,9,18,20".split( splitreg ); p++;
pieces[ p ] = "6,9,21,10".split( splitreg ); p++;
pieces[ p ] = "6,9,23,14".split( splitreg ); p++;
pieces[ p ] = "6,10,15,13".split( splitreg ); p++;
pieces[ p ] = "6,10,15,17".split( splitreg ); p++;
pieces[ p ] = "6,11,7,8".split( splitreg ); p++;
pieces[ p ] = "6,11,11,22".split( splitreg ); p++;
pieces[ p ] = "6,12,9,8".split( splitreg ); p++;
pieces[ p ] = "6,12,14,11".split( splitreg ); p++;
pieces[ p ] = "6,13,8,11".split( splitreg ); p++;
pieces[ p ] = "6,13,15,11".split( splitreg ); p++;
pieces[ p ] = "6,13,17,8".split( splitreg ); p++;
pieces[ p ] = "6,13,19,23".split( splitreg ); p++;
pieces[ p ] = "6,13,20,20".split( splitreg ); p++;
pieces[ p ] = "6,14,21,23".split( splitreg ); p++;
pieces[ p ] = "6,16,12,13".split( splitreg ); p++;
pieces[ p ] = "6,16,15,20".split( splitreg ); p++;
pieces[ p ] = "6,16,17,9".split( splitreg ); p++;
pieces[ p ] = "6,17,22,22".split( splitreg ); p++;
pieces[ p ] = "6,18,12,15".split( splitreg ); p++;
pieces[ p ] = "6,18,15,8".split( splitreg ); p++;
pieces[ p ] = "6,19,8,15".split( splitreg ); p++;
pieces[ p ] = "6,19,8,20".split( splitreg ); p++;
pieces[ p ] = "6,19,15,12".split( splitreg ); p++;
pieces[ p ] = "6,19,19,20".split( splitreg ); p++;
pieces[ p ] = "6,20,11,14".split( splitreg ); p++;
pieces[ p ] = "6,21,7,17".split( splitreg ); p++;
pieces[ p ] = "6,21,13,14".split( splitreg ); p++;
pieces[ p ] = "6,22,12,17".split( splitreg ); p++;
pieces[ p ] = "6,22,13,9".split( splitreg ); p++;
pieces[ p ] = "6,22,15,20".split( splitreg ); p++;
pieces[ p ] = "6,22,23,21".split( splitreg ); p++;
pieces[ p ] = "6,23,11,11".split( splitreg ); p++;
pieces[ p ] = "6,23,16,19".split( splitreg ); p++;
pieces[ p ] = "6,23,21,20".split( splitreg ); p++;
pieces[ p ] = "7,7,8,22".split( splitreg ); p++;
pieces[ p ] = "7,8,23,10".split( splitreg ); p++;
pieces[ p ] = "7,9,13,20".split( splitreg ); p++;
pieces[ p ] = "7,10,9,13".split( splitreg ); p++;
pieces[ p ] = "7,10,11,9".split( splitreg ); p++;
pieces[ p ] = "7,10,18,9".split( splitreg ); p++;
pieces[ p ] = "7,10,21,11".split( splitreg ); p++;
pieces[ p ] = "7,11,7,12".split( splitreg ); p++;
pieces[ p ] = "7,11,20,22".split( splitreg ); p++;
pieces[ p ] = "7,11,22,12".split( splitreg ); p++;
pieces[ p ] = "7,12,11,15".split( splitreg ); p++;
pieces[ p ] = "7,12,18,23".split( splitreg ); p++;
pieces[ p ] = "7,13,15,15".split( splitreg ); p++;
pieces[ p ] = "7,13,22,18".split( splitreg ); p++;
pieces[ p ] = "7,14,14,21".split( splitreg ); p++;
pieces[ p ] = "7,14,17,23".split( splitreg ); p++;
pieces[ p ] = "7,15,9,17".split( splitreg ); p++;
pieces[ p ] = "7,15,10,19".split( splitreg ); p++;
pieces[ p ] = "7,15,22,8".split( splitreg ); p++;
pieces[ p ] = "7,16,14,22".split( splitreg ); p++;
pieces[ p ] = "7,16,20,14".split( splitreg ); p++;
pieces[ p ] = "7,17,9,15".split( splitreg ); p++;
pieces[ p ] = "7,17,10,16".split( splitreg ); p++;
pieces[ p ] = "7,17,23,22".split( splitreg ); p++;
pieces[ p ] = "7,18,15,22".split( splitreg ); p++;
pieces[ p ] = "7,19,9,20".split( splitreg ); p++;
pieces[ p ] = "7,19,10,8".split( splitreg ); p++;
pieces[ p ] = "7,19,15,8".split( splitreg ); p++;
pieces[ p ] = "7,19,20,14".split( splitreg ); p++;
pieces[ p ] = "7,19,21,15".split( splitreg ); p++;
pieces[ p ] = "7,20,11,12".split( splitreg ); p++;
pieces[ p ] = "7,20,11,13".split( splitreg ); p++;
pieces[ p ] = "7,20,14,11".split( splitreg ); p++;
pieces[ p ] = "7,20,19,17".split( splitreg ); p++;
pieces[ p ] = "7,21,21,22".split( splitreg ); p++;
pieces[ p ] = "7,22,8,21".split( splitreg ); p++;
pieces[ p ] = "7,22,12,19".split( splitreg ); p++;
pieces[ p ] = "7,23,11,22".split( splitreg ); p++;
pieces[ p ] = "7,23,23,12".split( splitreg ); p++;
pieces[ p ] = "8,8,13,22".split( splitreg ); p++;
pieces[ p ] = "8,8,15,19".split( splitreg ); p++;
pieces[ p ] = "8,9,12,16".split( splitreg ); p++;
pieces[ p ] = "8,9,18,10".split( splitreg ); p++;
pieces[ p ] = "8,10,22,20".split( splitreg ); p++;
pieces[ p ] = "8,11,18,21".split( splitreg ); p++;
pieces[ p ] = "8,12,9,9".split( splitreg ); p++;
pieces[ p ] = "8,12,13,17".split( splitreg ); p++;
pieces[ p ] = "8,12,14,12".split( splitreg ); p++;
pieces[ p ] = "8,12,22,15".split( splitreg ); p++;
pieces[ p ] = "8,14,14,10".split( splitreg ); p++;
pieces[ p ] = "8,14,17,11".split( splitreg ); p++;
pieces[ p ] = "8,16,13,19".split( splitreg ); p++;
pieces[ p ] = "8,16,17,17".split( splitreg ); p++;
pieces[ p ] = "8,16,18,21".split( splitreg ); p++;
pieces[ p ] = "8,17,19,15".split( splitreg ); p++;
pieces[ p ] = "8,18,8,23".split( splitreg ); p++;
pieces[ p ] = "8,18,19,15".split( splitreg ); p++;
pieces[ p ] = "8,19,9,20".split( splitreg ); p++;
pieces[ p ] = "8,19,18,18".split( splitreg ); p++;
pieces[ p ] = "8,20,19,10".split( splitreg ); p++;
pieces[ p ] = "8,21,20,22".split( splitreg ); p++;
pieces[ p ] = "8,23,20,13".split( splitreg ); p++;
pieces[ p ] = "8,23,21,17".split( splitreg ); p++;
pieces[ p ] = "9,10,16,14".split( splitreg ); p++;
pieces[ p ] = "9,10,19,17".split( splitreg ); p++;
pieces[ p ] = "9,10,20,15".split( splitreg ); p++;
pieces[ p ] = "9,13,15,15".split( splitreg ); p++;
pieces[ p ] = "9,14,19,19".split( splitreg ); p++;
pieces[ p ] = "9,14,23,14".split( splitreg ); p++;
pieces[ p ] = "9,15,22,15".split( splitreg ); p++;
pieces[ p ] = "9,16,19,22".split( splitreg ); p++;
pieces[ p ] = "9,17,12,10".split( splitreg ); p++;
pieces[ p ] = "9,17,16,14".split( splitreg ); p++;
pieces[ p ] = "9,17,16,22".split( splitreg ); p++;
pieces[ p ] = "9,17,21,15".split( splitreg ); p++;
pieces[ p ] = "9,17,21,16".split( splitreg ); p++;
pieces[ p ] = "9,18,12,21".split( splitreg ); p++;
pieces[ p ] = "9,18,23,19".split( splitreg ); p++;
pieces[ p ] = "9,19,18,14".split( splitreg ); p++;
pieces[ p ] = "9,20,16,22".split( splitreg ); p++;
pieces[ p ] = "9,21,14,21".split( splitreg ); p++;
pieces[ p ] = "9,21,16,10".split( splitreg ); p++;
pieces[ p ] = "9,21,17,21".split( splitreg ); p++;
pieces[ p ] = "9,22,17,22".split( splitreg ); p++;
pieces[ p ] = "9,22,23,13".split( splitreg ); p++;
pieces[ p ] = "10,10,13,23".split( splitreg ); p++;
pieces[ p ] = "10,10,14,19".split( splitreg ); p++;
pieces[ p ] = "10,11,12,11".split( splitreg ); p++;
pieces[ p ] = "10,12,12,11".split( splitreg ); p++;
pieces[ p ] = "10,13,10,19".split( splitreg ); p++;
pieces[ p ] = "10,14,14,22".split( splitreg ); p++;
pieces[ p ] = "10,14,20,13".split( splitreg ); p++;
pieces[ p ] = "10,14,22,21".split( splitreg ); p++;
pieces[ p ] = "10,15,16,15".split( splitreg ); p++;
pieces[ p ] = "10,15,16,20".split( splitreg ); p++;
pieces[ p ] = "10,15,17,19".split( splitreg ); p++;
pieces[ p ] = "10,16,12,12".split( splitreg ); p++;
pieces[ p ] = "10,18,11,18".split( splitreg ); p++;
pieces[ p ] = "10,18,14,20".split( splitreg ); p++;
pieces[ p ] = "10,18,16,18".split( splitreg ); p++;
pieces[ p ] = "10,18,23,16".split( splitreg ); p++;
pieces[ p ] = "10,20,13,15".split( splitreg ); p++;
pieces[ p ] = "10,22,12,13".split( splitreg ); p++;
pieces[ p ] = "11,11,15,16".split( splitreg ); p++;
pieces[ p ] = "11,11,23,23".split( splitreg ); p++;
pieces[ p ] = "11,13,20,16".split( splitreg ); p++;
pieces[ p ] = "11,13,23,23".split( splitreg ); p++;
pieces[ p ] = "11,14,15,21".split( splitreg ); p++;
pieces[ p ] = "11,14,17,18".split( splitreg ); p++;
pieces[ p ] = "11,15,12,12".split( splitreg ); p++;
pieces[ p ] = "11,16,16,20".split( splitreg ); p++;
pieces[ p ] = "11,16,20,14".split( splitreg ); p++;
pieces[ p ] = "11,17,14,18".split( splitreg ); p++;
pieces[ p ] = "11,18,15,19".split( splitreg ); p++;
pieces[ p ] = "11,18,15,20".split( splitreg ); p++;
pieces[ p ] = "11,18,17,23".split( splitreg ); p++;
pieces[ p ] = "11,19,20,13".split( splitreg ); p++;
pieces[ p ] = "11,20,21,21".split( splitreg ); p++;
pieces[ p ] = "11,21,12,13".split( splitreg ); p++;
pieces[ p ] = "11,22,19,22".split( splitreg ); p++;
pieces[ p ] = "12,12,18,21".split( splitreg ); p++;
pieces[ p ] = "12,13,23,17".split( splitreg ); p++;
pieces[ p ] = "12,13,23,20".split( splitreg ); p++;
pieces[ p ] = "12,14,16,18".split( splitreg ); p++;
pieces[ p ] = "12,14,19,17".split( splitreg ); p++;
pieces[ p ] = "12,14,21,13".split( splitreg ); p++;
pieces[ p ] = "12,14,22,15".split( splitreg ); p++;
pieces[ p ] = "12,15,18,16".split( splitreg ); p++;
pieces[ p ] = "12,18,13,19".split( splitreg ); p++;
pieces[ p ] = "12,20,15,20".split( splitreg ); p++;
pieces[ p ] = "12,21,14,19".split( splitreg ); p++;
pieces[ p ] = "12,22,13,17".split( splitreg ); p++;
pieces[ p ] = "12,22,16,23".split( splitreg ); p++;
pieces[ p ] = "12,22,21,17".split( splitreg ); p++;
pieces[ p ] = "12,22,23,13".split( splitreg ); p++;
pieces[ p ] = "12,23,21,17".split( splitreg ); p++;
pieces[ p ] = "13,13,13,16".split( splitreg ); p++;
pieces[ p ] = "13,16,15,23".split( splitreg ); p++;
pieces[ p ] = "13,16,18,19".split( splitreg ); p++;
pieces[ p ] = "13,16,21,14".split( splitreg ); p++;
pieces[ p ] = "13,17,18,18".split( splitreg ); p++;
pieces[ p ] = "13,19,18,16".split( splitreg ); p++;
pieces[ p ] = "13,20,21,15".split( splitreg ); p++;
pieces[ p ] = "13,20,21,21".split( splitreg ); p++;
pieces[ p ] = "13,21,14,21".split( splitreg ); p++;
pieces[ p ] = "14,14,15,16".split( splitreg ); p++;
pieces[ p ] = "14,17,16,18".split( splitreg ); p++;
pieces[ p ] = "14,17,19,16".split( splitreg ); p++;
pieces[ p ] = "14,21,18,18".split( splitreg ); p++;
pieces[ p ] = "14,23,15,18".split( splitreg ); p++;
pieces[ p ] = "15,17,20,17".split( splitreg ); p++;
pieces[ p ] = "15,18,17,17".split( splitreg ); p++;
pieces[ p ] = "15,20,16,19".split( splitreg ); p++;
pieces[ p ] = "15,23,17,18".split( splitreg ); p++;
pieces[ p ] = "16,17,16,19".split( splitreg ); p++;
pieces[ p ] = "16,17,19,22".split( splitreg ); p++;
pieces[ p ] = "16,21,21,20".split( splitreg ); p++;
pieces[ p ] = "16,21,22,20".split( splitreg ); p++;
pieces[ p ] = "16,23,18,21".split( splitreg ); p++;
pieces[ p ] = "17,19,22,20".split( splitreg ); p++;
pieces[ p ] = "17,23,20,18".split( splitreg ); p++;
pieces[ p ] = "18,18,19,21".split( splitreg ); p++;
pieces[ p ] = "19,22,22,23".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

