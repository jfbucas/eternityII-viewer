
puzzles[ nb_puzzles ] = "brendan/pieces_18x12.txt.js,Brendan 18x12".split( splitreg ); nb_puzzles++;

if ( puzzle == "brendan/pieces_18x12.txt.js" ) {

board_w = 18;
board_h = 12;


pieces[ p ] = "0,0,1,2".split( splitreg ); p++;
pieces[ p ] = "0,0,1,3".split( splitreg ); p++;
pieces[ p ] = "0,0,4,3".split( splitreg ); p++;
pieces[ p ] = "0,0,5,5".split( splitreg ); p++;
pieces[ p ] = "0,1,10,2".split( splitreg ); p++;
pieces[ p ] = "0,1,11,1".split( splitreg ); p++;
pieces[ p ] = "0,1,11,5".split( splitreg ); p++;
pieces[ p ] = "0,1,12,4".split( splitreg ); p++;
pieces[ p ] = "0,1,15,1".split( splitreg ); p++;
pieces[ p ] = "0,1,16,1".split( splitreg ); p++;
pieces[ p ] = "0,1,17,3".split( splitreg ); p++;
pieces[ p ] = "0,1,18,1".split( splitreg ); p++;
pieces[ p ] = "0,1,19,2".split( splitreg ); p++;
pieces[ p ] = "0,1,20,5".split( splitreg ); p++;
pieces[ p ] = "0,2,6,2".split( splitreg ); p++;
pieces[ p ] = "0,2,8,3".split( splitreg ); p++;
pieces[ p ] = "0,2,9,4".split( splitreg ); p++;
pieces[ p ] = "0,2,14,1".split( splitreg ); p++;
pieces[ p ] = "0,2,15,3".split( splitreg ); p++;
pieces[ p ] = "0,2,16,2".split( splitreg ); p++;
pieces[ p ] = "0,2,18,1".split( splitreg ); p++;
pieces[ p ] = "0,2,18,2".split( splitreg ); p++;
pieces[ p ] = "0,2,20,4".split( splitreg ); p++;
pieces[ p ] = "0,2,20,5".split( splitreg ); p++;
pieces[ p ] = "0,2,21,3".split( splitreg ); p++;
pieces[ p ] = "0,3,8,1".split( splitreg ); p++;
pieces[ p ] = "0,3,9,1".split( splitreg ); p++;
pieces[ p ] = "0,3,9,2".split( splitreg ); p++;
pieces[ p ] = "0,3,9,4".split( splitreg ); p++;
pieces[ p ] = "0,3,9,5".split( splitreg ); p++;
pieces[ p ] = "0,3,11,1".split( splitreg ); p++;
pieces[ p ] = "0,3,11,4".split( splitreg ); p++;
pieces[ p ] = "0,3,15,1".split( splitreg ); p++;
pieces[ p ] = "0,3,17,2".split( splitreg ); p++;
pieces[ p ] = "0,3,19,3".split( splitreg ); p++;
pieces[ p ] = "0,3,19,5".split( splitreg ); p++;
pieces[ p ] = "0,4,7,5".split( splitreg ); p++;
pieces[ p ] = "0,4,8,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,4".split( splitreg ); p++;
pieces[ p ] = "0,4,10,5".split( splitreg ); p++;
pieces[ p ] = "0,4,14,4".split( splitreg ); p++;
pieces[ p ] = "0,4,17,3".split( splitreg ); p++;
pieces[ p ] = "0,4,18,5".split( splitreg ); p++;
pieces[ p ] = "0,4,19,5".split( splitreg ); p++;
pieces[ p ] = "0,4,21,1".split( splitreg ); p++;
pieces[ p ] = "0,4,21,4".split( splitreg ); p++;
pieces[ p ] = "0,5,7,2".split( splitreg ); p++;
pieces[ p ] = "0,5,7,3".split( splitreg ); p++;
pieces[ p ] = "0,5,13,4".split( splitreg ); p++;
pieces[ p ] = "0,5,14,3".split( splitreg ); p++;
pieces[ p ] = "0,5,14,4".split( splitreg ); p++;
pieces[ p ] = "0,5,17,2".split( splitreg ); p++;
pieces[ p ] = "0,5,19,3".split( splitreg ); p++;
pieces[ p ] = "0,5,20,1".split( splitreg ); p++;
pieces[ p ] = "0,5,20,5".split( splitreg ); p++;
pieces[ p ] = "0,5,21,4".split( splitreg ); p++;
pieces[ p ] = "6,6,7,14".split( splitreg ); p++;
pieces[ p ] = "6,6,12,20".split( splitreg ); p++;
pieces[ p ] = "6,6,16,14".split( splitreg ); p++;
pieces[ p ] = "6,6,19,8".split( splitreg ); p++;
pieces[ p ] = "6,8,15,15".split( splitreg ); p++;
pieces[ p ] = "6,8,16,16".split( splitreg ); p++;
pieces[ p ] = "6,9,13,12".split( splitreg ); p++;
pieces[ p ] = "6,9,13,13".split( splitreg ); p++;
pieces[ p ] = "6,11,8,11".split( splitreg ); p++;
pieces[ p ] = "6,11,9,9".split( splitreg ); p++;
pieces[ p ] = "6,11,13,20".split( splitreg ); p++;
pieces[ p ] = "6,12,10,13".split( splitreg ); p++;
pieces[ p ] = "6,12,13,17".split( splitreg ); p++;
pieces[ p ] = "6,12,13,19".split( splitreg ); p++;
pieces[ p ] = "6,13,6,20".split( splitreg ); p++;
pieces[ p ] = "6,13,9,17".split( splitreg ); p++;
pieces[ p ] = "6,13,12,19".split( splitreg ); p++;
pieces[ p ] = "6,13,18,19".split( splitreg ); p++;
pieces[ p ] = "6,14,7,11".split( splitreg ); p++;
pieces[ p ] = "6,14,10,20".split( splitreg ); p++;
pieces[ p ] = "6,14,15,14".split( splitreg ); p++;
pieces[ p ] = "6,15,18,11".split( splitreg ); p++;
pieces[ p ] = "6,15,20,17".split( splitreg ); p++;
pieces[ p ] = "6,15,21,15".split( splitreg ); p++;
pieces[ p ] = "6,16,7,7".split( splitreg ); p++;
pieces[ p ] = "6,17,10,7".split( splitreg ); p++;
pieces[ p ] = "6,17,10,12".split( splitreg ); p++;
pieces[ p ] = "6,17,11,10".split( splitreg ); p++;
pieces[ p ] = "6,17,12,17".split( splitreg ); p++;
pieces[ p ] = "6,17,21,18".split( splitreg ); p++;
pieces[ p ] = "6,18,10,10".split( splitreg ); p++;
pieces[ p ] = "6,18,16,20".split( splitreg ); p++;
pieces[ p ] = "6,19,18,16".split( splitreg ); p++;
pieces[ p ] = "6,19,21,16".split( splitreg ); p++;
pieces[ p ] = "6,20,7,8".split( splitreg ); p++;
pieces[ p ] = "6,20,13,15".split( splitreg ); p++;
pieces[ p ] = "6,20,17,17".split( splitreg ); p++;
pieces[ p ] = "6,21,7,11".split( splitreg ); p++;
pieces[ p ] = "7,7,12,11".split( splitreg ); p++;
pieces[ p ] = "7,7,12,14".split( splitreg ); p++;
pieces[ p ] = "7,8,9,21".split( splitreg ); p++;
pieces[ p ] = "7,8,19,17".split( splitreg ); p++;
pieces[ p ] = "7,8,19,19".split( splitreg ); p++;
pieces[ p ] = "7,9,9,20".split( splitreg ); p++;
pieces[ p ] = "7,9,11,15".split( splitreg ); p++;
pieces[ p ] = "7,10,13,16".split( splitreg ); p++;
pieces[ p ] = "7,10,19,9".split( splitreg ); p++;
pieces[ p ] = "7,11,11,13".split( splitreg ); p++;
pieces[ p ] = "7,11,11,21".split( splitreg ); p++;
pieces[ p ] = "7,11,15,8".split( splitreg ); p++;
pieces[ p ] = "7,12,21,16".split( splitreg ); p++;
pieces[ p ] = "7,13,16,14".split( splitreg ); p++;
pieces[ p ] = "7,13,20,8".split( splitreg ); p++;
pieces[ p ] = "7,14,10,12".split( splitreg ); p++;
pieces[ p ] = "7,14,10,20".split( splitreg ); p++;
pieces[ p ] = "7,14,13,16".split( splitreg ); p++;
pieces[ p ] = "7,14,18,8".split( splitreg ); p++;
pieces[ p ] = "7,15,9,10".split( splitreg ); p++;
pieces[ p ] = "7,15,18,16".split( splitreg ); p++;
pieces[ p ] = "7,17,8,16".split( splitreg ); p++;
pieces[ p ] = "7,17,14,8".split( splitreg ); p++;
pieces[ p ] = "7,17,17,16".split( splitreg ); p++;
pieces[ p ] = "7,17,20,21".split( splitreg ); p++;
pieces[ p ] = "7,18,12,11".split( splitreg ); p++;
pieces[ p ] = "7,19,18,12".split( splitreg ); p++;
pieces[ p ] = "7,19,18,21".split( splitreg ); p++;
pieces[ p ] = "7,20,14,10".split( splitreg ); p++;
pieces[ p ] = "7,20,21,12".split( splitreg ); p++;
pieces[ p ] = "7,21,16,14".split( splitreg ); p++;
pieces[ p ] = "7,21,17,17".split( splitreg ); p++;
pieces[ p ] = "8,9,9,11".split( splitreg ); p++;
pieces[ p ] = "8,9,10,9".split( splitreg ); p++;
pieces[ p ] = "8,9,13,14".split( splitreg ); p++;
pieces[ p ] = "8,9,16,14".split( splitreg ); p++;
pieces[ p ] = "8,9,18,21".split( splitreg ); p++;
pieces[ p ] = "8,10,8,21".split( splitreg ); p++;
pieces[ p ] = "8,10,14,12".split( splitreg ); p++;
pieces[ p ] = "8,10,16,9".split( splitreg ); p++;
pieces[ p ] = "8,10,16,16".split( splitreg ); p++;
pieces[ p ] = "8,11,14,21".split( splitreg ); p++;
pieces[ p ] = "8,12,8,16".split( splitreg ); p++;
pieces[ p ] = "8,12,9,9".split( splitreg ); p++;
pieces[ p ] = "8,13,10,13".split( splitreg ); p++;
pieces[ p ] = "8,13,11,20".split( splitreg ); p++;
pieces[ p ] = "8,13,13,17".split( splitreg ); p++;
pieces[ p ] = "8,13,18,17".split( splitreg ); p++;
pieces[ p ] = "8,14,20,10".split( splitreg ); p++;
pieces[ p ] = "8,15,15,19".split( splitreg ); p++;
pieces[ p ] = "8,17,9,14".split( splitreg ); p++;
pieces[ p ] = "8,18,18,14".split( splitreg ); p++;
pieces[ p ] = "8,19,9,18".split( splitreg ); p++;
pieces[ p ] = "8,19,12,13".split( splitreg ); p++;
pieces[ p ] = "8,19,13,9".split( splitreg ); p++;
pieces[ p ] = "8,20,18,10".split( splitreg ); p++;
pieces[ p ] = "8,21,15,12".split( splitreg ); p++;
pieces[ p ] = "8,21,19,11".split( splitreg ); p++;
pieces[ p ] = "9,12,10,10".split( splitreg ); p++;
pieces[ p ] = "9,12,18,10".split( splitreg ); p++;
pieces[ p ] = "9,13,15,10".split( splitreg ); p++;
pieces[ p ] = "9,13,18,12".split( splitreg ); p++;
pieces[ p ] = "9,13,18,16".split( splitreg ); p++;
pieces[ p ] = "9,15,9,21".split( splitreg ); p++;
pieces[ p ] = "9,15,10,12".split( splitreg ); p++;
pieces[ p ] = "9,16,15,13".split( splitreg ); p++;
pieces[ p ] = "9,16,15,15".split( splitreg ); p++;
pieces[ p ] = "9,17,19,17".split( splitreg ); p++;
pieces[ p ] = "9,17,19,20".split( splitreg ); p++;
pieces[ p ] = "9,20,16,10".split( splitreg ); p++;
pieces[ p ] = "9,21,11,17".split( splitreg ); p++;
pieces[ p ] = "9,21,20,13".split( splitreg ); p++;
pieces[ p ] = "10,11,12,15".split( splitreg ); p++;
pieces[ p ] = "10,11,12,20".split( splitreg ); p++;
pieces[ p ] = "10,13,16,15".split( splitreg ); p++;
pieces[ p ] = "10,14,16,12".split( splitreg ); p++;
pieces[ p ] = "10,15,18,13".split( splitreg ); p++;
pieces[ p ] = "10,16,10,17".split( splitreg ); p++;
pieces[ p ] = "10,16,17,12".split( splitreg ); p++;
pieces[ p ] = "10,16,18,18".split( splitreg ); p++;
pieces[ p ] = "10,16,21,13".split( splitreg ); p++;
pieces[ p ] = "10,17,10,19".split( splitreg ); p++;
pieces[ p ] = "10,19,21,12".split( splitreg ); p++;
pieces[ p ] = "10,21,12,19".split( splitreg ); p++;
pieces[ p ] = "11,11,11,13".split( splitreg ); p++;
pieces[ p ] = "11,11,16,21".split( splitreg ); p++;
pieces[ p ] = "11,11,21,21".split( splitreg ); p++;
pieces[ p ] = "11,13,21,14".split( splitreg ); p++;
pieces[ p ] = "11,14,12,12".split( splitreg ); p++;
pieces[ p ] = "11,15,15,14".split( splitreg ); p++;
pieces[ p ] = "11,15,16,21".split( splitreg ); p++;
pieces[ p ] = "11,16,15,20".split( splitreg ); p++;
pieces[ p ] = "11,18,11,21".split( splitreg ); p++;
pieces[ p ] = "11,20,14,21".split( splitreg ); p++;
pieces[ p ] = "11,20,20,12".split( splitreg ); p++;
pieces[ p ] = "11,21,18,18".split( splitreg ); p++;
pieces[ p ] = "12,12,17,20".split( splitreg ); p++;
pieces[ p ] = "12,13,19,15".split( splitreg ); p++;
pieces[ p ] = "12,15,19,21".split( splitreg ); p++;
pieces[ p ] = "12,16,15,18".split( splitreg ); p++;
pieces[ p ] = "12,18,17,17".split( splitreg ); p++;
pieces[ p ] = "12,18,18,14".split( splitreg ); p++;
pieces[ p ] = "12,19,15,19".split( splitreg ); p++;
pieces[ p ] = "12,20,19,20".split( splitreg ); p++;
pieces[ p ] = "12,20,21,16".split( splitreg ); p++;
pieces[ p ] = "13,13,15,14".split( splitreg ); p++;
pieces[ p ] = "13,14,16,17".split( splitreg ); p++;
pieces[ p ] = "13,14,16,19".split( splitreg ); p++;
pieces[ p ] = "13,21,14,14".split( splitreg ); p++;
pieces[ p ] = "13,21,19,20".split( splitreg ); p++;
pieces[ p ] = "14,14,18,18".split( splitreg ); p++;
pieces[ p ] = "14,18,19,16".split( splitreg ); p++;
pieces[ p ] = "14,18,21,17".split( splitreg ); p++;
pieces[ p ] = "14,19,19,19".split( splitreg ); p++;
pieces[ p ] = "14,20,20,15".split( splitreg ); p++;
pieces[ p ] = "14,20,20,17".split( splitreg ); p++;
pieces[ p ] = "15,15,17,18".split( splitreg ); p++;
pieces[ p ] = "15,15,17,19".split( splitreg ); p++;
pieces[ p ] = "15,15,18,16".split( splitreg ); p++;
pieces[ p ] = "15,21,19,18".split( splitreg ); p++;
pieces[ p ] = "16,19,18,19".split( splitreg ); p++;
pieces[ p ] = "17,20,20,21".split( splitreg ); p++;

// piece,space,rotation
fixed[ f ] = "0,0,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}

