puzzles[ nb_puzzles ] = "voidsolid/voidsolid_hints.js,VoidSolid With Hints".split( splitreg ); nb_puzzles++;

if ( puzzle == "voidsolid/voidsolid_hints.js" ) {

board_w = 16;
board_h = 16;

pieces[ p ] = "0,1,4,0".split( splitreg ); p++;
pieces[ p ] = "0,1,7,2".split( splitreg ); p++;
pieces[ p ] = "0,1,7,3".split( splitreg ); p++;
pieces[ p ] = "0,1,8,4".split( splitreg ); p++;
pieces[ p ] = "0,1,12,3".split( splitreg ); p++;
pieces[ p ] = "0,4,7,4".split( splitreg ); p++;
pieces[ p ] = "0,1,14,2".split( splitreg ); p++;
pieces[ p ] = "0,1,14,5".split( splitreg ); p++;
pieces[ p ] = "0,1,15,2".split( splitreg ); p++;
pieces[ p ] = "0,1,15,4".split( splitreg ); p++;
pieces[ p ] = "0,3,20,3".split( splitreg ); p++;
pieces[ p ] = "0,1,15,5".split( splitreg ); p++;
pieces[ p ] = "0,1,22,5".split( splitreg ); p++;
pieces[ p ] = "0,2,6,4".split( splitreg ); p++;
pieces[ p ] = "0,2,7,5".split( splitreg ); p++;
pieces[ p ] = "0,0,4,5".split( splitreg ); p++;
pieces[ p ] = "0,2,9,5".split( splitreg ); p++;
pieces[ p ] = "0,2,11,3".split( splitreg ); p++;
pieces[ p ] = "0,2,12,5".split( splitreg ); p++;
pieces[ p ] = "0,2,16,1".split( splitreg ); p++;
pieces[ p ] = "0,2,18,1".split( splitreg ); p++;
pieces[ p ] = "0,2,18,4".split( splitreg ); p++;
pieces[ p ] = "0,2,21,3".split( splitreg ); p++;
pieces[ p ] = "0,2,21,4".split( splitreg ); p++;
pieces[ p ] = "0,3,6,2".split( splitreg ); p++;
pieces[ p ] = "0,3,8,5".split( splitreg ); p++;
pieces[ p ] = "0,3,10,5".split( splitreg ); p++;
pieces[ p ] = "0,3,12,2".split( splitreg ); p++;
pieces[ p ] = "0,3,16,4".split( splitreg ); p++;
pieces[ p ] = "0,3,18,1".split( splitreg ); p++;
pieces[ p ] = "0,3,20,1".split( splitreg ); p++;
pieces[ p ] = "0,3,22,4".split( splitreg ); p++;
pieces[ p ] = "0,4,7,2".split( splitreg ); p++;
pieces[ p ] = "0,4,7,3".split( splitreg ); p++;
pieces[ p ] = "0,4,10,2".split( splitreg ); p++;
pieces[ p ] = "0,4,10,5".split( splitreg ); p++;
pieces[ p ] = "0,4,12,5".split( splitreg ); p++;
pieces[ p ] = "0,4,16,1".split( splitreg ); p++;
pieces[ p ] = "0,4,17,3".split( splitreg ); p++;
pieces[ p ] = "0,4,19,1".split( splitreg ); p++;
pieces[ p ] = "0,4,21,1".split( splitreg ); p++;
pieces[ p ] = "0,4,22,2".split( splitreg ); p++;
pieces[ p ] = "0,5,6,1".split( splitreg ); p++;
pieces[ p ] = "0,5,13,1".split( splitreg ); p++;
pieces[ p ] = "0,5,13,2".split( splitreg ); p++;
pieces[ p ] = "0,5,13,4".split( splitreg ); p++;
pieces[ p ] = "0,5,14,1".split( splitreg ); p++;
pieces[ p ] = "0,5,14,4".split( splitreg ); p++;
pieces[ p ] = "0,5,16,3".split( splitreg ); p++;
pieces[ p ] = "0,5,20,2".split( splitreg ); p++;
pieces[ p ] = "0,5,21,3".split( splitreg ); p++;
pieces[ p ] = "0,5,21,4".split( splitreg ); p++;
pieces[ p ] = "6,6,8,11".split( splitreg ); p++;
pieces[ p ] = "6,7,12,17".split( splitreg ); p++;
pieces[ p ] = "6,8,8,13".split( splitreg ); p++;
pieces[ p ] = "6,9,12,10".split( splitreg ); p++;
pieces[ p ] = "6,9,14,14".split( splitreg ); p++;
pieces[ p ] = "6,9,15,18".split( splitreg ); p++;
pieces[ p ] = "6,9,19,20".split( splitreg ); p++;
pieces[ p ] = "6,9,19,22".split( splitreg ); p++;
pieces[ p ] = "6,10,14,19".split( splitreg ); p++;
pieces[ p ] = "6,10,15,8".split( splitreg ); p++;
pieces[ p ] = "6,10,15,16".split( splitreg ); p++;
pieces[ p ] = "6,11,12,14".split( splitreg ); p++;
pieces[ p ] = "6,11,17,15".split( splitreg ); p++;
pieces[ p ] = "6,12,15,8".split( splitreg ); p++;
pieces[ p ] = "6,13,8,11".split( splitreg ); p++;
pieces[ p ] = "6,13,17,21".split( splitreg ); p++;
pieces[ p ] = "6,14,21,10".split( splitreg ); p++;
pieces[ p ] = "6,15,11,16".split( splitreg ); p++;
pieces[ p ] = "6,15,21,17".split( splitreg ); p++;
pieces[ p ] = "6,15,22,9".split( splitreg ); p++;
pieces[ p ] = "6,16,7,22".split( splitreg ); p++;
pieces[ p ] = "6,16,8,20".split( splitreg ); p++;
pieces[ p ] = "6,16,21,10".split( splitreg ); p++;
pieces[ p ] = "6,17,12,20".split( splitreg ); p++;
pieces[ p ] = "6,18,19,18".split( splitreg ); p++;
pieces[ p ] = "6,19,14,15".split( splitreg ); p++;
pieces[ p ] = "6,19,22,13".split( splitreg ); p++;
pieces[ p ] = "6,20,19,9".split( splitreg ); p++;
pieces[ p ] = "3,19,3,0".split( splitreg ); p++;
pieces[ p ] = "6,21,10,15".split( splitreg ); p++;
pieces[ p ] = "6,21,12,16".split( splitreg ); p++;
pieces[ p ] = "6,21,12,19".split( splitreg ); p++;
pieces[ p ] = "6,21,17,22".split( splitreg ); p++;
pieces[ p ] = "10,7,22,19".split( splitreg ); p++;
pieces[ p ] = "6,22,7,11".split( splitreg ); p++;
pieces[ p ] = "6,22,12,21".split( splitreg ); p++;
pieces[ p ] = "6,22,19,9".split( splitreg ); p++;
pieces[ p ] = "7,7,8,18".split( splitreg ); p++;
pieces[ p ] = "7,11,20,15".split( splitreg ); p++;
pieces[ p ] = "7,7,12,20".split( splitreg ); p++;
pieces[ p ] = "7,7,17,20".split( splitreg ); p++;
pieces[ p ] = "7,7,20,15".split( splitreg ); p++;
pieces[ p ] = "7,8,20,19".split( splitreg ); p++;
pieces[ p ] = "5,0,5,17".split( splitreg ); p++;
pieces[ p ] = "7,9,15,15".split( splitreg ); p++;
pieces[ p ] = "7,9,16,11".split( splitreg ); p++;
pieces[ p ] = "7,9,21,10".split( splitreg ); p++;
pieces[ p ] = "7,10,11,19".split( splitreg ); p++;
pieces[ p ] = "7,10,18,9".split( splitreg ); p++;
pieces[ p ] = "7,10,19,9".split( splitreg ); p++;
pieces[ p ] = "7,11,7,14".split( splitreg ); p++;
pieces[ p ] = "7,11,18,13".split( splitreg ); p++;
pieces[ p ] = "7,11,20,13".split( splitreg ); p++;
pieces[ p ] = "7,11,22,13".split( splitreg ); p++;
pieces[ p ] = "7,12,19,14".split( splitreg ); p++;
pieces[ p ] = "7,13,8,11".split( splitreg ); p++;
pieces[ p ] = "7,14,15,19".split( splitreg ); p++;
pieces[ p ] = "7,15,13,14".split( splitreg ); p++;
pieces[ p ] = "7,16,8,10".split( splitreg ); p++;
pieces[ p ] = "7,16,9,20".split( splitreg ); p++;
pieces[ p ] = "7,16,9,22".split( splitreg ); p++;
pieces[ p ] = "7,16,11,11".split( splitreg ); p++;
pieces[ p ] = "7,16,12,22".split( splitreg ); p++;
pieces[ p ] = "7,17,10,15".split( splitreg ); p++;
pieces[ p ] = "7,17,11,13".split( splitreg ); p++;
pieces[ p ] = "7,17,14,18".split( splitreg ); p++;
pieces[ p ] = "7,18,13,22".split( splitreg ); p++;
pieces[ p ] = "7,18,21,19".split( splitreg ); p++;
pieces[ p ] = "7,18,22,12".split( splitreg ); p++;
pieces[ p ] = "7,18,22,14".split( splitreg ); p++;
pieces[ p ] = "7,19,9,8".split( splitreg ); p++;
pieces[ p ] = "7,19,11,15".split( splitreg ); p++;
pieces[ p ] = "7,20,9,9".split( splitreg ); p++;
pieces[ p ] = "7,20,18,19".split( splitreg ); p++;
pieces[ p ] = "7,22,15,11".split( splitreg ); p++;
pieces[ p ] = "8,8,13,12".split( splitreg ); p++;
pieces[ p ] = "8,8,14,20".split( splitreg ); p++;
pieces[ p ] = "8,9,9,9".split( splitreg ); p++;
pieces[ p ] = "8,9,15,15".split( splitreg ); p++;
pieces[ p ] = "8,9,17,19".split( splitreg ); p++;
pieces[ p ] = "8,9,19,22".split( splitreg ); p++;
pieces[ p ] = "8,9,21,20".split( splitreg ); p++;
pieces[ p ] = "8,10,9,21".split( splitreg ); p++;
pieces[ p ] = "8,10,10,16".split( splitreg ); p++;
pieces[ p ] = "8,11,13,13".split( splitreg ); p++;
pieces[ p ] = "8,13,9,19".split( splitreg ); p++;
pieces[ p ] = "8,13,21,21".split( splitreg ); p++;
pieces[ p ] = "8,14,12,16".split( splitreg ); p++;
pieces[ p ] = "8,15,9,11".split( splitreg ); p++;
pieces[ p ] = "8,15,15,11".split( splitreg ); p++;
pieces[ p ] = "8,15,21,17".split( splitreg ); p++;
pieces[ p ] = "8,16,10,9".split( splitreg ); p++;
pieces[ p ] = "8,16,12,10".split( splitreg ); p++;
pieces[ p ] = "8,17,17,16".split( splitreg ); p++;
pieces[ p ] = "8,17,17,17".split( splitreg ); p++;
pieces[ p ] = "8,18,19,19".split( splitreg ); p++;
pieces[ p ] = "8,19,9,15".split( splitreg ); p++;
pieces[ p ] = "8,19,19,21".split( splitreg ); p++;
pieces[ p ] = "8,20,20,14".split( splitreg ); p++;
pieces[ p ] = "8,21,12,19".split( splitreg ); p++;
pieces[ p ] = "8,21,21,11".split( splitreg ); p++;
pieces[ p ] = "8,21,21,16".split( splitreg ); p++;
pieces[ p ] = "8,22,11,16".split( splitreg ); p++;
pieces[ p ] = "8,22,12,20".split( splitreg ); p++;
pieces[ p ] = "8,22,19,9".split( splitreg ); p++;
pieces[ p ] = "9,9,10,12".split( splitreg ); p++;
pieces[ p ] = "9,9,20,10".split( splitreg ); p++;
pieces[ p ] = "9,10,11,16".split( splitreg ); p++;
pieces[ p ] = "1,11,1,0".split( splitreg ); p++;
pieces[ p ] = "9,10,11,18".split( splitreg ); p++;
pieces[ p ] = "9,10,22,10".split( splitreg ); p++;
pieces[ p ] = "9,11,10,16".split( splitreg ); p++;
pieces[ p ] = "9,11,11,12".split( splitreg ); p++;
pieces[ p ] = "8,13,21,17".split( splitreg ); p++;
pieces[ p ] = "9,11,13,16".split( splitreg ); p++;
pieces[ p ] = "9,12,18,11".split( splitreg ); p++;
pieces[ p ] = "9,12,18,15".split( splitreg ); p++;
pieces[ p ] = "9,14,13,22".split( splitreg ); p++;
pieces[ p ] = "6,9,18,21".split( splitreg ); p++;
pieces[ p ] = "9,14,17,15".split( splitreg ); p++;
pieces[ p ] = "9,14,21,16".split( splitreg ); p++;
pieces[ p ] = "9,15,13,16".split( splitreg ); p++;
pieces[ p ] = "9,15,14,13".split( splitreg ); p++;
pieces[ p ] = "3,0,3,9".split( splitreg ); p++;
pieces[ p ] = "9,16,11,19".split( splitreg ); p++;
pieces[ p ] = "9,17,10,11".split( splitreg ); p++;
pieces[ p ] = "9,17,13,21".split( splitreg ); p++;
pieces[ p ] = "9,18,15,15".split( splitreg ); p++;
pieces[ p ] = "9,19,12,17".split( splitreg ); p++;
pieces[ p ] = "9,19,13,20".split( splitreg ); p++;
pieces[ p ] = "9,19,20,21".split( splitreg ); p++;
pieces[ p ] = "9,19,21,18".split( splitreg ); p++;
pieces[ p ] = "9,20,15,19".split( splitreg ); p++;
pieces[ p ] = "9,20,19,11".split( splitreg ); p++;
pieces[ p ] = "9,21,14,13".split( splitreg ); p++;
pieces[ p ] = "9,21,18,17".split( splitreg ); p++;
pieces[ p ] = "9,22,18,14".split( splitreg ); p++;
pieces[ p ] = "10,10,15,14".split( splitreg ); p++;
pieces[ p ] = "10,10,17,12".split( splitreg ); p++;
pieces[ p ] = "10,12,12,14".split( splitreg ); p++;
pieces[ p ] = "10,13,10,15".split( splitreg ); p++;
pieces[ p ] = "10,13,13,19".split( splitreg ); p++;
pieces[ p ] = "10,13,19,16".split( splitreg ); p++;
pieces[ p ] = "10,14,17,18".split( splitreg ); p++;
pieces[ p ] = "10,15,21,17".split( splitreg ); p++;
pieces[ p ] = "10,17,19,16".split( splitreg ); p++;
pieces[ p ] = "10,18,14,11".split( splitreg ); p++;
pieces[ p ] = "10,19,18,17".split( splitreg ); p++;
pieces[ p ] = "10,19,21,18".split( splitreg ); p++;
pieces[ p ] = "10,21,11,14".split( splitreg ); p++;
pieces[ p ] = "10,21,21,20".split( splitreg ); p++;
pieces[ p ] = "10,22,19,13".split( splitreg ); p++;
pieces[ p ] = "11,11,11,20".split( splitreg ); p++;
pieces[ p ] = "11,11,12,20".split( splitreg ); p++;
pieces[ p ] = "11,11,13,16".split( splitreg ); p++;
pieces[ p ] = "11,13,19,14".split( splitreg ); p++;
pieces[ p ] = "11,13,22,17".split( splitreg ); p++;
pieces[ p ] = "11,16,18,18".split( splitreg ); p++;
pieces[ p ] = "11,17,15,21".split( splitreg ); p++;
pieces[ p ] = "11,18,13,21".split( splitreg ); p++;
pieces[ p ] = "11,18,17,19".split( splitreg ); p++;
pieces[ p ] = "11,22,21,16".split( splitreg ); p++;
pieces[ p ] = "12,16,18,20".split( splitreg ); p++;
pieces[ p ] = "12,17,17,15".split( splitreg ); p++;
pieces[ p ] = "12,17,17,21".split( splitreg ); p++;
pieces[ p ] = "12,17,21,19".split( splitreg ); p++;
pieces[ p ] = "12,18,19,20".split( splitreg ); p++;
pieces[ p ] = "12,19,13,15".split( splitreg ); p++;
pieces[ p ] = "12,19,17,15".split( splitreg ); p++;
pieces[ p ] = "12,19,17,18".split( splitreg ); p++;
pieces[ p ] = "12,19,18,17".split( splitreg ); p++;
pieces[ p ] = "12,20,14,16".split( splitreg ); p++;
pieces[ p ] = "12,20,18,18".split( splitreg ); p++;
pieces[ p ] = "12,20,18,21".split( splitreg ); p++;
pieces[ p ] = "12,22,13,17".split( splitreg ); p++;
pieces[ p ] = "12,22,18,13".split( splitreg ); p++;
pieces[ p ] = "13,13,17,20".split( splitreg ); p++;
pieces[ p ] = "13,13,20,19".split( splitreg ); p++;
pieces[ p ] = "13,13,21,19".split( splitreg ); p++;
pieces[ p ] = "13,14,15,19".split( splitreg ); p++;
pieces[ p ] = "13,14,18,18".split( splitreg ); p++;
pieces[ p ] = "13,15,14,21".split( splitreg ); p++;
pieces[ p ] = "13,18,15,18".split( splitreg ); p++;
pieces[ p ] = "13,19,17,20".split( splitreg ); p++;
pieces[ p ] = "13,20,22,16".split( splitreg ); p++;
pieces[ p ] = "13,20,22,18".split( splitreg ); p++;
pieces[ p ] = "14,14,22,19".split( splitreg ); p++;
pieces[ p ] = "14,18,16,16".split( splitreg ); p++;
pieces[ p ] = "2,1,0,0".split( splitreg ); p++;
pieces[ p ] = "14,21,17,21".split( splitreg ); p++;
pieces[ p ] = "14,22,17,16".split( splitreg ); p++;
pieces[ p ] = "15,15,20,17".split( splitreg ); p++;
pieces[ p ] = "15,16,20,20".split( splitreg ); p++;
pieces[ p ] = "8,3,0,3".split( splitreg ); p++;
pieces[ p ] = "15,20,17,21".split( splitreg ); p++;
pieces[ p ] = "15,20,17,22".split( splitreg ); p++;
pieces[ p ] = "15,22,20,20".split( splitreg ); p++;
pieces[ p ] = "16,18,22,19".split( splitreg ); p++;
pieces[ p ] = "21,2,0,2".split( splitreg ); p++;
pieces[ p ] = "16,19,17,17".split( splitreg ); p++;
pieces[ p ] = "16,19,19,18".split( splitreg ); p++;
pieces[ p ] = "17,22,22,20".split( splitreg ); p++;
pieces[ p ] = "19,19,19,20".split( splitreg ); p++;
pieces[ p ] = "2,0,0,5".split( splitreg ); p++;

// piece,space,rotation

fixed[ f ] = "0,0,3".split( splitreg ); f++;
fixed[ f ] = "5,5,2".split( splitreg ); f++;
fixed[ f ] = "10,10,2".split( splitreg ); f++;
fixed[ f ] = "15,15,2".split( splitreg ); f++;
fixed[ f ] = "80,80,3".split( splitreg ); f++;
fixed[ f ] = "85,85,0".split( splitreg ); f++;
fixed[ f ] = "90,90,0".split( splitreg ); f++;
fixed[ f ] = "95,95,1".split( splitreg ); f++;
fixed[ f ] = "160,160,3".split( splitreg ); f++;
fixed[ f ] = "165,165,0".split( splitreg ); f++;
fixed[ f ] = "170,170,0".split( splitreg ); f++;
fixed[ f ] = "175,175,1".split( splitreg ); f++;
fixed[ f ] = "240,240,0".split( splitreg ); f++;
fixed[ f ] = "245,245,0".split( splitreg ); f++;
fixed[ f ] = "250,250,0".split( splitreg ); f++;
fixed[ f ] = "255,255,1".split( splitreg ); f++;

nb_pieces = p;
nb_fixed = f;

}
