puzzles[ nb_puzzles ] = "voidsolid/voidsolid.js,VoidSolid".split( splitreg ); nb_puzzles++;

if ( puzzle == "voidsolid/voidsolid.js" ) {

board_w = 16;
board_h = 16;

pieces[ p ] = "0,0,1,4".split( splitreg); p++;
pieces[ p ] = "0,0,2,1".split( splitreg); p++;
pieces[ p ] = "0,0,4,5".split( splitreg); p++;
pieces[ p ] = "0,0,5,2".split( splitreg); p++;
pieces[ p ] = "0,1,6,4".split( splitreg); p++;
pieces[ p ] = "0,1,9,1".split( splitreg); p++;
pieces[ p ] = "0,1,10,3".split( splitreg); p++;
pieces[ p ] = "0,1,12,2".split( splitreg); p++;
pieces[ p ] = "0,1,12,5".split( splitreg); p++;
pieces[ p ] = "0,1,13,2".split( splitreg); p++;
pieces[ p ] = "0,1,13,4".split( splitreg); p++;
pieces[ p ] = "0,1,13,5".split( splitreg); p++;
pieces[ p ] = "0,1,20,5".split( splitreg); p++;
pieces[ p ] = "0,1,22,2".split( splitreg); p++;
pieces[ p ] = "0,1,22,3".split( splitreg); p++;
pieces[ p ] = "0,2,7,5".split( splitreg); p++;
pieces[ p ] = "0,2,9,3".split( splitreg); p++;
pieces[ p ] = "0,2,10,5".split( splitreg); p++;
pieces[ p ] = "0,2,14,1".split( splitreg); p++;
pieces[ p ] = "0,2,16,1".split( splitreg); p++;
pieces[ p ] = "0,2,16,4".split( splitreg); p++;
pieces[ p ] = "0,2,19,2".split( splitreg); p++;
pieces[ p ] = "0,2,19,3".split( splitreg); p++;
pieces[ p ] = "0,2,19,4".split( splitreg); p++;
pieces[ p ] = "0,2,21,4".split( splitreg); p++;
pieces[ p ] = "0,2,22,5".split( splitreg); p++;
pieces[ p ] = "0,3,6,3".split( splitreg); p++;
pieces[ p ] = "0,3,6,5".split( splitreg); p++;
pieces[ p ] = "0,3,7,3".split( splitreg); p++;
pieces[ p ] = "0,3,8,5".split( splitreg); p++;
pieces[ p ] = "0,3,10,2".split( splitreg); p++;
pieces[ p ] = "0,3,14,4".split( splitreg); p++;
pieces[ p ] = "0,3,16,1".split( splitreg); p++;
pieces[ p ] = "0,3,17,3".split( splitreg); p++;
pieces[ p ] = "0,3,18,1".split( splitreg); p++;
pieces[ p ] = "0,3,18,3".split( splitreg); p++;
pieces[ p ] = "0,3,20,4".split( splitreg); p++;
pieces[ p ] = "0,3,21,2".split( splitreg); p++;
pieces[ p ] = "0,4,8,2".split( splitreg); p++;
pieces[ p ] = "0,4,8,5".split( splitreg); p++;
pieces[ p ] = "0,4,10,5".split( splitreg); p++;
pieces[ p ] = "0,4,14,1".split( splitreg); p++;
pieces[ p ] = "0,4,15,3".split( splitreg); p++;
pieces[ p ] = "0,4,17,1".split( splitreg); p++;
pieces[ p ] = "0,4,19,1".split( splitreg); p++;
pieces[ p ] = "0,4,20,2".split( splitreg); p++;
pieces[ p ] = "0,4,22,2".split( splitreg); p++;
pieces[ p ] = "0,4,22,3".split( splitreg); p++;
pieces[ p ] = "0,4,22,4".split( splitreg); p++;
pieces[ p ] = "0,5,11,1".split( splitreg); p++;
pieces[ p ] = "0,5,11,2".split( splitreg); p++;
pieces[ p ] = "0,5,11,4".split( splitreg); p++;
pieces[ p ] = "0,5,12,1".split( splitreg); p++;
pieces[ p ] = "0,5,12,4".split( splitreg); p++;
pieces[ p ] = "0,5,14,3".split( splitreg); p++;
pieces[ p ] = "0,5,15,5".split( splitreg); p++;
pieces[ p ] = "0,5,18,2".split( splitreg); p++;
pieces[ p ] = "0,5,19,3".split( splitreg); p++;
pieces[ p ] = "0,5,19,4".split( splitreg); p++;
pieces[ p ] = "0,5,21,1".split( splitreg); p++;
pieces[ p ] = "6,6,11,10".split( splitreg); p++;
pieces[ p ] = "6,6,11,21".split( splitreg); p++;
pieces[ p ] = "6,6,12,18".split( splitreg); p++;
pieces[ p ] = "6,7,7,7".split( splitreg); p++;
pieces[ p ] = "6,7,13,13".split( splitreg); p++;
pieces[ p ] = "6,7,15,17".split( splitreg); p++;
pieces[ p ] = "6,7,17,20".split( splitreg); p++;
pieces[ p ] = "6,7,19,18".split( splitreg); p++;
pieces[ p ] = "6,8,7,19".split( splitreg); p++;
pieces[ p ] = "6,8,8,14".split( splitreg); p++;
pieces[ p ] = "6,8,22,14".split( splitreg); p++;
pieces[ p ] = "6,9,11,11".split( splitreg); p++;
pieces[ p ] = "6,9,21,11".split( splitreg); p++;
pieces[ p ] = "6,9,21,21".split( splitreg); p++;
pieces[ p ] = "6,9,22,11".split( splitreg); p++;
pieces[ p ] = "6,11,7,17".split( splitreg); p++;
pieces[ p ] = "6,11,19,15".split( splitreg); p++;
pieces[ p ] = "6,11,19,19".split( splitreg); p++;
pieces[ p ] = "6,12,10,14".split( splitreg); p++;
pieces[ p ] = "6,13,7,9".split( splitreg); p++;
pieces[ p ] = "6,13,13,9".split( splitreg); p++;
pieces[ p ] = "6,13,19,15".split( splitreg); p++;
pieces[ p ] = "6,14,8,7".split( splitreg); p++;
pieces[ p ] = "6,14,10,8".split( splitreg); p++;
pieces[ p ] = "6,15,15,14".split( splitreg); p++;
pieces[ p ] = "6,15,15,15".split( splitreg); p++;
pieces[ p ] = "6,16,17,17".split( splitreg); p++;
pieces[ p ] = "6,16,22,22".split( splitreg); p++;
pieces[ p ] = "6,17,7,13".split( splitreg); p++;
pieces[ p ] = "6,17,17,19".split( splitreg); p++;
pieces[ p ] = "6,18,17,22".split( splitreg); p++;
pieces[ p ] = "6,18,18,12".split( splitreg); p++;
pieces[ p ] = "6,18,21,14".split( splitreg); p++;
pieces[ p ] = "6,19,10,17".split( splitreg); p++;
pieces[ p ] = "6,19,19,9".split( splitreg); p++;
pieces[ p ] = "6,19,19,14".split( splitreg); p++;
pieces[ p ] = "6,20,9,14".split( splitreg); p++;
pieces[ p ] = "6,20,10,18".split( splitreg); p++;
pieces[ p ] = "6,20,17,7".split( splitreg); p++;
pieces[ p ] = "6,21,8,13".split( splitreg); p++;
pieces[ p ] = "6,21,10,13".split( splitreg); p++;
pieces[ p ] = "6,22,17,7".split( splitreg); p++;
pieces[ p ] = "7,7,8,10".split( splitreg); p++;
pieces[ p ] = "7,7,18,8".split( splitreg); p++;
pieces[ p ] = "7,7,22,18".split( splitreg); p++;
pieces[ p ] = "7,8,9,14".split( splitreg); p++;
pieces[ p ] = "7,8,9,16".split( splitreg); p++;
pieces[ p ] = "7,8,20,8".split( splitreg); p++;
pieces[ p ] = "7,9,8,14".split( splitreg); p++;
pieces[ p ] = "7,9,9,10".split( splitreg); p++;
pieces[ p ] = "7,9,11,14".split( splitreg); p++;
pieces[ p ] = "7,10,8,21".split( splitreg); p++;
pieces[ p ] = "7,10,16,9".split( splitreg); p++;
pieces[ p ] = "7,10,16,13".split( splitreg); p++;
pieces[ p ] = "7,12,11,20".split( splitreg); p++;
pieces[ p ] = "7,12,12,21".split( splitreg); p++;
pieces[ p ] = "7,12,15,13".split( splitreg); p++;
pieces[ p ] = "7,12,19,14".split( splitreg); p++;
pieces[ p ] = "7,13,11,14".split( splitreg); p++;
pieces[ p ] = "7,13,12,11".split( splitreg); p++;
pieces[ p ] = "7,13,13,22".split( splitreg); p++;
pieces[ p ] = "7,13,16,21".split( splitreg); p++;
pieces[ p ] = "7,14,9,17".split( splitreg); p++;
pieces[ p ] = "7,14,9,22".split( splitreg); p++;
pieces[ p ] = "7,15,8,9".split( splitreg); p++;
pieces[ p ] = "7,15,11,19".split( splitreg); p++;
pieces[ p ] = "7,16,13,13".split( splitreg); p++;
pieces[ p ] = "7,16,19,21".split( splitreg); p++;
pieces[ p ] = "7,17,10,15".split( splitreg); p++;
pieces[ p ] = "7,17,11,18".split( splitreg); p++;
pieces[ p ] = "7,17,18,19".split( splitreg); p++;
pieces[ p ] = "7,17,18,21".split( splitreg); p++;
pieces[ p ] = "7,17,19,16".split( splitreg); p++;
pieces[ p ] = "7,17,20,21".split( splitreg); p++;
pieces[ p ] = "7,18,13,17".split( splitreg); p++;
pieces[ p ] = "7,18,17,9".split( splitreg); p++;
pieces[ p ] = "7,18,22,14".split( splitreg); p++;
pieces[ p ] = "7,19,8,22".split( splitreg); p++;
pieces[ p ] = "7,19,12,11".split( splitreg); p++;
pieces[ p ] = "7,19,16,15".split( splitreg); p++;
pieces[ p ] = "7,20,16,12".split( splitreg); p++;
pieces[ p ] = "7,20,22,14".split( splitreg); p++;
pieces[ p ] = "7,21,13,20".split( splitreg); p++;
pieces[ p ] = "7,21,18,17".split( splitreg); p++;
pieces[ p ] = "7,21,20,17".split( splitreg); p++;
pieces[ p ] = "7,22,8,16".split( splitreg); p++;
pieces[ p ] = "7,22,8,17".split( splitreg); p++;
pieces[ p ] = "8,8,13,12".split( splitreg); p++;
pieces[ p ] = "8,8,15,10".split( splitreg); p++;
pieces[ p ] = "8,9,17,22".split( splitreg); p++;
pieces[ p ] = "8,10,10,12".split( splitreg); p++;
pieces[ p ] = "8,11,8,13".split( splitreg); p++;
pieces[ p ] = "8,11,11,17".split( splitreg); p++;
pieces[ p ] = "8,11,17,14".split( splitreg); p++;
pieces[ p ] = "8,12,15,16".split( splitreg); p++;
pieces[ p ] = "8,12,17,21".split( splitreg); p++;
pieces[ p ] = "8,13,14,21".split( splitreg); p++;
pieces[ p ] = "8,13,19,15".split( splitreg); p++;
pieces[ p ] = "8,13,21,19".split( splitreg); p++;
pieces[ p ] = "8,13,22,15".split( splitreg); p++;
pieces[ p ] = "8,15,17,14".split( splitreg); p++;
pieces[ p ] = "8,16,12,9".split( splitreg); p++;
pieces[ p ] = "8,17,16,15".split( splitreg); p++;
pieces[ p ] = "8,17,19,16".split( splitreg); p++;
pieces[ p ] = "8,19,9,12".split( splitreg); p++;
pieces[ p ] = "8,19,19,18".split( splitreg); p++;
pieces[ p ] = "8,20,17,11".split( splitreg); p++;
pieces[ p ] = "8,21,12,19".split( splitreg); p++;
pieces[ p ] = "8,21,14,19".split( splitreg); p++;
pieces[ p ] = "8,22,20,17".split( splitreg); p++;
pieces[ p ] = "9,9,9,18".split( splitreg); p++;
pieces[ p ] = "9,9,10,18".split( splitreg); p++;
pieces[ p ] = "9,9,11,14".split( splitreg); p++;
pieces[ p ] = "9,9,22,14".split( splitreg); p++;
pieces[ p ] = "9,10,12,21".split( splitreg); p++;
pieces[ p ] = "9,11,17,12".split( splitreg); p++;
pieces[ p ] = "9,11,20,15".split( splitreg); p++;
pieces[ p ] = "9,11,22,15".split( splitreg); p++;
pieces[ p ] = "9,13,22,17".split( splitreg); p++;
pieces[ p ] = "9,14,16,16".split( splitreg); p++;
pieces[ p ] = "9,14,21,13".split( splitreg); p++;
pieces[ p ] = "9,15,13,19".split( splitreg); p++;
pieces[ p ] = "9,15,13,21".split( splitreg); p++;
pieces[ p ] = "9,16,11,19".split( splitreg); p++;
pieces[ p ] = "9,16,11,22".split( splitreg); p++;
pieces[ p ] = "9,16,15,17".split( splitreg); p++;
pieces[ p ] = "9,18,11,22".split( splitreg); p++;
pieces[ p ] = "9,18,13,22".split( splitreg); p++;
pieces[ p ] = "9,20,11,22".split( splitreg); p++;
pieces[ p ] = "9,20,19,14".split( splitreg); p++;
pieces[ p ] = "9,21,20,22".split( splitreg); p++;
pieces[ p ] = "9,22,12,22".split( splitreg); p++;
pieces[ p ] = "9,22,20,13".split( splitreg); p++;
pieces[ p ] = "10,14,16,18".split( splitreg); p++;
pieces[ p ] = "10,14,21,19".split( splitreg); p++;
pieces[ p ] = "10,15,15,13".split( splitreg); p++;
pieces[ p ] = "10,15,15,19".split( splitreg); p++;
pieces[ p ] = "10,15,19,17".split( splitreg); p++;
pieces[ p ] = "10,15,21,22".split( splitreg); p++;
pieces[ p ] = "10,16,17,18".split( splitreg); p++;
pieces[ p ] = "10,17,11,13".split( splitreg); p++;
pieces[ p ] = "10,17,12,22".split( splitreg); p++;
pieces[ p ] = "10,17,15,13".split( splitreg); p++;
pieces[ p ] = "10,17,15,16".split( splitreg); p++;
pieces[ p ] = "10,17,16,15".split( splitreg); p++;
pieces[ p ] = "10,17,21,19".split( splitreg); p++;
pieces[ p ] = "10,18,12,14".split( splitreg); p++;
pieces[ p ] = "10,18,16,16".split( splitreg); p++;
pieces[ p ] = "10,18,16,19".split( splitreg); p++;
pieces[ p ] = "10,18,21,15".split( splitreg); p++;
pieces[ p ] = "10,18,22,22".split( splitreg); p++;
pieces[ p ] = "10,19,21,20".split( splitreg); p++;
pieces[ p ] = "10,20,11,15".split( splitreg); p++;
pieces[ p ] = "10,20,16,11".split( splitreg); p++;
pieces[ p ] = "10,20,22,14".split( splitreg); p++;
pieces[ p ] = "10,22,16,20".split( splitreg); p++;
pieces[ p ] = "11,11,15,18".split( splitreg); p++;
pieces[ p ] = "11,11,18,17".split( splitreg); p++;
pieces[ p ] = "11,11,19,17".split( splitreg); p++;
pieces[ p ] = "11,12,13,17".split( splitreg); p++;
pieces[ p ] = "11,12,16,16".split( splitreg); p++;
pieces[ p ] = "11,12,22,13".split( splitreg); p++;
pieces[ p ] = "11,13,12,19".split( splitreg); p++;
pieces[ p ] = "11,15,19,21".split( splitreg); p++;
pieces[ p ] = "11,16,13,16".split( splitreg); p++;
pieces[ p ] = "11,17,15,18".split( splitreg); p++;
pieces[ p ] = "11,18,20,14".split( splitreg); p++;
pieces[ p ] = "11,18,20,16".split( splitreg); p++;
pieces[ p ] = "11,20,22,16".split( splitreg); p++;
pieces[ p ] = "11,21,17,20".split( splitreg); p++;
pieces[ p ] = "12,12,20,17".split( splitreg); p++;
pieces[ p ] = "12,13,17,22".split( splitreg); p++;
pieces[ p ] = "12,13,21,17".split( splitreg); p++;
pieces[ p ] = "12,16,14,14".split( splitreg); p++;
pieces[ p ] = "12,16,22,15".split( splitreg); p++;
pieces[ p ] = "12,19,15,19".split( splitreg); p++;
pieces[ p ] = "12,20,15,14".split( splitreg); p++;
pieces[ p ] = "12,22,16,20".split( splitreg); p++;
pieces[ p ] = "13,13,18,15".split( splitreg); p++;
pieces[ p ] = "13,14,18,18".split( splitreg); p++;
pieces[ p ] = "13,18,15,19".split( splitreg); p++;
pieces[ p ] = "13,18,15,20".split( splitreg); p++;
pieces[ p ] = "13,19,15,21".split( splitreg); p++;
pieces[ p ] = "13,20,18,18".split( splitreg); p++;
pieces[ p ] = "13,22,22,18".split( splitreg); p++;
pieces[ p ] = "14,16,20,17".split( splitreg); p++;
pieces[ p ] = "14,17,15,15".split( splitreg); p++;
pieces[ p ] = "14,17,17,16".split( splitreg); p++;
pieces[ p ] = "14,22,20,21".split( splitreg); p++;
pieces[ p ] = "15,18,22,22".split( splitreg); p++;
pieces[ p ] = "15,20,20,18".split( splitreg); p++;
pieces[ p ] = "15,20,21,19".split( splitreg); p++;
pieces[ p ] = "16,17,16,21".split( splitreg); p++;
pieces[ p ] = "16,17,22,18".split( splitreg); p++;
pieces[ p ] = "16,19,17,22".split( splitreg); p++;
pieces[ p ] = "17,17,17,18".split( splitreg); p++;

// piece,space,rotation
/*
fixed[ f ] = "0,0,0".split( splitreg ); f++;
fixed[ f ] = "5,5,0".split( splitreg ); f++;
fixed[ f ] = "10,10,0".split( splitreg ); f++;
fixed[ f ] = "15,15,0".split( splitreg ); f++;
fixed[ f ] = "80,80,0".split( splitreg ); f++;
fixed[ f ] = "85,85,0".split( splitreg ); f++;
fixed[ f ] = "90,90,0".split( splitreg ); f++;
fixed[ f ] = "95,95,0".split( splitreg ); f++;
fixed[ f ] = "160,160,0".split( splitreg ); f++;
fixed[ f ] = "165,165,0".split( splitreg ); f++;
fixed[ f ] = "170,170,0".split( splitreg ); f++;
fixed[ f ] = "175,175,0".split( splitreg ); f++;
fixed[ f ] = "240,240,0".split( splitreg ); f++;
fixed[ f ] = "245,245,0".split( splitreg ); f++;
fixed[ f ] = "250,250,0".split( splitreg ); f++;
fixed[ f ] = "255,255,0".split( splitreg ); f++;
*/
nb_pieces = p;
nb_fixed = f;

}
